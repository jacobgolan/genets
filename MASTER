
setwd("/Volumes/Desassossego/finalizing_genets")

library(adegenet)
library(poppr)
library(phangorn)
library(dartR)


maf006.mx.5<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.raw", 
                        map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.map", quiet = FALSE,
                        parallel = require("parallel"), n.cores = NULL)

het.snp.1<-gl.report.heterozygosity(maf006.mx.5)


myPops <- as.factor(c('old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'CA_old',	'old_EU',	'D2.04',	'D2.04',	
                      'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',
                      'D2.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'old_EU',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',
                      'D3.14',	'Agraria',	'Agraria',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',
                      'Mira',	'Mira',	'Mira',	'Mira',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',
                      'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D3.15',	'D3.15',	'D3.15'))
pop(maf006.mx.5)<-myPops

het.snp<-gl.report.heterozygosity(maf006.mx.5)



gl.report.callrate(maf006.mx.5, method = "loc")

#Reporting for a genlight object
#Note: Missing values most commonly arise from restriction site mutation.

#Method set to loc
#Loci with no missing values = 5098 [1.9%]
#< 5% missing values = 34370 [12.6%]
#< 10% missing values = 61939 [22.7%]
#< 15% missing values = 85499 [31.3%]
#< 20% missing values = 114492 [42%]
#< 25% missing values = 137467 [50.4%]
#< 30% missing values = 159876 [58.6%]
#< 35% missing values = 188424 [69.1%]
#< 40% missing values = 212223 [77.8%]
#< 45% missing values = 237794 [87.2%]
#< 50% missing values = 272735 [100%]
#[1] "Completed"

gl.report.callrate(maf006.mx.5, method = "ind")

#Reporting for a genlight object
#Note: Missing values most commonly arise from restriction site mutation.
#
#Individuals no missing values = 0 [0%] across loci; all individuals would be filtered
#with less than or equal to 5% = 13 [15.1%]; 73 individuals would be filtered
#with less than or equal to 10% = 29 [33.7%]; 57 individuals would be filtered
#with less than or equal to 15% = 42 [48.8%]; 44 individuals would be filtered
#with less than or equal to 20% = 51 [59.3%]; 35 individuals would be filtered
#with less than or equal to 25% = 56 [65.1%]; 30 individuals would be filtered
#with less than or equal to 30% = 61 [70.9%]; 25 individuals would be filtered
#with less than or equal to 35% = 66 [76.7%]; 20 individuals would be filtered
#with less than or equal to 40% = 68 [79.1%]; 18 individuals would be filtered
#with less than or equal to 45% = 70 [81.4%]; 16 individuals would be filtered
#with less than or equal to 50% = 72 [83.7%]; 14 individuals would be filtered
#with less than or equal to 55% = 73 [84.9%]; 13 individuals would be filtered
#with less than or equal to 60% = 74 [86%]; 12 individuals would be filtered
#with less than or equal to 65% = 77 [89.5%]; 9 individuals would be filtered
#with less than or equal to 70% = 80 [93%]; 6 individuals would be filtered
#with less than or equal to 75% = 82 [95.3%]; 4 individuals would be filtered
#with less than or equal to 80% = 82 [95.3%]; 4 individuals would be filtered
#with less than or equal to 85% = 83 [96.5%]; 3 individuals would be filtered
#with less than or equal to 90% = 84 [97.7%]; 2 individuals would be filtered
#with less than or equal to 95% = 86 [100%]; 0 individuals would be filtered

pop(maf006.mx.5)<-myPops
gl.report.pa(maf006.mx.5, id="10511")
#Table showing number of loci with private alleles
#217 D2.15 
#246 D2.14 
#473 D2.04 
#other pops are too small for algorithm

gl.percent.freq(maf006.mx.5, v=5) #per locus per pop report

#maf
test<-as.data.frame(gl.report.maf(maf006.mx.5))
ggplot(test, aes(x=n))+geom_density()


gl.report.ld(maf006.mx.5)

gl.fixed.diff(maf006.mx.5, tloc = 0, test = FALSE, delta = 0.02, reps = 1000,
              rm.global.monomorphs = TRUE, pb = TRUE, v = 2)

gl.gene.freq(maf006.mx.5, method = pop(maf006.mx.5), stat = "mean")

cha<-gl.pcoa(maf006.mx.5, nfactors = 5, parallel = FALSE, n.cores = 2, v = TRUE)
gl.pcoa.scree(cha)

gl.pcoa.plot(cha, maf006.mx.5, scale = FALSE, ellipse = FALSE, p = 0.95,
             labels = "pop", hadjust = 1.5, vadjust = 1, xaxis = 1, yaxis = 2)

gl.pcoa.plot.3d(cha, maf006.mx.5, title = "PCoA", xaxis = 1, yaxis = 2, zaxis = 3,
                shape = "sphere", radius = 2, legend = "topright")

gl.pcoa.pop(gl, c = "none", method = "euclidean")

###################
# AFLP data
setwd("~/Dropbox/Genet Size/Jacob Analyses")

library(phangorn)
library(hierfstat)
library(poppr)
library(adegenet)
library("RColorBrewer")
library(gplots)
library(vcfR)
library(magrittr)
library(ggtree)


#AFLP
hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")

hier.gi<-as.genind(as.matrix(hier))

pop(hier.gi)<-rownames(as.matrix(hier.gi))

het.aflp.1<-gl.report.heterozygosity(hier.gi)


#aflp.tree.boot<-aboot(hier.gl, dist = bitwise.dist, sample = 200, tree = "upgma", cutoff = 0, quiet = TRUE)

pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

pop(hier.gi)<-pops.aflp
het.aflp<-gl.report.heterozygosity(hier.gi)


CESAC<-popsub(hier.gi, sublist=c("CESAC_2002", "CESAC_2006"))
plot(nj(dist(CESAC)), type="f")
gl.report.monomorphs(CESAC[1:2,])
dist(CESAC[1:2,])



######################### Other filters



setwd("/Volumes/Desassossego/VCF_filter")

maf006.mx.5.d2.04<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D2.04.HWE.recode.vcf.raw", 
                              map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D2.04.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)

maf006.mx.5.d2.14<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D2.14.HWE.recode.vcf.raw", 
                              map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D2.14.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.d2.15<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D2.15.HWE.recode.vcf.raw", 
                              map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D2.15.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.d3.04<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D3.04.HWE.recode.vcf.raw", 
                              map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D3.04.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.d3.14<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D3.14..HWE.recode.vcf.raw", 
                              map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D3.14..HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.d3.15<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D3.15.HWE.recode.vcf.raw", 
                              map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.D3.15.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)

maf006.mx.5.agraria<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.agraria.HWE.recode.vcf.raw", 
                                map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.agraria.HWE.recode.vcf.map", quiet = FALSE,
                                parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.mira<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.mira.HWE.recode.vcf.raw", 
                             map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.mira.HWE.recode.vcf.map", quiet = FALSE,
                             parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.vilarinho<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.vilarinho.HWE.recode.vcf.raw", 
                                  map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.vilarinho.HWE.recode.vcf.map", quiet = FALSE,
                                  parallel = require("parallel"), n.cores = NULL)
maf006.mx.5.old_EU<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.old_EU.HWE.recode.vcf.raw", 
                               map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.old_EU.HWE.recode.vcf.map", quiet = FALSE,
                               parallel = require("parallel"), n.cores = NULL)



maf006.mx.5.gi<-as.genind(as.matrix(maf006.mx.5))
maf006.mx.5.d2.04.gi<-as.genind(as.matrix(maf006.mx.5.d2.04))
maf006.mx.5.d2.14.gi<-as.genind(as.matrix(maf006.mx.5.d2.14))
maf006.mx.5.d2.15.gi<-as.genind(as.matrix(maf006.mx.5.d2.15))
maf006.mx.5.d3.04.gi<-as.genind(as.matrix(maf006.mx.5.d3.04))
maf006.mx.5.d3.14.gi<-as.genind(as.matrix(maf006.mx.5.d3.14))
maf006.mx.5.d3.15.gi<-as.genind(as.matrix(maf006.mx.5.d3.15))
maf006.mx.5.agraria.gi<-as.genind(as.matrix(maf006.mx.5.agraria))
maf006.mx.5.mira.gi<-as.genind(as.matrix(maf006.mx.5.mira))
maf006.mx.5.vilarinho.gi<-as.genind(as.matrix(maf006.mx.5.vilarinho))
maf006.mx.5.old_EU.gi<-as.genind(as.matrix(maf006.mx.5.old_EU))


saveRDS(maf006.mx.5.gi,"maf006.mx.5.gi.rds")
saveRDS(maf006.mx.5.d2.04.gi,"maf006.mx.5.d2.04.gi.rds")
saveRDS(maf006.mx.5.d2.14.gi,"maf006.mx.5.d2.14.gi.rds")
saveRDS(maf006.mx.5.d2.15.gi,"maf006.mx.5.d2.15.gi.rds")
saveRDS(maf006.mx.5.d3.04.gi,"maf006.mx.5.d3.04.gi.rds")
saveRDS(maf006.mx.5.d3.14.gi,"maf006.mx.5.d3.14.gi.rds")
saveRDS(maf006.mx.5.d3.15.gi,"maf006.mx.5.d3.15.gi.rds")
saveRDS(maf006.mx.5.agraria.gi,"maf006.mx.5.agraria.gi.rds")
saveRDS(maf006.mx.5.mira.gi,"maf006.mx.5.mira.gi.rds")
saveRDS(maf006.mx.5.vilarinho.gi,"maf006.mx.5.vilarinho.gi.rds")
saveRDS(maf006.mx.5.old_EU.gi,"maf006.mx.5.old_EU.gi.rds")

d204<-readRDS("maf006.mx.5.d2.04.gi.rds")
d214<-readRDS("maf006.mx.5.d2.14.gi.rds")
d215<-readRDS("maf006.mx.5.d2.15.gi.rds")
d304<-readRDS("maf006.mx.5.d3.04.gi.rds")
d314<-readRDS("maf006.mx.5.d3.14.gi.rds")
d315<-readRDS("maf006.mx.5.d3.15.gi.rds")
agr<-readRDS("maf006.mx.5.agraria.gi.rds")
mir<-readRDS("maf006.mx.5.mira.gi.rds")
vil<-readRDS("maf006.mx.5.vilarinho.gi.rds")



setwd("/Volumes/Desassossego/finalizing_genets/Robjs.ma006.mx.5")
dr304<-readRDS("maf006.mx.5.d3.04.gi.rds")

plot(upgma(dist(dr304, method="euc")))


sum(dr304$tab[1,]==dr304$tab[5,],na.rm = T)


dist(dr304[c(1,2)], method="manhattan")

dist(dr304[c(1,2)], method="manhattan")
dist(dr304[c(1,3)], method="manhattan")
dist(dr304[c(1,4)], method="manhattan")
dist(dr304[c(1,5)], method="manhattan")
dist(dr304[c(2,3)], method="manhattan")
dist(dr304[c(2,4)], method="manhattan")
dist(dr304[c(2,5)], method="manhattan")
dist(dr304[c(3,4)], method="manhattan")
dist(dr304[c(3,5)], method="manhattan")
dist(dr304[c(4,5)], method="manhattan")

A<-c(1,2,3,4,5)
B<-c(1,2,3,5,6)

dist(rbind(A,B), method="manhattan")




mura<-readRDS("maf006.mx.5.mira.gi.rds")
dist(mura[c(2,3)], method="manhattan")






###################### others

postQC.1sd.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds<-readRDS("Robjs/postQC.1sd.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds")
postQC.2sd.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds<-readRDS("Robjs/postQC.2sd.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds")
postQC.var.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds<-readRDS("Robjs/postQC.var.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds")

maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds")
maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds")
maxmiss.NOMISS.mac3.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.NOMISS.mac3.recode.FIN.vcf.gz.rds")

maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds")
maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds")
maxmiss.1.mac3.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.1.mac3.recode.FIN.vcf.gz.rds")

maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds")
maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds")
maxmiss.9.mac3.recode.FIN.vcf.gz.rds<-readRDS("Robjs/maxmiss.9.mac3.recode.FIN.vcf.gz.rds")

DPmaf0.49.recode.FIN.vcf.gz.rds<-readRDS("Robjs/DPmaf0.49.recode.FIN.vcf.gz.rds")
DP3maf0.012.recode.FIN.vcf.gz.rds<-readRDS("Robjs/DP3maf0.012.recode.FIN.vcf.gz.rds")
DP3mac3.recode.FIN.vcf.gz.rds<-readRDS("Robjs/DP3mac3.recode.FIN.vcf.gz.rds")

raw.maf0.012.recode.FIN.vcf.gz.rds<-readRDS("Robjs/raw.maf0.012.recode.FIN.vcf.gz.rds")
raw.maf0.49.recode.FIN.vcf.gz.rds<-readRDS("Robjs/raw.maf0.49.recode.FIN.vcf.gz.rds")
raw.g5mac3.recode.FIN.vcf.gz.rds<-readRDS("Robjs/raw.g5mac3.recode.FIN.vcf.gz.rds")

#two additiona VCFs that need R objects made
#postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE<-read.PLINK("postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.raw", 
#                                map.file = "postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.map", quiet = FALSE,
#                    parallel = require("parallel"), n.cores = NULL)

postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE<-read.PLINK("postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.raw", 
                                                                              map.file = "postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.map", quiet = FALSE,
                                                                             parallel = require("parallel"), n.cores = NULL)

saveRDS(postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE, "postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.rds")

#postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE
#postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE

# New raw objects and pops split
#maf 0.012/0.49 all loic.no missing loci, minQ 30, minDP 60 and HWE filter


maf0.012.all<-read.PLINK("FILTER_HWE_all86/vcf.minDP60.maf0.012.minQ30.recode.HWE.recode.vcf.raw", 
                                                             map.file = "FILTER_HWE_all86/vcf.minDP60.maf0.012.minQ30.recode.HWE.recode.vcf.map", quiet = FALSE,
                                                             parallel = require("parallel"), n.cores = NULL)

maf0.012.no<-read.PLINK("FILTER_HWE_all86/vcf.nomiss.minDP60.maf0.012.minQ30.recode.HWE.recode.vcf.raw", 
                         map.file = "FILTER_HWE_all86/vcf.nomiss.minDP60.maf0.012.minQ30.recode.HWE.recode.vcf.map", quiet = FALSE,
                         parallel = require("parallel"), n.cores = NULL)


#maf0.49.all<-read.PLINK("FILTER_HWE_all86/vcf.minDP60.maf0.49.minQ30.recode.HWE.recode.vcf.raw", 
 #                       map.file = "FILTER_HWE_all86/vcf.minDP60.maf0.49.minQ30.recode.HWE.recode.vcf.map", quiet = FALSE,
  #                      parallel = require("parallel"), n.cores = NULL)

setwd("/Volumes/Desassossego/VCF_filter")
nomiss.maf0.49<-readRDS("Robjs/maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds")


# NEW MAF 0.49
setwd("/Volumes/Desassossego/finalizing_genets")
maf0.49.new.all<-read.PLINK("newMAF0.49/vcf.minQ30minDP60maf0.49.raw", 
                        map.file = "newMAF0.49/vcf.minQ30minDP60maf0.49.map", quiet = FALSE,
                        parallel = require("parallel"), n.cores = NULL)

maf0.49.maxmiss0.9new.all<-read.PLINK("newMAF0.49/vcf.miss0.9.minQ30minDP60maf0.49.raw", 
                            map.file = "newMAF0.49/vcf.miss0.9.minQ30minDP60maf0.49.map", quiet = FALSE,
                            parallel = require("parallel"), n.cores = NULL)
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
# MAF 006

maf006<-read.PLINK("MAF006/raws/vcf.minDP60.maf0.006.minQ30.recode.vcf.raw", 
                            map.file = "MAF006/bim_bam_boom/vcf.minDP60.maf0.006.minQ30.recode.vcf.map", quiet = FALSE,
                            parallel = require("parallel"), n.cores = 3)

maf006.nomiss<-read.PLINK("MAF006/raws/vcf.nomiss.minDP60.maf0.006.minQ30.recode.vcf.raw", 
                                      map.file = "MAF006/bim_bam_boom/vcf.nomiss.minDP60.maf0.006.minQ30.recode.vcf.map", quiet = FALSE,
                                      parallel = require("parallel"), n.cores = 3)

maf006.gi<-as.genind(as.matrix(maf006))
maf006.nomiss.gi<-as.genind(as.matrix(maf006.nomiss))

saveRDS(maf006.gi, "maf006.gi.rds")
saveRDS(maf006.nomiss.gi, "maf006.nomiss.gi.rds")
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################

##### af 0.012 all loci

maf0.012.all.agraria<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.agraria.recode.HWE.recode.vcf.ja.ja.raw", 
                         map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.agraria.recode.HWE.recode.vcf.map", quiet = FALSE,
                         parallel = require("parallel"), n.cores = NULL)

maf0.012.all.D2.04<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D2.04.recode.HWE.recode.vcf.ja.ja.raw", 
                                 map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D2.04.recode.HWE.recode.vcf.map", quiet = FALSE,
                                 parallel = require("parallel"), n.cores = NULL)
maf0.012.all.D2.14<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D2.14.recode.HWE.recode.vcf.ja.ja.raw", 
                                 map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D2.14.recode.HWE.recode.vcf.map", quiet = FALSE,
                                 parallel = require("parallel"), n.cores = NULL)
maf0.012.all.D2.15<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D2.15.recode.HWE.recode.vcf.ja.ja.raw", 
                                 map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D2.15.recode.HWE.recode.vcf.map", quiet = FALSE,
                                 parallel = require("parallel"), n.cores = NULL)
maf0.012.all.D3.04<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D3.04.recode.HWE.recode.vcf.ja.ja.raw", 
                                 map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D3.04.recode.HWE.recode.vcf.map", quiet = FALSE,
                                 parallel = require("parallel"), n.cores = NULL)
maf0.012.all.D3.14<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D3.14.recode.HWE.recode.vcf.ja.ja.raw", 
                                 map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D3.14.recode.HWE.recode.vcf.map", quiet = FALSE,
                                 parallel = require("parallel"), n.cores = NULL)
maf0.012.all.D3.15<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D3.15.recode.HWE.recode.vcf.ja.ja.raw", 
                               map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.D3.15.recode.HWE.recode.vcf.map", quiet = FALSE,
                               parallel = require("parallel"), n.cores = NULL)
maf0.012.all.mira<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.mira.recode.HWE.recode.vcf.ja.ja.raw", 
                                 map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.mira.recode.HWE.recode.vcf.map", quiet = FALSE,
                                 parallel = require("parallel"), n.cores = NULL)
maf0.012.all.old_EU<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.old_EU.recode.HWE.recode.vcf.ja.ja.raw", 
                               map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.old_EU.recode.HWE.recode.vcf.map", quiet = FALSE,
                               parallel = require("parallel"), n.cores = NULL)
maf0.012.all.vilarinho<-read.PLINK("maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.vilarinho.recode.HWE.recode.vcf.ja.ja.raw", 
                               map.file = "maf0.012all/bim_bam_boom/vcf.minDP60.maf0.012.minQ30.recode.vilarinho.recode.HWE.recode.vcf.map", quiet = FALSE,
                               parallel = require("parallel"), n.cores = NULL)

#maf 0.012 with no missing data

maf0.012.no.agraria<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.agraria.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                                map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.agraria.recode.HWE.recode.vcf.map", quiet = FALSE,
                                parallel = require("parallel"), n.cores = NULL)
maf0.012.no.D2.04<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D2.04.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                              map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D2.04.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.012.no.D2.14<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D2.14.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                              map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D2.14.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.012.no.D2.15<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D2.15.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                              map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D2.15.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.012.no.D3.04<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D3.04.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                              map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D3.04.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.012.no.D3.14<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D3.14.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                              map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D3.14.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.012.no.D3.15<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D3.15.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                              map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.D3.15.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.012.no.mira<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.mira.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                             map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.mira.recode.HWE.recode.vcf.map", quiet = FALSE,
                             parallel = require("parallel"), n.cores = NULL)
maf0.012.no.old_EU<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.old_EU.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                               map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.old_EU.recode.HWE.recode.vcf.map", quiet = FALSE,
                               parallel = require("parallel"), n.cores = NULL)
maf0.012.no.vilarinho<-read.PLINK("maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.vilarinho.recode.HWE.recode.vcf.nomiss.ja.ja.raw", 
                                  map.file = "maf0.012no/bim_bam_boom/vcf.nomiss.minDP60.maf0.012.minQ30.recode.vilarinho.recode.HWE.recode.vcf.map", quiet = FALSE,
                                  parallel = require("parallel"), n.cores = NULL)
# maf0.49 all loci

maf0.49.all.agraria<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.agraria.recode.HWE.recode.vcf.ja.ja.raw", 
                                map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.agraria.recode.HWE.recode.vcf.map", quiet = FALSE,
                                parallel = require("parallel"), n.cores = NULL)
maf0.49.all.D2.04<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D2.04.recode.HWE.recode.vcf.ja.ja.raw", 
                              map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D2.04.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.49.all.D2.14<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D2.14.recode.HWE.recode.vcf.ja.ja.raw", 
                              map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D2.14.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.49.all.D2.15<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D2.15.recode.HWE.recode.vcf.ja.ja.raw", 
                              map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D2.15.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.49.all.D3.04<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D3.04.recode.HWE.recode.vcf.ja.ja.raw", 
                              map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D3.04.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.49.all.D3.14<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D3.14.recode.HWE.recode.vcf.ja.ja.raw", 
                              map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D3.14.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.49.all.D3.15<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D3.15.recode.HWE.recode.vcf.ja.ja.raw", 
                              map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.D3.15.recode.HWE.recode.vcf.map", quiet = FALSE,
                              parallel = require("parallel"), n.cores = NULL)
maf0.49.all.mira<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.mira.recode.HWE.recode.vcf.ja.ja.raw", 
                             map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.mira.recode.HWE.recode.vcf.map", quiet = FALSE,
                             parallel = require("parallel"), n.cores = NULL)
maf0.49.all.old_EU<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.old_EU.recode.HWE.recode.vcf.ja.ja.raw", 
                               map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.old_EU.recode.HWE.recode.vcf.map", quiet = FALSE,
                               parallel = require("parallel"), n.cores = NULL)
maf0.49.all.vilarinho<-read.PLINK("maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.vilarinho.recode.HWE.recode.vcf.ja.ja.raw", 
                                  map.file = "maf0.49all/bim_bam_boom/vcf.minDP60.maf0.49.minQ30.recode.vilarinho.recode.HWE.recode.vcf.map", quiet = FALSE,
                                  parallel = require("parallel"), n.cores = NULL)



#############################################################################################
#Using HWE filtered - keeping the masked loci because it won't make a differece
#I have decided to remove loci out of HWE manually from each of the above objects
#also remove masked loci


#all mushrooms are individuals

#86 individuals; 33,689 loci
plot(nj(dist(postQC.1sd.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds)))
gl.report.monomorphs(postQC.1sd.meandp.maf0.012.conv.vcf.FIN.vcf.raw.gi.rds)
#Breakdown of 33689 loci
#Polymorphic loci: 32465 
#Monomorphic loci: 1224 
#Loci with no scores (all NA): 0 

#86 genotypes,  1,632 binary SNPs
plot(nj(dist(postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE)))
gl.report.monomorphs(postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE)
#Breakdown of 1632 loci
#Polymorphic loci: 1632 
#Monomorphic loci: 0 
#Loci with no scores (all NA): 0 

#######################################################
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
#Pop maps

library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)


setwd("~/Dropbox/Genet Size/Jacob Analyses")

cor<-read.csv("New_Genets_worldmap.csv", head=T, stringsAsFactors = F)
cor.EU<-cor[cor$Map=="EU",]
cor.EU$lab<-paste(cor.EU$Population.Code, cor.EU$year)
cor.US<-cor[cor$Map=="US",]
cor.US$lab<-paste(cor.US$Population.Code, cor.US$year)
cor.CA<-cor[cor$Zoom=="CA",]
cor.CA$lab<-paste(cor.CA$Population.Code, cor.CA$year)

cor.EA<-cor.US[1:3,]


cor.EU.AFLP<-cor.EU[cor.EU$Technology=="AFLP",]
cor.EU.SNP<-cor.EU[cor.EU$Technology=="SNP",]

map.EU <- get_map(location = 'Europe', source ='google', maptype = 'satellite', zoom = 4)
map.CAst <- get_map(location = 'California', source ='google', maptype = 'satellite', zoom = 6)
map.EA <- get_map(location = 'New Jersey', source ='google', maptype = 'satellite', zoom = 6)
map.US <- get_map(location = 'USA', source ='google', maptype = 'satellite', zoom = 4)
map.CA <- get_map(location = 'Point Reyes National Seashore', source ='google', maptype = 'satellite', zoom = 12)
map.Dr <- get_map(location = c(lon=	-122.834134, lat=38.05521201), source ='google', maptype = 'satellite', zoom = 17)

usa <- map_data("usa") # we already did this, but we can do it again

ggplot() + 
  geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill = "grey", color = "black") + 
  coord_fixed(1.3)+theme_classic()+
  geom_point(data = cor.US, aes(x = Longitude, y = Latitude), color = "red", size = 4)

states <- map_data("state")

ggplot(data = states) + 
  geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") + 
  coord_fixed(1.3) +
  guides(fill=FALSE)  # do this to leave off the color legend

socal <- subset(states, region %in% c("california"))
ggplot(data = socal) + 
  geom_polygon(aes(x = long, y = lat, group = group), fill = "palegreen", color = "black") + 
  coord_fixed(1.3)


# califonria
ca_df <- subset(states, region == "california")
counties <- map_data("county")
ca_county <- subset(counties, region == "california")
ca_base <- ggplot(data = ca_df, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) + 
  geom_polygon(color = "black", fill = "gray")
ca_base + theme_nothing()+geom_point(data = cor.CA, aes(x = cor.CA$Longitude, y = cor.CA$Latitude), color = "red", size = 4,inherit.aes = FALSE)
ca_base +  theme_nothing()+
  geom_polygon(data = ca_county, fill = NA, color = "white") +
  geom_polygon(color = "black", fill = NA) + 
  geom_point(data=cor.CA, aes(x = Longitude, y = Latitude),color = "red", size = 4,inherit.aes = FALSE)




# east coast
east <- subset(states, region %in% c("new york", "new jersey"))
counties <- map_data("county")
east_county <- subset(counties, region %in% c("new york", "new jersey"))
east_base <- ggplot(data = east, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) + 
  geom_polygon(color = "black", fill = "gray")
east_base + theme_nothing()+
  geom_polygon(data = east_county, fill = NA, color = "white") +
  geom_polygon(color = "black", fill = NA) +
  geom_point(data=cor.EA, aes(x = Longitude, y = Latitude),color = "red", size = 4,inherit.aes = FALSE)



####### Europe
europe<-map_data("world")

SNPEU<-read.csv("SNP_EU_latlong.csv", head=T, stringsAsFactors = F)
df1<-cor.EU[1:9,1:3]
df2<-SNPEU[,c(1,6,7)]
colnames(df1)<-c("pop", "Latitude", "Longitude")     
colnames(df2)<-c("pop", "Latitude", "Longitude")     

correct.cor.EU<-rbind(df1,df2)

DIYEU <- subset(europe, region %in% c("France", "Serbia", "Spain", "UK", "Portugal", "Andorra", "Belgium", "Netherlands", "Liechtenstein",
                                      "Luxembourg", "Germany", "Poland","Austria", "Czech Republic", "Ireland", "Slovakia", "Hungary",
                                      "Romania", "Italy", "Switzerland", "Slovenia", "Croatia", "Denmark", "Sweden", "Norway", "Bosnia and Herzegovina",
                                      "Montenegro","Monserrat", "Albania", "Greece", "Bulgaria", "Macedonia", "Kosovo"))

DIYEU.cl<-DIYEU[DIYEU$lat <= 72,]

ggplot(data = DIYEU.cl, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) + 
  geom_polygon(color = "black", fill = "gray")+
  geom_point(data=correct.cor.EU, aes(x = Longitude, y = Latitude),color = "red", size = 4,inherit.aes = FALSE)+ theme_nothing()

  
plot(correct.cor.EU$Latitude ~correct.cor.EU$Longitude)

####### Portugal
portugal <- subset(europe, region %in% c("Portugal"))
cor.EU.port<-cor.EU[cor.EU$Population.Code ==c("Agraria", "Vilarinho", "Mira"),]

ggplot(data = portugal, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) + 
  geom_polygon(color = "black", fill = "gray")+
  geom_point(data=cor.EU.port, aes(x = Longitude, y = Latitude),color = "red", size = 4,inherit.aes = FALSE)+ theme_nothing()

################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ Old Maps                         ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
# Library
library(ggmap)

# For google map, you have to give the center of the window you are looking at.
# Possibility for the map type argument: terrain / satellite / roadmap / hybrid

# get the map info
library(ggmap)
library(mapproj)
library(ggrepel)
library(poppr)

setwd("~/Dropbox/Genet Size/Jacob Analyses")

cor<-read.csv("New_Genets_worldmap.csv", head=T, stringsAsFactors = F)
cor.EU<-cor[cor$Map=="EU",]
cor.EU$lab<-paste(cor.EU$Population.Code, cor.EU$year)
cor.US<-cor[cor$Map=="US",]
cor.US$lab<-paste(cor.US$Population.Code, cor.US$year)
cor.CA<-cor[cor$Zoom=="CA",]
cor.CA$lab<-paste(cor.CA$Population.Code, cor.CA$year)



cor.EU.AFLP<-cor.EU[cor.EU$Technology=="AFLP",]
cor.EU.SNP<-cor.EU[cor.EU$Technology=="SNP",]

map.EU <- get_map(location = 'Europe', source ='google', maptype = 'satellite', zoom = 4)
map.CAst <- get_map(location = 'California', source ='google', maptype = 'satellite', zoom = 6)
map.EA <- get_map(location = 'New Jersey', source ='google', maptype = 'satellite', zoom = 6)
map.US <- get_map(location = 'USA', source ='google', maptype = 'satellite', zoom = 4)
map.CA <- get_map(location = 'Point Reyes National Seashore', source ='google', maptype = 'satellite', zoom = 12)
map.Dr <- get_map(location = c(lon=	-122.834134, lat=38.05521201), source ='google', maptype = 'satellite', zoom = 17)


ggmap(map.EU)
ggmap(map.US)
ggmap(map.CA)
ggmap(map.CAst)
ggmap(map.EA)
ggmap(map.Dr)




# Plot it
ggmap(map.EU) + 
  theme_void() + 
  ggtitle("") + 
  theme(legend.position="none",
        plot.title = element_text(colour = "black"), 
        panel.border = element_rect(colour = "black", fill=NA, size=2)
  )+   geom_point(data=cor.EU, aes(x=as.double(cor.EU$Longitude), y=as.double(cor.EU$Latitude), 
                                   size=No..Mushrooms, color=Technology), alpha=0.5)+
  scale_size(range = c(5, 10))+  scale_colour_manual(cor.EU$Technology, values = c("AFLP" = "#ddccff","SNP" = "orange2", "Both"="#66ccff"))+
  geom_text_repel(data = cor.EU, aes(x = as.double(cor.EU$Longitude), y = as.double(cor.EU$Latitude), label = lab, color=Technology),
                  size = 3, vjust = 0, hjust = -.5, angle=0)  

ggmap(map.US) + 
  theme_void() + 
  ggtitle("") + 
  theme(legend.position="none",
        plot.title = element_text(colour = "black"), 
        panel.border = element_rect(colour = "black", fill=NA, size=2)
  )+   geom_point(data=cor.US, aes(x=as.double(cor.US$Longitude), y=as.double(cor.US$Latitude), 
                                   size=No..Mushrooms, color=Technology), alpha=0.5)+
  scale_size(range = c(5, 10))+  scale_colour_manual(cor.US$Technology, values = c("AFLP" = "#ddccff","SNP" = "orange2", "Both"="#66ccff"))+
  geom_text_repel(data = cor.US, aes(x = as.double(cor.US$Longitude), y = as.double(cor.US$Latitude), label = lab, color=Technology),
                  size = 3, vjust = 0, hjust = -0.5, angle=0)


ggmap(map.CA) + 
  theme_void() + 
  ggtitle("") + 
  theme(legend.position="none",
        plot.title = element_text(colour = "black"), 
        panel.border = element_rect(colour = "black", fill=NA, size=2)
  )+   geom_point(data=cor.CA, aes(x=as.double(cor.CA$Longitude), y=as.double(cor.CA$Latitude), 
                                   size=No..Mushrooms, color=Technology), alpha=0.5)+
  scale_size(range = c(5, 10))+  scale_colour_manual(cor.CA$Technology, values = c("AFLP" = "#ddccff","SNP" = "orange2", "Both"="#66ccff"))+
  geom_text_repel(data = cor.CA, aes(x = as.double(cor.CA$Longitude), y = as.double(cor.CA$Latitude), label = lab, color=Technology),
                  size = 3, vjust = 0, hjust = -1, angle=0)  


ggmap(map.CAst) + 
  theme_void() + 
  ggtitle("") + 
  theme(legend.position="none",
        plot.title = element_text(colour = "black"), 
        panel.border = element_rect(colour = "black", fill=NA, size=2)
  )+   geom_point(data=cor.CA, aes(x=as.double(cor.CA$Longitude), y=as.double(cor.CA$Latitude), 
                                   size=No..Mushrooms, color=Technology), alpha=0.5)+
  scale_size(range = c(5, 10))+  scale_colour_manual(cor.CA$Technology, values = c("AFLP" = "#ddccff","SNP" = "orange2", "Both"="#66ccff"))+
  geom_text_repel(data = cor.CA, aes(x = as.double(cor.CA$Longitude), y = as.double(cor.CA$Latitude), label = lab, color=Technology),
                  size = 3, vjust = 0, hjust = -0.5, angle=0)  

ggmap(map.EA) + 
  theme_void() + 
  ggtitle("") + 
  theme(legend.position="none",
        plot.title = element_text(colour = "black"), 
        panel.border = element_rect(colour = "black", fill=NA, size=2)
  )+   geom_point(data=cor.US, aes(x=as.double(cor.US$Longitude), y=as.double(cor.US$Latitude), 
                                   size=No..Mushrooms, color=Technology), alpha=0.5)+
  scale_size(range = c(5, 10))+  scale_colour_manual(cor.US$Technology, values = c("AFLP" = "#ddccff","SNP" = "orange2", "Both"="#66ccff"))+
  geom_text_repel(data = cor.US, aes(x = as.double(cor.US$Longitude), y = as.double(cor.US$Latitude), label = lab, color=Technology),
                  size = 3, vjust = 0, hjust = -0.5, angle=0)  

ggmap(map.Dr) + 
  theme_void() + 
  ggtitle("") + 
  theme(legend.position="none",
        plot.title = element_text(colour = "black"), 
        panel.border = element_rect(colour = "black", fill=NA, size=2)
  )+   geom_point(data=cor.US, aes(x=as.double(cor.US$Longitude), y=as.double(cor.US$Latitude), 
                                   size=No..Mushrooms, color=Technology), alpha=0.5)+
  scale_size(range = c(5, 10))+  scale_colour_manual(cor.US$Technology, values = c("AFLP" = "#ddccff","SNP" = "orange2", "Both"="#66ccff"))+
  geom_text_repel(data = cor.US, aes(x = as.double(cor.US$Longitude), y = as.double(cor.US$Latitude), label = lab, color=Technology),
                  size = 3, vjust = 0, hjust = -0.5, angle=0)  

################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################################################################
# gencurves

#gencurves
setwd("/Volumes/Desassossego/finalizing_genets/gencurves.raw")

DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv<-read.csv("raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv<-read.csv("postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv<-read.csv("postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv",head=T,stringsAsFactors=F)
maf006.nomiss.gi.rds.genoc_compile.csv<-read.csv("maf006.nomiss.gi.rds.genoc_compile.csv", head=T, stringsAsFactors = F)
maf006.gi.rds.genoc_compile.csv<-read.csv("maf006.gi.rds.genoc_compile.csv", head=T, stringsAsFactors = F)
maf006.mx.5.gi.rds.genoc_compile.csv<-read.csv("maf006.mx.5.gi.rds.genoc_compile.csv", head=T, stringsAsFactors = F)

hiergc.102<-read.csv("hier.gi.rds.y100.102.genoc_compile.csv", head=T, stringsAsFactors = F)
hiergc<-read.csv("hier.gi.rds.genoc_compile.csv", head=T, stringsAsFactors = F)


DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"
DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"
maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"
maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"
maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"
maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"
maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv"
maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"
raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"
raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$lab<-"raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"
postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv$lab<-"postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv"
postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv$lab<-"postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv"
maf006.nomiss.gi.rds.genoc_compile.csv$lab<-"maf006.nomiss.gi.rds.genoc_compile.csv"
maf006.gi.rds.genoc_compile.csv$lab<-"maf006.gi.rds.genoc_compile.csv"
maf006.mx.5.gi.rds.genoc_compile.csv$lab<-"maf006.mx.5.gi.rds.genoc_compile.csv"

hiergc.102$lab<-"hiergc.102"
hiergc$lab<-"hiergc"

rep(1, 100)
numbers<-c(1:100)
iterat<-rep(numbers, each=1000)
iterat2<-rep(numbers, each=102)

DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv$iterat<-iterat
postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv$iterat<-iterat
postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv$iterat<-iterat
maf006.nomiss.gi.rds.genoc_compile.csv$iterat<-iterat
maf006.gi.rds.genoc_compile.csv$iterat<-iterat
maf006.mx.5.gi.rds.genoc_compile.csv$iterat<-iterat

hiergc$iterat<-iterat
hiergc.102$iterat<-iterat2

gencurve.compile.compile<-rbind(DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv,
                                postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv,
                                maf006.nomiss.gi.rds.genoc_compile.csv,
                                maf006.gi.rds.genoc_compile.csv,
                                maf006.mx.5.gi.rds.genoc_compile.csv)

gencurve.compile.compile.FIN<-rbind(maf006.nomiss.gi.rds.genoc_compile.csv,
                                        maf006.gi.rds.genoc_compile.csv,
                                       maf006.mx.5.gi.rds.genoc_compile.csv,
                                       maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                       maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv,
                                       maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv
                                       )

gencurve.compile.compile.maf006<-rbind(maf006.nomiss.gi.rds.genoc_compile.csv,
                                       maf006.gi.rds.genoc_compile.csv,
                                       maf006.mx.5.gi.rds.genoc_compile.csv)

gencurve.compile.compile.g50<-gencurve.compile.compile[gencurve.compile.compile$iterat <= 50, ] 

gencurve.compile.compile.maf006.g50<-gencurve.compile.compile.maf006[gencurve.compile.compile.maf006$iterat <= 50, ] 

data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- rename(data_sum, c("mean" = varname))
  return(data_sum)
}

df2 <- data_summary(gencurve.compile.compile, varname="MLG", 
                    groupnames=c("lab", "iterat"))

df2.maf006 <- data_summary(gencurve.compile.compile.maf006, varname="MLG", 
                    groupnames=c("lab", "iterat"))

df2.FIN <- data_summary(gencurve.compile.compile.FIN, varname="MLG", 
                           groupnames=c("lab", "iterat"))

df.hier<- data_summary(hiergc, varname="MLG", 
                         groupnames=c("lab", "iterat"))

df.hier.102<- data_summary(hiergc.102, varname="MLG", 
                       groupnames=c("lab", "iterat"))

# Convert iterta to a factor variable
df2$iterat=as.factor(df2$iterat)
head(df2)

df2.maf006$iterat=as.factor(df2.maf006$iterat)

df2.FIN$iterat=as.factor(df2.FIN$iterat)

df.hier$iterat=as.factor(df.hier$iterat)
df.hier.102$iterat=as.factor(df.hier.102$iterat)


library(ggplot2)
#note minQ for all filters was 30

#labels = 
#  (c("MAF0.012, DP≥3","MAF0.49, DP≥3", "MAF0.012, 90% missing data", 
#     "MAF0.49, 90% missing data", "MAF0.012, 10% missing data", "MAF0.49, 10% missing data", 
#     "MAF0.012, 0% missing data", "MAF0.49, 0% missing data","MAF0.012, DP≥Mean DP, HWE filtered",
#     "MAF0.012, DP≥Mean DP, 0% missing data, HWE filtered","MAF0.012 unfiltered","MAF0.49 unfiltered", "MAF0.006, DP≥Mean DP", "MAF0.006, DP≥Mean DP, 0% missing data", "MAF0.006, DP≥Mean DP, 50% missing data"))))) + 
  

ggplot(df2, aes(x=iterat, y=MLG, group=lab, color=factor(lab)))+ geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=MLG-sd, ymax=MLG+sd), width=.2,
                position=position_dodge(0.05))+
  theme(axis.text.x = element_text(angle=45),
        panel.background = element_rect(fill = "NA", colour = "black"), legend.text=element_text(size=7),legend.key=element_blank(),legend.position = "right",axis.text=element_text(size=4),
        axis.title=element_text(size=10))+
  labs(title = "Genotype Accumulation Curve", subtitle = "86 Mushrooms", x="Number of Loci Randomly Sampled", y="Recovered MLGs", color="VCF Filter")+
  geom_hline(yintercept=86, linetype="dotted", color = "red", size=1)+
  annotate("text", x = 6, y = 84, label = "100%")
  
#maf006.nomiss.gi.rds.genoc_compile.csv,
#maf006.gi.rds.genoc_compile.csv,
#maf006.mx.5.gi.rds.genoc_compile.csv

#labels = 
 # (c("MAF0.006, DP≥Mean DP, 0% missing data","MAF0.006, DP≥Mean DP, 100% missing data","MAF0.006, DP≥Mean DP, 50% missing data")))))

ggplot(df2.maf006, aes(x=iterat, y=MLG, group=lab, color=factor(lab))) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=MLG-sd, ymax=MLG+sd), width=.2,
                position=position_dodge(0.05))+
  theme(axis.text.x = element_text(angle=45),
        panel.background = element_rect(fill = "NA", colour = "black"), legend.text=element_text(size=7),legend.key=element_blank(),legend.position = "bottom",axis.text=element_text(size=6),
        axis.title=element_text(size=10))+
  labs(title = "Genotype Accumulation Curve", subtitle = "86 Mushrooms", x="Number of Loci Randomly Sampled", y="Recovered MLGs", color="VCF Filter")+
  geom_hline(yintercept=86, linetype="dotted", color = "red", size=1)+
  annotate("text", x = 6, y = 84, label = "100%")


ggplot(df2.FIN, aes(x=iterat, y=MLG, group=lab, color=factor(lab))) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=MLG-sd, ymax=MLG+sd), width=.2,
                position=position_dodge(0.05))+
  theme(axis.text.x = element_text(angle=45),
        panel.background = element_rect(fill = "NA", colour = "black"), legend.text=element_text(size=7),legend.key=element_blank(),legend.position = "bottom",axis.text=element_text(size=6),
        axis.title=element_text(size=10))+
  labs(title = "Genotype Accumulation Curve", subtitle = "86 Mushrooms", x="Number of Loci Randomly Sampled", y="Recovered MLGs", color="VCF Filter")+
  geom_hline(yintercept=86, linetype="dotted", color = "red", size=1)+
  annotate("text", x = 6, y = 84, label = "100%")




ggplot(df.hier, aes(x=iterat, y=MLG, group=lab)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=MLG-sd, ymax=MLG+sd), width=.2,
                position=position_dodge(0.05))+
  theme(axis.text.x = element_text(angle=45),
        panel.background = element_rect(fill = "NA", colour = "black"), legend.text=element_text(size=7),legend.key=element_blank(),legend.position = "bottom",axis.text=element_text(size=6),
        axis.title=element_text(size=10))+
  labs(title = "Genotype Accumulation Curve", subtitle = "86 Mushrooms", x="Number of Loci Randomly Sampled", y="Recovered MLGs", color="VCF Filter")+
  geom_hline(yintercept=160, linetype="dotted", color = "red", size=1)+
  annotate("text", x = 6, y = 165, label = "100%")

ggplot(df.hier.102, aes(x=iterat, y=MLG, group=lab)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=MLG-sd, ymax=MLG+sd), width=.2,
                position=position_dodge(0.05))+
  theme(axis.text.x = element_text(angle=45),
        panel.background = element_rect(fill = "NA", colour = "black"), legend.text=element_text(size=7),legend.key=element_blank(),legend.position = "bottom",axis.text=element_text(size=6),
        axis.title=element_text(size=10))+
  labs(title = "Genotype Accumulation Curve", subtitle = "86 Mushrooms", x="Number of Loci Randomly Sampled", y="Recovered MLGs", color="VCF Filter")+
  geom_hline(yintercept=160, linetype="dotted", color = "red", size=1)+
  annotate("text", x = 6, y = 165, label = "100%")
  
#[1] "DP3maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                             
#[2] "DPmaf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                               
#[3] "maxmiss.1.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                      
#[4] "maxmiss.1.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                       
#[5] "maxmiss.9.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                      
#[6] "maxmiss.9.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                       
#[7] "maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                  
#[8] "maxmiss.NOMISS.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                 
#[9] "postQC.1sd.meandp.maf0.012.recode.prim.niindels.vcf.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv"
#[10] "postQC.nomiss.1sd.meandp.maf0.012.recode.vcf.HWE.recode.vcf.conv.vcf.FIN.rds.genoc_compile.csv"                  
#[11] "raw.maf0.012.recode.FIN.vcf.gz.rds.genoc_compile.csv"                                                            
#[12] "raw.maf0.49.recode.FIN.vcf.gz.rds.genoc_compile.csv"     

#AFLP
setwd("~/Dropbox/Genet Size/Jacob Analyses")
hier<-read.genalex("AFLP_genalex_4hier.csv")
hier.gcurve<-genotype_curve(hier)

library("ggplot2")
p <- last_plot()
p +  theme(axis.text.x = element_text(angle=45),
           panel.background = element_rect(fill = "NA", colour = "black"), legend.text=element_text(size=5),legend.key=element_blank(),legend.position = "bottom",axis.text=element_text(size=6),
           axis.title=element_text(size=10))+
  labs(title = "Genotype Accumulation Curve", subtitle = "221 Mushrooms", x="Number of Loci Randomly Sampled", y="Recovered MLGs")




###########################################################################################
################################ ################################ ################################ 
################################ ################################ ################################ 
################################ ################################ ################################ 
################################ ################################ ################################ 
#############################################################################################
# Trees

setwd("~/Dropbox/Genet Size/Jacob Analyses")

library(phangorn)
library(hierfstat)
library(poppr)
library(adegenet)
library("RColorBrewer")
library(gplots)
library(vcfR)
library(magrittr)
library(ggtree)


#AFLP
hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")

hier.gi<-as.genind(as.matrix(hier))
#saveRDS(hier.gi,"hier.gi.rds")
#hier.gl<-as.genlight(as.matrix(hier))
aflp.tree<-upgma(dist(hier.gi))
aflp.tree.nj<-nj(dist(hier.gi))

#aflp.tree.boot<-aboot(hier.gl, dist = bitwise.dist, sample = 200, tree = "upgma", cutoff = 0, quiet = TRUE)


tips.aflp<-as.data.frame(aflp.tree$tip.label)
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

pop(hier.gi)<-pops.aflp

pops.aflp.df<-as.data.frame(pops.aflp)
meta.aflp<-cbind(tips.aflp, pops.aflp.df)


dd <- meta.aflp
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)


cols <- rainbow(unique(dd$pop))
colman<-c("#ff0000", "#0039e6", "#00b300",  "#ff6600", "#006699",
          "#7300e6", "#cc00cc", "#00b3b3", "#e6e600", "#666666",
          "#66cc00","#800040", "#669900", "#b366ff", "#000080", "#669999", "#66ffb3", "#ff3399", "#00ff00")


plot.phylo(aflp.tree, cex = 0.5, font = 2, adj = 0, tip.color = colman[dd$pop],
           label.offset = 0.001, type="fan", align.tip.label = T)
nodelabels(aflp.tree$node.label, adj = c(1.3, -0.5), frame = "n", cex = 0.8,
           font = 3, xpd = TRUE)
axisPhylo(3)


cols[dd$pop]



p <- ggtree(aflp.tree)
c <- ggtree(aflp.tree, layout="circular")


p <- p %<+% dd + geom_tippoint(aes(color=pop))
p+theme(legend.position="right") + geom_tiplab(size=2)+ggtitle("AFLP Mushrooms: Euclidean Distance")


p <- p %<+% dd + geom_tippoint(aes(color=pop), size=.4)
p+theme(legend.position="right") + geom_tiplab(size=1.25, offset = .002)+ggtitle("AFLP Mushrooms: Euclidean Distance")

c <- c %<+% dd + geom_tippoint(aes(color=pop))
c+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=2)+ggtitle("SNP Mushrooms: Euclidean Distance")


c+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=2)+ggtitle("SNP Mushrooms: Euclidean Distance")


c <- ggtree(aflp.tree, layout="circular")

myBoots <- boot.phylo(treeUPGMA, hier.gi$tab, 1000, FUN = function(xx) upgma(dist(xx)))
plot(treeUPGMA, show.tip=FALSE, edge.width=2)
nodelabels(myBoots/1000, cex=.6)


aflp.cores=values=c("#6600cc", "#d966ff", "#9900cc", "#993366", "#ff6699", "#ff0000", "#ff9900", "#cc5200", "#ffff00", "#999900","#e6b800","#0000ff",
         "#ffcccc", "#8080ff", "#0099ff", "#006bb3", "#b3e0ff", "#df9fbf", "#4d0066")

c <- ggtree(aflp.tree, layout="circular")
c <- c %<+% dd + geom_tippoint(aes(color=pop))
c+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=2.5)+
  scale_color_manual(values=c("#6600cc", "#d966ff", "#9900cc", "#993366", "#ff6699", "#ff0000", "#ff9900", "#cc5200", "#ffff00", "#999900","#e6b800","#0000ff",
"#ffcccc", "#8080ff", "#0099ff", "#006bb3", "#b3e0ff", "#df9fbf", "#4d0066"))+
  ggtitle("AFLP Mushrooms: Euclidean Distance")+geom_treescale()+geom_nodelab(label=((myBoots/1000)*100), size=2)




####### Just Invasive
hier.g.invi<-hier.gi


#aflp.tree.boot<-aboot(hier.gl, dist = bitwise.dist, sample = 200, tree = "upgma", cutoff = 50, quiet = TRUE)


pops.aflp.inv<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(11, "New_Jersey_str_2006")
)

pop(hier.g.invi)<-pops.aflp.inv

aflp.invas.gi<-popsub(hier.g.invi, sublist = c("Rochester_NY_2007_1","Rochester_NY_2007_2","Rochester_NY_2007_3",
                                           "Drake_1_2004","Drake_2_2004","Drake_3_2004","Drake_4_2004",
                                           "Hearts_Desire_1_2004","Hearts_Desire_2_2004","Hearts_Desire_3_2004",
                                           "Jakes_Landing_2006","New_Jersey_str_2006",
                                           "Monterrey_Pisto_2006"))

aflp.tree.inv<-upgma(dist(aflp.invas.gi))
tips.inv.aflp<-as.data.frame(aflp.tree.inv$tip.label)


pops.aflp.inv.df<-as.data.frame(pops.aflp.inv)
meta.aflp.inv<-cbind(tips.inv.aflp, pops.aflp.inv.df)



p <- ggtree(aflp.tree.inv)

dd <- meta.aflp.inv
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)

cols <- rainbow(unique(dd$pop))

plot.phylo(aflp.tree.boot, cex = 0.4, font = 2, adj = 0, tip.color = cols[dd$pop],
           label.offset = 0.000125)
nodelabels(aflp.tree.boot$node.label, adj = c(1.3, -0.5), frame = "n", cex = 0.8,
           font = 3, xpd = TRUE)
axisPhylo(3)


p <- p %<+% dd + geom_tippoint(aes(color=pop))
p+theme(legend.position="right") + geom_tiplab( size=2)+ggtitle("AFLP Mushrooms: Euclid Distance")

p <- p %<+% dd + geom_tippoint(aes(color=pop), size=.4)
p+theme(legend.position="right") + geom_tiplab(size=1.25, offset = .002)+ggtitle("AFLP Mushrooms: Nei's Distance")

######## Just CA


pops.aflp.CA<-c(
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004")
  
)

#pop(hier.gi)<-pops.aflp

hier.g.CA<-hier.gi


aflp.CA.gi<-popsub(hier.gi, sublist = c("Drake_1_2004","Drake_2_2004","Drake_3_2004","Drake_4_2004",
                                           "Hearts_Desire_1_2004","Hearts_Desire_2_2004","Hearts_Desire_3_2004"))

aflp.tree.CA<-nj(dist(aflp.CA.gi))
tips.CA.aflp<-as.data.frame(aflp.tree.CA$tip.label)


pops.aflp.CA.df<-as.data.frame(pops.aflp.CA)
meta.aflp.CA<-cbind(tips.CA.aflp, pops.aflp.CA.df)



p <- ggtree(aflp.tree.CA)

dd <- meta.aflp.CA
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)

cols <- rainbow(unique(dd$pop))

plot.phylo(aflp.tree.boot, cex = 0.4, font = 2, adj = 0, tip.color = cols[dd$pop],
           label.offset = 0.000125)
nodelabels(aflp.tree.boot$node.label, adj = c(1.3, -0.5), frame = "n", cex = 0.8,
           font = 3, xpd = TRUE)
axisPhylo(3)


p <- p %<+% dd + geom_tippoint(aes(color=pop))
p+theme(legend.position="right") + geom_tiplab(size=1.25, offset = .002)+ggtitle("AFLP Mushrooms: Euclid Distance")







#SNPS

#setwd("~/Dropbox/Genet Size/Jacob Analyses")
#maf006yall<-readRDS("maf006.gi.rds")

setwd("/Volumes/Desassossego/finalizing_genets")

maf006yall<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.gi.rds")
#pop(maf006yall)<-myPops
#maf006yall.gl<-as.genlight(as.matrix(maf006yall))
#pop(maf006yall.gl)<-myPops

#library(dartR)
#maf006yall.gl.hwe<-gl.filter.hwe(maf006yall.gl, p=.01) #doesnt get rid of anything, so proceed as usual



snp.tree<-upgma(dist((maf006yall)))
#snp.tree.boot<-aboot(maf006, dist = bitwise.dist, sample = 200, tree = "upgma", cutoff = 50, quiet = TRUE)


tips.snp<-as.data.frame(snp.tree$tip.label)

myPops <- as.factor(c('old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'CA_old',	'old_EU',	'D2.04',	'D2.04',	
                      'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',
                      'D2.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'old_EU',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',
                      'D3.14',	'Agraria',	'Agraria',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',
                      'Mira',	'Mira',	'Mira',	'Mira',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',
                      'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D3.15',	'D3.15',	'D3.15'))

pop(maf006yall)<-myPops


pops.snp.df<-as.data.frame(myPops)
meta.snp<-cbind(tips.snp, pops.snp.df)


library(ggtree)
c <- ggtree(snp.tree, layout = "circular")

dd <- meta.snp
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)

cols <- rainbow(unique(dd$pop))

plot.phylo(snp.tree, cex = 0.2, font = 2, adj = 0, tip.color = cols[dd$pop],
           label.offset = 0.0125)
nodelabels(snp.tree$node.label, adj = c(1.3, -0.5), frame = "n", cex = 0.8,
           font = 3, xpd = TRUE)
axisPhylo(3)


c <- c %<+% dd + geom_tippoint(aes(color=pop))
c+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=2)+ggtitle("SNP Mushrooms: Euclidean Distance")

c <- ggtree(snp.tree, layout = "circular")

myBoots.snp <- boot.phylo(treeUPGMA.snp, maf006.mx.5, 500, FUN = function(xx) upgma(dist(xx)))
plot(treeUPGMA.snp, show.tip=FALSE, edge.width=.5)
nodelabels(myBoots.snp, cex=.6)

c <- ggtree(snp.tree, layout="circular")
c <- c %<+% dd + geom_tippoint(aes(color=pop))
c+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=3.5)+
  scale_color_manual(values=c("#cc33ff", "#663300", "#ff0000", "#b30000", "#ff6666", "#ff9900", "#cc7a00", "#cc9900", "#9966ff", "#660066", "#6600ff"))+
  ggtitle("SNP Mushrooms: Euclidean Distance")+geom_treescale()+geom_nodelab(label=(myBoots.snp/500)*100, size=2)

myBoots.snp <- boot.phylo(treeUPGMA.snp, maf006.mx.5, 100, FUN = function(xx) upgma(dist(xx)))
plot(treeUPGMA.snp, show.tip=FALSE, edge.width=.5)
nodelabels((myBoots.snp/500)*100, cex=.6, frame="none")


##################################
# Just Europe

EU.aflp<-rownames(hier$tab[c(23:85,132,195,197:210),])

hier.EU<-hier[i=EU.aflp]
aflp.tree.EU<-upgma(dist(hier.EU))


tips.aflp.EU<-as.data.frame(aflp.tree.EU$tip.label)
pops.aflp.EU<-c(
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(1, "Spain_2006"),
  replicate(1, "Arfons_2007"),
  replicate(14, "Serbia_2007")
)

pops.aflp.EU.df<-as.data.frame(pops.aflp.EU)
meta.aflp.EU<-cbind(tips.aflp.EU, pops.aflp.EU.df)

p <- ggtree(aflp.tree.EU, layout = "circular")
dd <- meta.aflp.EU
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)
p <- p %<+% dd + geom_tippoint(aes(color=pop))
p+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=2)+ggtitle("AFLP Europe Mushrooms: Euclidean Distance")

q <- ggtree(aflp.tree.EU)
dd <- meta.aflp.EU
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)
q <- q %<+% dd + geom_tippoint(aes(color=pop))
q+theme(legend.position="right") + geom_tiplab(size=2)+ggtitle("AFLP Europe Mushrooms: Euclidean Distance")



maf.012
maf.012.EU.ind<-as.character(maf.012$ind.names[c(1:6,8,27,62:72)])

maf.012.EU<-maf.012[i=as.factor(maf.012.EU.ind)]

maf.012.EU.tree<-upgma(dist(maf.012.EU))
tips.snp.EU<-as.data.frame(maf.012.EU.tree$tip.label)


myPops.EU <- as.factor(c('old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	
                         'Agraria',	'Agraria',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',
                         'Mira',	'Mira',	'Mira',	'Mira'))




pops.snp.df.EU<-as.data.frame(myPops.EU)
meta.snp.EU<-cbind(tips.snp.EU, pops.snp.df.EU)

p <- ggtree(maf.012.EU.tree, layout = "circular")
dd <- meta.snp.EU
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)
p <- p %<+% dd + geom_tippoint(aes(color=pop))
p+theme(legend.position="right") + geom_tiplab2(aes(angle=angle), offset(-.2), size=2)+ggtitle("AFLP Europe Mushrooms: Euclidean Distance")

q <- ggtree(maf.012.EU.tree)
dd <- meta.snp.EU
row.names(dd) <- NULL
colnames(dd)<-c("tip", "pop")
print(dd)
q <- q %<+% dd + geom_tippoint(aes(color=pop))
q+theme(legend.position="right") + geom_tiplab(size=3)+ggtitle("SNP Europe Mushrooms: Euclidean Distance")





################################ ################################ ################################ 
################################ ################################ ################################ 
################################ ################################ ################################ 
###### # Comapre number of SNPs among individuals

#df<-maxmiss.NOMISS.maf.049.recode.FIN.vcf.gz.rds$tab
#setdiff((as.character(df[14,])), (as.character(df[14,])))

#df<-df[c(1:5),]

#ones<-vector()
#twos<-vector()
#zeros<-vector()
#ind1<-vector()
#ind2<-vector()

#z<-1
#x<-1
#while(x<nrow(df)+1){
#  y<-x+1
#  while(y<nrow(df)+1){
#    ones[z]<-sum(colSums(df[c(x:y),]==1,na.rm = T)==2)
#    twos[z]<-sum(colSums(df[c(x:y),]==2,na.rm = T)==2)
#    zeros[z]<-sum(colSums(df[c(x:y),]==0,na.rm = T)==2)
#    ind1[z]<-row.names(df)[x]
#    ind2[z]<-row.names(df)[y]
#    y<-y+1
#    z<-z+1
#  }
 
#  x<-x+1
#}



#out.df<-as.data.frame(cbind(ind1,ind2,ones,twos,zeros),stringsAsFactors = F)

#count number of 0, 1, and 2 in each individual

setwd("~/Dropbox/Genet Size/Jacob Analyses")
maf006yall<-readRDS("maf006.gi.rds")
maf006yall.tab<-maf006yall$tab

maf0.006.df<-as.data.frame(as.matrix(maf006yall.tab))
zeros<-rowSums(maf0.006.df == 0, na.rm=T)
ones<-rowSums(maf0.006.df == 1, na.rm=T)
twos<-rowSums(maf0.006.df == 2, na.rm=T)
nadas<-rowSums(is.na(maf0.006.df))

maf0.006.alleles<-cbind(zeros, ones, twos, nadas)
#write.csv(maf0.006.alleles, "maf0.006.all.012.csv")

###
#maf0.012.no.df<-as.data.frame(as.matrix(maf0.012.no))
#zeros<-rowSums(maf0.012.no.df == 0, na.rm=T)
#ones<-rowSums(maf0.012.no.df == 1, na.rm=T)
#twos<-rowSums(maf0.012.no.df == 2, na.rm=T)
#nadas<-rowSums(is.na(maf0.012.no.df))

#maf0.012.no.alleles<-cbind(zeros, ones, twos, nadas)
#write.csv(maf0.012.no.alleles, "maf0.012.no.012.csv")

###
#maf0.49.nomiss.df<-as.data.frame(as.matrix(maf0.49.maxmiss0.9new.all))
#zeros<-rowSums(maf0.49.nomiss.df == 0, na.rm=T)
#ones<-rowSums(maf0.49.nomiss.df == 1, na.rm=T)
#twos<-rowSums(maf0.49.nomiss.df == 2, na.rm=T)
#nadas<-rowSums(is.na(maf0.49.nomiss.df))

#maf0.49.alleles<-cbind(zeros, ones, twos, nadas)
#write.csv(maf0.49.alleles, "maf0.049.all.012.csv")

###########################################################
###########################################################
###########################################################
####### Hwe
setwd("/Volumes/Desassossego/finalizing_genets")
d2.14.hwetest<-read.table("D2.14.hwe.txt", head=T)
d2.14.hwetest.cl<-d2.14.hwetest[d2.14.hwetest$E.HOM1.HET.HOM2 !=   "nan/nan/nan",]

ggplot(d2.14.hwetest.cl, aes(x=P_HWE))+geom_density()

vil.hwetest<-read.table("vilarinho.hwe.txt", head=T)
vil.hwetest.cl<-vil.hwetest[vil.hwetest$E.HOM1.HET.HOM2 !=   "nan/nan/nan",]

ggplot(vil.hwetest.cl, aes(x=P_HWE))+geom_density()

################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
#####################################
# Cophylo of Drakes
#note, poppr::popsub drops monomorphic alleles unless specified
setwd("~/Dropbox/Genet Size/Jacob Analyses")
hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")
hier.gi<-as.genind(as.matrix(hier))
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

pop(hier.gi)<-pops.aflp

hier.drake23<-popsub(hier.gi, sublist =c("Drake_2_2004", "Drake_3_2004"))

dr.aflp.tr<-(upgma(dist(hier.drake23)))









#setwd("/Volumes/Desassossego/finalizing_genets")
setwd("/Volumes/Desassossego/finalizing_genets")
maf006rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.gi.rds")

myPops <- as.factor(c('old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'CA_old',	'old_EU',	'D2.04',	'D2.04',	
                      'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',
                      'D2.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'old_EU',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',
                      'D3.14',	'Agraria',	'Agraria',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',
                      'Mira',	'Mira',	'Mira',	'Mira',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',
                      'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D3.15',	'D3.15',	'D3.15'))


pop(maf006rds)<-myPops
maf006.dr<-popsub(maf006rds, sublist =c("D2.04", "D3.04"))


snp.dr.tr<-(upgma(dist(maf006.dr)))

library(phytools)
obj<-cophylo(snp.dr.tr,dr.aflp.tr,rotate=T)

plot(obj)
add.scale.bar()





################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
#                                                               PCoA
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 
################################ ################################ ################################ ################################ 



setwd("/Volumes/Desassossego/finalizing_genets")
library(adegenet)
library(poppr)
library(ggplot2)
maf006<-read.PLINK("maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.raw", 
                                map.file = "maf006.mx.5/vcf.minDP60.maf0.006.mx5.minQ30.recode.vcf.map", quiet = FALSE,
                                parallel = require("parallel"), n.cores = NULL)


All<-dartR::gl.dist(maf006, method="euclidean")
#write.csv(as.matrix(All), "ALl_gen.dist_MAF006.EUCLID.csv")

#START HERE
#dist.mat<-read.csv("ALl_gen.dist_MAF006.EUCLID.csv", head=T, stringsAsFactors = F)
#rownames(dist.mat)<-dist.mat$X
#dist.mat<-dist.mat[,-1]
#All<-as.dist(dist.mat)
PCoA<-ape::pcoa(as.matrix(All), correction="none", rn=NULL)
biplot(PCoA)


victors<-PCoA$vectors
#NOTE: PCoA$values, has eigenvalues and relative eigenvalues (to the sum of all eigenvalues per axis) - % variation is the second column "Relative_eig"

victors<- data.frame(names = row.names(victors), victors) #convert rown names to column
setwd("~/Dropbox/GENETS_finishing")
coords<-read.csv("GENETS_coords_THISONE.csv", head=T, stringsAsFactors = F) #just so that I had the right labels
PCoA.axis.labelled<-merge(victors, coords, by.x="names", by.y="Sample_Name")

library(ggrepel)

ggplot(PCoA.axis.labelled, aes(x=Axis.1, y=Axis.2))+geom_point()+
  geom_label_repel(
    aes(Axis.1, Axis.2, fill = factor(pop), label = names),
    fontface = 'bold', color = 'white',
    box.padding = 0.35, point.padding = 0.5,
    segment.color = 'grey50'
  ) +
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 2", title="PCoA: MAF0.006, Euclidean Distance (genetic)", fill="Population")

ggplot(PCoA.axis.labelled, aes(x=Axis.1, y=Axis.2, color=factor(PCoA.axis.labelled$pop)))+geom_point()+
  geom_text_repel(aes(label = PCoA.axis.labelled$names))+
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 2", title="PCoA: MAF0.006, Euclidean Distance (genetic)", fill="Population")+ theme(legend.title=element_blank())

forms<-c('tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'sta',	'tri',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	
         'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'cir',	'tri',	'squ',	'squ',	'squ',
         'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',
         'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',	'squ',
         'squ',	'tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'tri',	'rho',	'rho',	'rho',
         'rho',	'rho',	'rho',	'rho',	'rho',	'rho',	'rho',	'rho',	'rho',	'rho',	'rho')

PCoA.axis.labelled$forms<-forms

ggplot(PCoA.axis.labelled, aes(x=Axis.1, y=Axis.2, size=3, color=factor(PCoA.axis.labelled$pop), shape=as.factor(PCoA.axis.labelled$forms)))+geom_point()+
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 2", title="PCoA: MAF0.006, Euclidean Distance (genetic)", fill="Population")+ 
  theme(legend.title=element_blank())+
  scale_shape_manual(values = c("tri"=17, "cir"=19, "squ"=15, "rho"=18, "sta"=8))+
  scale_color_manual(values=c("#cc33ff", "#663300", "#ff0000", "#b30000", "#ff6666", "#ff9900", "#cc7a00", "#cc9900", "#9966ff", "#660066", "#6600ff"))+
  guides(colour = guide_legend(override.aes = list(size=4)),shape = guide_legend(override.aes = list(size=4)))
  #scale_color_discrete(breaks=c("CA_old","D2.04","D2.14","D2.15","D3.04","D3.14","D3.15","Agraria","Mira","Vilarinho", "old_EU"))
 
ggplot(PCoA.axis.labelled, aes(x=Axis.1, y=Axis.3, size=3, color=factor(PCoA.axis.labelled$pop), shape=as.factor(PCoA.axis.labelled$forms)))+geom_point()+
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 3", title="PCoA: MAF0.006, Euclidean Distance (genetic)", fill="Population")+ 
  theme(legend.title=element_blank())+
  scale_shape_manual(values = c("tri"=17, "cir"=19, "squ"=15, "rho"=18, "sta"=8))+
  scale_color_manual(values=c("#cc33ff", "#663300", "#ff0000", "#b30000", "#ff6666", "#ff9900", "#cc7a00", "#cc9900", "#9966ff", "#660066", "#6600ff"))+
  guides(colour = guide_legend(override.aes = list(size=4)),shape = guide_legend(override.aes = list(size=4)))
#scale_color_discrete(breaks=c("CA_old","D2.04","D2.14","D2.15","D3.04","D3.14","D3.15","Agraria","Mira","Vilarinho", "old_EU"))


# _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
#AFLP

setwd("~/Dropbox/Genet Size/Jacob Analyses")
hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")


PCoA.aflp<-ape::pcoa(as.matrix(dist(hier)), correction="none", rn=NULL)
biplot(PCoA)


victors.aflp<-PCoA.aflp$vectors
#rownames(victors)[86]<-"10004"

victors.aflp<- data.frame(names = row.names(victors.aflp), victors.aflp) #convert rown names to column

pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

PCoA.axis.labelled.aflp<-cbind(victors.aflp, pops.aflp)

library(ggrepel)

ggplot(PCoA.axis.labelled.aflp, aes(x=Axis.1, y=Axis.2))+geom_point()+
  geom_label_repel(
    aes(Axis.1, Axis.2, fill = factor(pops.aflp), label = names),
    fontface = 'bold', color = 'white',
    box.padding = 0.035, point.padding = 0.5, size = 1.25, segment.alpha = .6,
    segment.color = 'grey50'
  ) +
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 2", title="PCoA: AFLP, Euclidean Distance (genetic)", fill="Population")

ggplot(PCoA.axis.labelled.aflp, aes(x=Axis.1, y=Axis.2, color=factor(PCoA.axis.labelled$pops.aflp)))+geom_point()+
  geom_text_repel(aes(label = PCoA.axis.labelled$names), segment.size = .25, size=3,segment.alpha = .4)+
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 2", title="PCoA: AFLP, Euclidean Distance (genetic)", fill="Population")+ theme(legend.title=element_blank())





ggplot(PCoA.axis.labelled.aflp, aes(x=Axis.1, y=Axis.2, size=3, color=factor(PCoA.axis.labelled.aflp$pops.aflp)))+geom_point()+
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 2", title="PCoA: AFLP, Euclidean Distance (genetic)", fill="Population")+ 
  theme(legend.title=element_blank())+
  scale_shape_manual(values = 19)+
  scale_color_manual(values=c("#6600cc", "#d966ff", "#9900cc", "#993366", "#ff6699", "#ff0000", "#ff9900", "#cc5200", "#ffff00", "#999900","#e6b800","#0000ff",
                              "#ffcccc", "#8080ff", "#0099ff", "#006bb3", "#b3e0ff", "#df9fbf", "#4d0066"))+
  guides(colour = guide_legend(override.aes = list(size=4)))

ggplot(PCoA.axis.labelled.aflp, aes(x=Axis.1, y=Axis.3, size=3, color=factor(PCoA.axis.labelled.aflp$pops.aflp)))+geom_point()+
  theme_classic(base_size = 16)+labs(x="PCoA Axis 1", y="PCoA Axis 3", title="PCoA: AFLP, Euclidean Distance (genetic)", fill="Population")+ 
  theme(legend.title=element_blank())+
  scale_shape_manual(values = 19)+
  scale_color_manual(values=c("#6600cc", "#d966ff", "#9900cc", "#993366", "#ff6699", "#ff0000", "#ff9900", "#cc5200", "#ffff00", "#999900","#e6b800","#0000ff",
                              "#ffcccc", "#8080ff", "#0099ff", "#006bb3", "#b3e0ff", "#df9fbf", "#4d0066"))+
  guides(colour = guide_legend(override.aes = list(size=4)))

##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
##########################################################################################################################
########                                          MANTEL TESTS
######## Realized I can only do mantel tests within populations because we only map within pops, not between


setwd("/Volumes/Desassossego/finalizing_genets")
MAF006.mira.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.mira.gi.rds")
MAF006.agraria.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.agraria.gi.rds")
MAF006.vilarinho.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.vilarinho.gi.rds")

MAF006.D2.04.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d2.04.gi.rds")
MAF006.D2.14.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d2.14.gi.rds")
MAF006.D2.15.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d2.15.gi.rds")
MAF006.D3.04.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d3.04.gi.rds")
MAF006.D3.14.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d3.14.gi.rds")
MAF006.D3.15.gi.rds<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d3.15.gi.rds")

#MAF006.old_CA.gi.rds<-readRDS("MAF006.Robjs/MAF006.old_CA.gi.rds")
#MAF006.old_EU.gi.rds<-readRDS("MAF006.Robjs/MAF006.old_EU.gi.rds")



MAF006.mira.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.mira.nomiss.gi.rds")
MAF006.agraria.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.agraria.nomiss.gi.rds")
MAF006.vilarinho.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.vilarinho.nomiss.gi.rds")

MAF006.D2.04.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.D2.04.nomiss.gi.rds")
MAF006.D2.14.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.D2.14.nomiss.gi.rds")
MAF006.D2.15.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.D2.15.nomiss.gi.rds")
MAF006.D3.04.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.D3.04.nomiss.gi.rds")
MAF006.D3.14.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.D3.14.nomiss.gi.rds")
MAF006.D3.15.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.D3.15.nomiss.gi.rds")

MAF006.old_EU.nomiss.gi.rds<-readRDS("MAF006.Robjs/MAF006.old_EU.nomiss.gi.rds")


#########################################
# Genetic distance

#SNP
MAF006.mira.dist<-dist(MAF006.mira.gi.rds)
MAF006.agraria.dist<-dist(MAF006.agraria.gi.rds)

MAF006.D2.04.dist<-dist(MAF006.D2.04.gi.rds)
MAF006.D2.14.dist<-dist(MAF006.D2.14.gi.rds)
MAF006.D2.15.dist<-dist(MAF006.D2.15.gi.rds)
MAF006.D3.04.dist<-dist(MAF006.D3.04.gi.rds)
MAF006.D3.14.dist<-dist(MAF006.D3.14.gi.rds)
MAF006.D3.15.dist<-dist(MAF006.D3.15.gi.rds)

#####################
#AFLP
setwd("~/Dropbox/Genet Size/Jacob Analyses")
library(poppr)
hier<-read.genalex("AFLP_genalex_AMANITABASED.csv")
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

hier.gi<-as.genind(as.matrix(hier))

pop(hier.gi)<-pops.aflp
hier.gc<-as.genclone(hier.gi)

hier.CESAC02<-popsub(hier.gi, sublist = "CESAC_2002")
hier.CESAC06<-popsub(hier.gi, sublist = "CESAC_2006")

hier.Roch1<-popsub(hier.gi, sublist = "Rochester_NY_2007_1")
hier.Roch2<-popsub(hier.gi, sublist = "Rochester_NY_2007_2")
hier.Roch2.sub<-hier.Roch2[c("10124" , "10103"  ,"10107",  "10105" , "10122", "10123"),] 
hier.Roch3<-popsub(hier.gi, sublist = "Rochester_NY_2007_3")

hier.d1<-popsub(hier.gi, sublist = "Drake_1_2004")
hier.d2<-popsub(hier.gi, sublist = "Drake_2_2004")
hier.d3<-popsub(hier.gi, sublist = "Drake_3_2004")
hier.d4<-popsub(hier.gi, sublist = "Drake_4_2004")

hier.hd1<-popsub(hier.gi, sublist = "Hearts_Desire_1_2004")
hier.hd2<-popsub(hier.gi, sublist = "Hearts_Desire_2_2004")
hier.hd3<-popsub(hier.gi, sublist = "Hearts_Desire_3_2004")

hier.JL<-popsub(hier.gi, sublist = "Jakes_Landing_2006")
hier.str<-popsub(hier.gi, sublist = "New_Jersey_str_2006")

hier.S<-popsub(hier.gi, sublist = "Serbia_2007")
hier.S.sub <- hier.S[c("Aph265", "Aph274", "Aph266", "Aph267", "Aph268", "Aph269", "Aph270", "Aph271", "Aph272", "Aph273"),]

#________________________

hier.CESAC02.dist<-dist(hier.CESAC02)
hier.CESAC06.dist<-dist(hier.CESAC06)

hier.Roch1.dist<-dist(hier.Roch1)
hier.Roch2.dist<-dist(hier.Roch2)
hier.Roch2.sub.dist<-dist(hier.Roch2.sub)
hier.Roch3.dist<-dist(hier.Roch3)

hier.d1.dist<-dist(hier.d1)
hier.d2.dist<-dist(hier.d2)
hier.d3.dist<-dist(hier.d3)
hier.d4.dist<-dist(hier.d4)

hier.hd1.dist<-dist(hier.hd1)
hier.hd2.dist<-dist(hier.hd2)
hier.hd3.dist<-dist(hier.hd3)

hier.JL.dist<-dist(hier.JL)
hier.str.dist<-dist(hier.str)

hier.S.dist<-dist(hier.S)
hier.S.sub.dist<-dist(hier.S.sub)

# SNP



#########################################
#geo distance
setwd("~/Dropbox/GENETS_finishing")
coords<-read.csv("ALL_COORDS_geo.csv", head=T, stringsAsFactors = F)

coords.d1<-coords[coords$pop =="Drake1",]
coords.d1.aflp<-coords.d1

coords.d2<-coords[coords$pop =="Drake2",]
coords.d2.04<-coords.d2[coords.d2$year =="Sample_2004",]
coords.d2.04.aflp<-coords.d2.04[-6,]
coords.d2.04.snp<-coords.d2.04[-1,]


coords.d2.14<-coords.d2[coords.d2$year =="Sample_2014",]
coords.d2.14.snp<-coords.d2.14


coords.d2.15<-coords.d2[coords.d2$year =="Sample_2015",]
coords.d2.15.snp<-coords.d2.15[-9,]

coords.d3<-coords[coords$pop =="Drake3",]
coords.d3.04<-coords.d3[coords.d3$year =="Sample_2004",]
coords.d3.04.aflp<-coords.d3.04
coords.d3.04.snp<-coords.d3.04[3:7,]

coords.d3.14<-coords.d3[coords.d3$year =="Sample_2014",]
coords.d3.14.snp<-coords.d3.14

coords.d3.15<-coords.d3[coords.d3$year =="Sample_2015",]
coords.d3.15.snp<-coords.d3.15


coords.d4<-coords[coords$pop =="Drake4",]
coords.d4.aflp<-coords.d4[-2,]

coords.hd1<-coords[coords$pop =="HD1",]
coords.hd1.aflp<-coords.hd1
coords.hd2<-coords[coords$pop =="HD2",]
coords.hd2.aflp<-coords.hd2[-4,]
coords.hd3<-coords[coords$pop =="HD3",]
coords.hd3.aflp<-coords.hd3

coords.mira<-coords[coords$pop =="mira",]
coords.mira.snp<-coords.mira
coords.agraria<-coords[coords$pop =="agraria",]
coords.agraria.snp<-coords.agraria

coords.JL<-coords[coords$pop =="JL",]
coords.JL.aflp<-coords.JL

coords.CESAC02<-coords[coords$pop =="CESAC02",]
coords.CESAC02.aflp<-coords.CESAC02
coords.CESAC06<-coords[coords$pop =="CESAC06",]
coords.CESAC06.aflp<-coords.CESAC06

coords.S<-coords[coords$pop =="S",]
coords.S.aflp<-coords.S # note S 11-14 do not have coords, need to remove from genind

coords.str<-coords[coords$pop =="str",]
coords.str.aflp<-coords.str[-c(2,6,8,12,15,16),]

coords.roch<-coords[coords$pop =="roch",]
coords.roch1<-coords.roch[1:13,]
coords.roch1.aflp<-coords.roch1
coords.roch2<-coords.roch[14:20,]
coords.roch2.aflp<-coords.roch2[-4,] #need to remove 2_6b from genind file
coords.roch3<-coords.roch[21:30,]
coords.roch3.aflp<-coords.roch3[3:4,]

####
#AFLP
coords.d1.aflp
coords.d2.04.aflp
coords.d3.04.aflp
coords.d4.aflp

coords.hd1.aflp
coords.hd2.aflp
coords.hd3.aflp

coords.JL.aflp

coords.CESAC02.aflp
coords.CESAC06.aflp

coords.S.aflp

coords.str.aflp

coords.roch1.aflp

coords.roch2.aflp

coords.roch3.aflp


#SNP

coords.d2.04.snp
coords.d2.14.snp
coords.d2.15.snp

coords.d3.04.snp
coords.d3.14.snp
coords.d3.15.snp

coords.mira.snp
coords.agraria.snp


#rownames

rownames(coords.d1.aflp)<-coords.d1.aflp$FINALlab
rownames(coords.d2.04.aflp)<-coords.d2.04.aflp$FINALlab
rownames(coords.d3.04.aflp)<-coords.d3.04.aflp$FINALlab
rownames(coords.d4.aflp)<-coords.d4.aflp$FINALlab

rownames(coords.hd1.aflp)<-coords.hd1.aflp$FINALlab
rownames(coords.hd2.aflp)<-coords.hd2.aflp$FINALlab
rownames(coords.hd3.aflp)<-coords.hd3.aflp$FINALlab

rownames(coords.JL.aflp)<-coords.JL.aflp$FINALlab

rownames(coords.CESAC02.aflp)<-coords.CESAC02.aflp$FINALlab
rownames(coords.CESAC06.aflp)<-coords.CESAC06.aflp$FINALlab

rownames(coords.S.aflp)<-coords.S.aflp$FINALlab

rownames(coords.str.aflp)<-coords.str.aflp$FINALlab

rownames(coords.roch1.aflp)<-coords.roch1.aflp$FINALlab

rownames(coords.roch2.aflp)<-coords.roch2.aflp$FINALlab

rownames(coords.roch3.aflp)<-coords.roch3.aflp$FINALlab



rownames(coords.d2.04.snp)<-coords.d2.04.snp$FINALlab
rownames(coords.d2.14.snp)<-coords.d2.14.snp$FINALlab
rownames(coords.d2.15.snp)<-coords.d2.15.snp$FINALlab

rownames(coords.d3.04.snp)<-coords.d3.04.snp$FINALlab
rownames(coords.d3.14.snp)<-coords.d3.14.snp$FINALlab
rownames(coords.d3.15.snp)<-coords.d3.15.snp$FINALlab

rownames(coords.mira.snp)<-coords.mira.snp$FINALlab
rownames(coords.agraria.snp)<-coords.agraria.snp$FINALlab

# Euclidean distance of x and y

coords.d1.aflp.dist<-as.matrix(dist(coords.d1.aflp[,5:6]))
colnames(coords.d1.aflp.dist)<-rownames(coords.d1.aflp.dist)<-coords.d1.aflp$FINAlab

coords.d2.04.aflp.dist<-as.matrix(dist(coords.d2.04.aflp[,5:6]))
colnames(coords.d2.04.aflp.dist)<-rownames(coords.d2.04.aflp.dist)<-coords.d2.04.aflp$FINAlab

coords.d3.04.aflp.dist<-as.matrix(dist(coords.d3.04.aflp[,5:6]))
colnames(coords.d3.04.aflp.dist)<-rownames(coords.d3.04.aflp.dist)<-coords.d3.04.aflp$FINAlab


coords.d4.aflp.dist<-as.matrix(dist(coords.d4.aflp[,5:6]))
colnames(coords.d4.aflp.dist)<-rownames(coords.d4.aflp.dist)<-coords.d4.aflp$FINAlab


coords.hd1.aflp.dist<-as.matrix(dist(coords.hd1.aflp[,5:6]))
colnames(coords.hd1.aflp.dist)<-rownames(coords.hd1.aflp.dist)<-coords.hd1.aflp$FINAlab

coords.hd2.aflp.dist<-as.matrix(dist(coords.hd2.aflp[,5:6]))
colnames(coords.hd2.aflp.dist)<-rownames(coords.hd2.aflp.dist)<-coords.hd2.aflp$FINAlab

coords.hd3.aflp.dist<-as.matrix(dist(coords.hd3.aflp[,5:6]))
colnames(coords.hd3.aflp.dist)<-rownames(coords.hd3.aflp.dist)<-coords.hd3.aflp$FINAlab


coords.JL.aflp.dist<-as.matrix(dist(coords.JL.aflp[,5:6]))
colnames(coords.JL.aflp.dist)<-rownames(coords.JL.aflp.dist)<-coords.JL.aflp$FINAlab


coords.CESAC02.aflp.dist<-as.matrix(dist(coords.CESAC02.aflp[,5:6]))
colnames(coords.CESAC02.aflp.dist)<-rownames(coords.CESAC02.aflp.dist)<-coords.CESAC02.aflp$FINAlab

coords.CESAC06.aflp.dist<-as.matrix(dist(coords.CESAC06.aflp[,5:6]))
colnames(coords.CESAC06.aflp.dist)<-rownames(coords.CESAC06.aflp.dist)<-coords.CESAC06.aflp$FINAlab


coords.S.aflp.dist<-as.matrix(dist(coords.S.aflp[,5:6]))
colnames(coords.S.aflp.dist)<-rownames(coords.S.aflp.dist)<-coords.S.aflp$FINAlab


coords.str.aflp.dist<-as.matrix(dist(coords.str.aflp[,5:6]))
colnames(coords.str.aflp.dist)<-rownames(coords.str.aflp.dist)<-coords.str.aflp$FINAlab


coords.roch1.aflp.dist<-as.matrix(dist(coords.roch1.aflp[,5:6]))
colnames(coords.roch1.aflp.dist)<-rownames(coords.roch1.aflp.dist)<-coords.roch1.aflp$FINAlab


coords.roch2.aflp.dist<-as.matrix(dist(coords.roch2.aflp[,5:6]))
colnames(coords.roch2.aflp.dist)<-rownames(coords.roch2.aflp.dist)<-coords.roch2.aflp$FINAlab


coords.roch3.aflp.dist<-as.matrix(dist(coords.roch3.aflp[,5:6]))
colnames(coords.roch3.aflp.dist)<-rownames(coords.roch3.aflp.dist)<-coords.roch3.aflp$FINAlab




coords.d2.04.snp.dist<-as.matrix(dist(coords.d2.04.snp[,5:6]))
colnames(coords.d2.04.snp.dist)<-rownames(coords.d2.04.snp.dist)<-coords.d2.04.snp$FINAlab

coords.d2.14.snp.dist<-as.matrix(dist(coords.d2.14.snp[,5:6]))
colnames(coords.d2.14.snp.dist)<-rownames(coords.d2.14.snp.dist)<-coords.d2.14.snp$FINAlab

coords.d2.15.snp.dist<-as.matrix(dist(coords.d2.15.snp[,5:6]))
colnames(coords.d2.15.snp.dist)<-rownames(coords.d2.15.snp.dist)<-coords.d2.15.snp$FINAlab


coords.d3.04.snp.dist<-as.matrix(dist(coords.d3.04.snp[,5:6]))
colnames(coords.d3.04.snp.dist)<-rownames(coords.d3.04.snp.dist)<-coords.d3.04.snp$FINAlab

coords.d3.14.snp.dist<-as.matrix(dist(coords.d3.14.snp[,5:6]))
colnames(coords.d3.14.snp.dist)<-rownames(coords.d3.14.snp.dist)<-coords.d3.14.snp$FINAlab


coords.d3.15.snp.dist<-as.matrix(dist(coords.d3.15.snp[,5:6]))
colnames(coords.d3.15.snp.dist)<-rownames(coords.d3.15.snp.dist)<-coords.d3.15.snp$FINAlab


coords.mira.snp.dist<-as.matrix(dist(coords.mira.snp[,5:6]))
colnames(coords.mira.snp.dist)<-rownames(coords.mira.snp.dist)<-coords.mira.snp$FINAlab

coords.agraria.snp.dist<-as.matrix(dist(coords.agraria.snp[,5:6]))
colnames(coords.agraria.snp.dist)<-rownames(coords.agraria.snp.dist)<-coords.agraria.snp$FINAlab



##############################################################################################
library(ape)
library(dartR)

mantel.test(as.matrix(coords.d1.aflp.dist),as.matrix(hier.d1.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.d1.dist), Dgeo=as.dist(coords.d1.aflp.dist))

mantel.test(as.matrix(coords.d2.04.aflp.dist),as.matrix(hier.d2.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.d2.dist), Dgeo=as.dist(coords.d2.04.aflp.dist))

mantel.test(as.matrix(coords.d3.04.aflp.dist),as.matrix(hier.d3.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.d3.dist), Dgeo=as.dist(coords.d3.04.aflp.dist))

mantel.test(as.matrix(coords.d4.aflp.dist),as.matrix(hier.d4.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.d4.dist), Dgeo=as.dist(coords.d4.aflp.dist)) 

mantel.test(as.matrix(coords.hd1.aflp.dist),as.matrix(hier.hd1.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.hd1.dist), Dgeo=as.dist(coords.hd1.aflp.dist))


#need to reorder matrices so that they conform
hd2.geo<-as.matrix(coords.hd2.aflp.dist)
hd2.gen<-as.matrix(hier.hd2.dist)

hd2.gen <- hd2.gen[, order(as.integer(colnames(hd2.gen)))]
hd2.gen <- hd2.gen[order(as.integer(colnames(hd2.gen))),]

hd2.geo <- hd2.geo[, order(as.integer(colnames(hd2.geo)))]
hd2.geo <- hd2.geo[order(as.integer(colnames(hd2.geo))),]


mantel.test(hd2.gen, hd2.geo, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hd2.gen), Dgeo=as.dist(hd2.geo))


mantel.test(as.matrix(coords.hd3.aflp.dist),as.matrix(hier.hd3.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.hd3.dist), Dgeo=as.dist(coords.hd3.aflp.dist))


mantel.test(as.matrix(coords.JL.aflp.dist),as.matrix(hier.JL.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.JL.dist), Dgeo=as.dist(coords.JL.aflp.dist))


mantel.test(as.matrix(coords.CESAC02.aflp.dist),as.matrix(hier.CESAC02.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.CESAC02.dist), Dgeo=as.dist(coords.CESAC02.aflp.dist))

mantel.test(as.matrix(coords.CESAC06.aflp.dist),as.matrix(hier.CESAC06.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.CESAC06.dist), Dgeo=as.dist(coords.CESAC06.aflp.dist))

mantel.test(as.matrix(coords.S.aflp.dist),as.matrix(hier.S.sub.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.S.sub.dist), Dgeo=as.dist(coords.S.aflp.dist))

mantel.test(as.matrix(coords.str.aflp.dist),as.matrix(hier.str.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.str.dist), Dgeo=as.dist(coords.str.aflp.dist))

mantel.test(as.matrix(coords.roch1.aflp.dist),as.matrix(hier.Roch1.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.Roch1.dist), Dgeo=as.dist(coords.roch1.aflp.dist))

mantel.test(as.matrix(coords.roch2.aflp.dist),as.matrix(hier.Roch2.sub.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.Roch2.sub.dist), Dgeo=as.dist(coords.roch2.aflp.dist))

mantel.test(as.matrix(coords.roch3.aflp.dist),as.matrix(hier.Roch3.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(hier.Roch3.dist), Dgeo=as.dist(coords.roch3.aflp.dist))


mantel.test(as.matrix(coords.d2.04.snp.dist),as.matrix(MAF006.D2.04.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(MAF006.D2.04.dist), Dgeo=as.dist(coords.d2.04.snp.dist))


#need to reorder
d2.14.gen<-as.matrix(MAF006.D2.14.dist)
d2.14.geo<-as.matrix(coords.d2.14.snp.dist)

d2.14.gen <- d2.14.gen[, order(as.integer(colnames(d2.14.gen)))]
d2.14.gen <- d2.14.gen[order(as.integer(colnames(d2.14.gen))),]

d2.14.geo <- d2.14.geo[, order(as.integer(colnames(d2.14.geo)))]
d2.14.geo <- d2.14.geo[order(as.integer(colnames(d2.14.geo))),]

mantel.test((d2.14.geo),(d2.14.gen), alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(d2.14.gen), Dgeo=as.dist(d2.14.geo))


mantel.test(as.matrix(coords.d2.15.snp.dist),as.matrix(MAF006.D2.15.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(MAF006.D2.15.dist), Dgeo=as.dist(coords.d2.15.snp.dist))

mantel.test(as.matrix(coords.d3.04.snp.dist),as.matrix(MAF006.D3.04.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(MAF006.D3.04.dist), Dgeo=as.dist(coords.d3.04.snp.dist))

#need to reorder
d3.14.gen<-as.matrix(MAF006.D3.14.dist)
d3.14.geo<-as.matrix(coords.d3.14.snp.dist)

d3.14.gen <- d3.14.gen[, order(as.integer(colnames(d3.14.gen)))]
d3.14.gen <- d3.14.gen[order(as.integer(colnames(d3.14.gen))),]

d3.14.geo <- d3.14.geo[, order(as.integer(colnames(d3.14.geo)))]
d3.14.geo <- d3.14.geo[order(as.integer(colnames(d3.14.geo))),]

mantel.test((d3.14.geo),(d3.14.gen), alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(d3.14.gen), Dgeo=as.dist(d3.14.geo))



mantel.test(as.matrix(coords.d3.15.snp.dist),as.matrix(MAF006.D3.15.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(MAF006.D3.15.dist), Dgeo=as.dist(coords.d3.15.snp.dist))


mantel.test(as.matrix(coords.mira.snp.dist),as.matrix(MAF006.mira.dist))
gl.ibd(gl=NULL, Dgen=(MAF006.mira.dist), Dgeo=as.dist(coords.mira.snp.dist))

mantel.test(as.matrix(coords.agraria.snp.dist),as.matrix(MAF006.agraria.dist), alternative = "greater")
gl.ibd(gl=NULL, Dgen=(MAF006.agraria.dist), Dgeo=as.dist(coords.agraria.snp.dist))


#Make figure of d2.2.2014, D3.2004, JL, HD2, CESAC2006
library(gridExtra)
library(dartR)
library(reshape2)
library(ggplot2)
#pdf("Rplot.pdf",width = 4, height = 20)
#png("Rplot.png", width = 200, height=800, units = "px", pointsize = 20)

#par(mfrow=c(5,1))

S<-gl.ibd(gl=NULL, Dgen=(hier.S.sub.dist), Dgeo=as.dist(coords.S.aflp.dist))
SDgeo<-as.matrix(S$Dgeo)
SDgen<-as.matrix(S$Dgen)

SDgeo[upper.tri(SDgeo, diag=T)]<-NA
SDgen[upper.tri(SDgen, diag=T)]<-NA


Sdf<-cbind(melt(SDgeo/100),melt(SDgen))
Sdf<-na.omit(Sdf)

colnames(Sdf)[c(3,6)]<-c("geo","gen")
summary(lm(Sdf$gen~Sdf$geo))

plS<-ggplot(Sdf[,c(3,6)], aes(x=Sdf$geo, y=Sdf$gen))+
  stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
                 bins=8, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  geom_density2d(colour="white", bins=20) +
  geom_point(data = Sdf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  lims(x=c(-0.5,5), y=c(-1,4))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")



A<-gl.ibd(gl=NULL, Dgen=(hier.CESAC06.dist), Dgeo=as.dist(coords.CESAC06.aflp.dist))
ADgeo<-as.matrix(A$Dgeo)
ADgen<-as.matrix(A$Dgen)

ADgeo[upper.tri(ADgeo, diag=T)]<-NA
ADgen[upper.tri(ADgen, diag=T)]<-NA


Adf<-cbind(melt(ADgeo),melt(ADgen))
Adf<-na.omit(Adf)
colnames(Adf)[c(3,6)]<-c("geo","gen")
summary(lm(Adf$gen~Adf$geo))

plCE<-ggplot(Adf[,c(3,6)], aes(x=Adf$geo, y=Adf$gen))+
  stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
                 bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  geom_density2d(colour="white", bins=20) +
  geom_point(data = Adf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  lims(x=c(min(Adf$geo),max(Adf$geo)), y=c(min(Adf$gen),max(Adf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")



B<-gl.ibd(gl=NULL, Dgen=(hier.JL.dist), Dgeo=as.dist(coords.JL.aflp.dist))
BDgeo<-as.matrix(B$Dgeo)
BDgen<-as.matrix(B$Dgen)

BDgeo[upper.tri(BDgeo, diag=T)]<-NA
BDgen[upper.tri(BDgen, diag=T)]<-NA


Bdf<-cbind(melt(BDgeo),melt(BDgen))
Bdf<-na.omit(Bdf)
colnames(Bdf)[c(3,6)]<-c("geo","gen")
summary(lm(Bdf$gen~Bdf$geo))

plJL<-ggplot(Bdf[,c(3,6)], aes(x=Bdf$geo, y=Bdf$gen))+
  stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
                 bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  geom_density2d(colour="white", bins=20) +
  geom_point(data = Bdf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  lims(x=c(min(Bdf$geo),max(Bdf$geo)), y=c(min(Bdf$gen),max(Bdf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")


E<-gl.ibd(gl=NULL, Dgen=as.dist(d2.14.gen), Dgeo=as.dist(d2.14.geo))
EDgeo<-as.matrix(E$Dgeo)
EDgen<-as.matrix(E$Dgen)

EDgeo[upper.tri(EDgeo, diag=T)]<-NA
EDgen[upper.tri(EDgen, diag=T)]<-NA


Edf<-cbind(melt(EDgeo),melt(EDgen))
Edf<-na.omit(Edf)
colnames(Edf)[c(3,6)]<-c("geo","gen")
summary(lm(Edf$gen~Edf$geo))


pldr214<-ggplot(Edf[,c(3,6)], aes(x=Edf$geo, y=Edf$gen))+
  stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
                 bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  geom_density2d(colour="white", bins=20) +
  geom_point(data = Edf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  lims(x=c(min(Edf$geo),max(Edf$geo)), y=c(min(Edf$gen),max(Edf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")
#+scale_y_continuous(labels = function(x) round(x/100))

library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
r <- rectGrob(gp=gpar(fill="white"))
grid.arrange(plS, r, plCE, r, plJL,r, pldr214, r, ncol=2, nrow=4)
grid.arrange(plS, plCE, plJL, pldr214, ncol=2, nrow=2)
#################################################################
#################################################################
#All for suppl
library(reshape2)
scaleFUN <- function(x) sprintf("%.2f", x)

#serbia
S<-gl.ibd(gl=NULL, Dgen=(hier.S.sub.dist), Dgeo=as.dist(coords.S.aflp.dist))
SDgeo<-as.matrix(S$Dgeo)
SDgen<-as.matrix(S$Dgen)

SDgeo[upper.tri(SDgeo, diag=T)]<-NA
SDgen[upper.tri(SDgen, diag=T)]<-NA


Sdf<-cbind(melt(SDgeo/100),melt(SDgen))
Sdf<-na.omit(Sdf)

colnames(Sdf)[c(3,6)]<-c("geo","gen")
summary(lm(Sdf$gen~Sdf$geo))

plS<-ggplot(Sdf[,c(3,6)], aes(x=Sdf$geo, y=Sdf$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
   #              bins=8, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = Sdf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(-0.5,5), y=c(-1,4))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(Sdf$geo),max(Sdf$geo)), ylim=c(min(Sdf$gen),max(Sdf$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Serbia, 2007")



# cesac02
A02<-gl.ibd(gl=NULL, Dgen=(hier.CESAC02.dist), Dgeo=as.dist(coords.CESAC02.aflp.dist))
A02Dgeo<-as.matrix(A02$Dgeo)
A02Dgen<-as.matrix(A02$Dgen)

A02Dgeo[upper.tri(A02Dgeo, diag=T)]<-NA
A02Dgen[upper.tri(A02Dgen, diag=T)]<-NA


A02df<-cbind(melt(A02Dgeo),melt(A02Dgen))
A02df<-na.omit(A02df)
colnames(A02df)[c(3,6)]<-c("geo","gen")
summary(lm(A02df$gen~A02df$geo))

plCE02<-ggplot(A02df[,c(3,6)], aes(x=A02df$geo, y=A02df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
     #            bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = A02df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(Adf$geo),max(A02df$geo)), y=c(min(A02df$gen),max(A02df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(A02df$geo),max(A02df$geo)), ylim=c(min(A02df$gen),max(A02df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("CESAC, 2002")



#cesac 06
A<-gl.ibd(gl=NULL, Dgen=(hier.CESAC06.dist), Dgeo=as.dist(coords.CESAC06.aflp.dist))
ADgeo<-as.matrix(A$Dgeo)
ADgen<-as.matrix(A$Dgen)

ADgeo[upper.tri(ADgeo, diag=T)]<-NA
ADgen[upper.tri(ADgen, diag=T)]<-NA


Adf<-cbind(melt(ADgeo),melt(ADgen))
Adf<-na.omit(Adf)
colnames(Adf)[c(3,6)]<-c("geo","gen")
summary(lm(Adf$gen~Adf$geo))

plCE<-ggplot(Adf[,c(3,6)], aes(x=Adf$geo, y=Adf$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
    #             bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = Adf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(Adf$geo),max(Adf$geo)), y=c(min(Adf$gen),max(Adf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(Adf$geo),max(Adf$geo)), ylim=c(min(Adf$gen),max(Adf$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("CESAC, 2006")



#jl
B<-gl.ibd(gl=NULL, Dgen=(hier.JL.dist), Dgeo=as.dist(coords.JL.aflp.dist))
BDgeo<-as.matrix(B$Dgeo)
BDgen<-as.matrix(B$Dgen)

BDgeo[upper.tri(BDgeo, diag=T)]<-NA
BDgen[upper.tri(BDgen, diag=T)]<-NA


Bdf<-cbind(melt(BDgeo),melt(BDgen))
Bdf<-na.omit(Bdf)
colnames(Bdf)[c(3,6)]<-c("geo","gen")
summary(lm(Bdf$gen~Bdf$geo))

plJL<-ggplot(Bdf[,c(3,6)], aes(x=Bdf$geo, y=Bdf$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
   #              bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = Bdf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(Bdf$geo),max(Bdf$geo)), y=c(min(Bdf$gen),max(Bdf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(Bdf$geo),max(Bdf$geo)), ylim=c(min(Bdf$gen),max(Bdf$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Jake's Landing, 2006")


#str
str<-gl.ibd(gl=NULL, Dgen=(hier.str.dist), Dgeo=as.dist(coords.str.aflp.dist))
strDgeo<-as.matrix(str$Dgeo)
strDgen<-as.matrix(str$Dgen)

strDgeo[upper.tri(strDgeo, diag=T)]<-NA
strDgen[upper.tri(strDgen, diag=T)]<-NA


strdf<-cbind(melt(strDgeo),melt(strDgen))
strdf<-na.omit(strdf)
colnames(strdf)[c(3,6)]<-c("geo","gen")
summary(lm(strdf$gen~strdf$geo))

plstr<-ggplot(strdf[,c(3,6)], aes(x=strdf$geo, y=strdf$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
       #          bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = strdf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(strdf$geo),max(strdf$geo)), y=c(min(strdf$gen),max(strdf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(strdf$geo),max(strdf$geo)), ylim=c(min(strdf$gen),max(strdf$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("str, 2004")


#roch1
roch1<-gl.ibd(gl=NULL, Dgen=(hier.Roch1.dist), Dgeo=as.dist(coords.roch1.aflp.dist))
roch1Dgeo<-as.matrix(roch1$Dgeo)
roch1Dgen<-as.matrix(roch1$Dgen)

roch1Dgeo[upper.tri(roch1Dgeo, diag=T)]<-NA
roch1Dgen[upper.tri(roch1Dgen, diag=T)]<-NA


roch1df<-cbind(melt(roch1Dgeo),melt(roch1Dgen))
roch1df<-na.omit(roch1df)
colnames(roch1df)[c(3,6)]<-c("geo","gen")
summary(lm(roch1df$gen~roch1df$geo))

plroch1<-ggplot(roch1df[,c(3,6)], aes(x=roch1df$geo, y=roch1df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
        #         bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = roch1df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
 # lims(x=c(min(roch1df$geo),max(roch1df$geo)), y=c(min(roch1df$gen),max(roch1df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(roch1df$geo),max(roch1df$geo)), ylim=c(min(roch1df$gen),max(roch1df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Rochester 1, 2007")


#roch 2
roch2<-gl.ibd(gl=NULL, Dgen=(hier.Roch2.sub.dist), Dgeo=as.dist(coords.roch2.aflp.dist))
roch2Dgeo<-as.matrix(roch2$Dgeo)
roch2Dgen<-as.matrix(roch2$Dgen)

roch2Dgeo[upper.tri(roch2Dgeo, diag=T)]<-NA
roch2Dgen[upper.tri(roch2Dgen, diag=T)]<-NA


roch2df<-cbind(melt(roch2Dgeo),melt(roch2Dgen))
roch2df<-na.omit(roch2df)
colnames(roch2df)[c(3,6)]<-c("geo","gen")
summary(lm(roch2df$gen~roch2df$geo))

plroch2<-ggplot(roch2df[,c(3,6)], aes(x=roch2df$geo, y=roch2df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = roch2df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black", fullrange = T)+
  #lims(x=c(min(roch2df$geo),max(roch2df$geo)), y=c(min(roch2df$gen),max(roch2df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(roch2df$geo),max(roch2df$geo)), ylim=c(min(roch2df$gen),max(roch2df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Rcohester 2, 2007")


#hd1
hd1<-gl.ibd(gl=NULL, Dgen=(hier.hd1.dist), Dgeo=as.dist(coords.hd1.aflp.dist))
hd1Dgeo<-as.matrix(hd1$Dgeo)
hd1Dgen<-as.matrix(hd1$Dgen)

hd1Dgeo[upper.tri(hd1Dgeo, diag=T)]<-NA
hd1Dgen[upper.tri(hd1Dgen, diag=T)]<-NA


hd1df<-cbind(melt(hd1Dgeo),melt(hd1Dgen))
hd1df<-na.omit(hd1df)
colnames(hd1df)[c(3,6)]<-c("geo","gen")
summary(lm(hd1df$gen~hd1df$geo))

plhd1<-ggplot(hd1df[,c(3,6)], aes(x=hd1df$geo, y=hd1df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
      #           bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = hd1df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(hd1df$geo),max(hd1df$geo)), y=c(min(hd1df$gen),max(hd1df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(hd1df$geo),max(hd1df$geo)), ylim=c(min(hd1df$gen),max(hd1df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Heart's Desire 1, 2004")



#hd2
hd2<-gl.ibd(gl=NULL, Dgen=as.dist(hd2.gen), Dgeo=as.dist(hd2.geo))
hd2Dgeo<-as.matrix(hd2$Dgeo)
hd2Dgen<-as.matrix(hd2$Dgen)

hd2Dgeo[upper.tri(hd2Dgeo, diag=T)]<-NA
hd2Dgen[upper.tri(hd2Dgen, diag=T)]<-NA


hd2df<-cbind(melt(hd2Dgeo),melt(hd2Dgen))
hd2df<-na.omit(hd2df)
colnames(hd2df)[c(3,6)]<-c("geo","gen")
summary(lm(hd2df$gen~hd2df$geo))

plhd2<-ggplot(hd2df[,c(3,6)], aes(x=hd2df$geo, y=hd2df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = hd2df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(hd2df$geo),max(hd2df$geo)), y=c(min(hd2df$gen),max(hd2df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(hd2df$geo),max(hd2df$geo)), ylim=c(min(hd2df$gen),max(hd2df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Heart's Desire 2, 2004")


#hd3
hd3<-gl.ibd(gl=NULL, Dgen=(hier.hd3.dist), Dgeo=as.dist(coords.hd3.aflp.dist))
hd3Dgeo<-as.matrix(hd3$Dgeo)
hd3Dgen<-as.matrix(hd3$Dgen)

hd3Dgeo[upper.tri(hd3Dgeo, diag=T)]<-NA
hd3Dgen[upper.tri(hd3Dgen, diag=T)]<-NA


hd3df<-cbind(melt(hd3Dgeo),melt(hd3Dgen))
hd3df<-na.omit(hd3df)
colnames(hd3df)[c(3,6)]<-c("geo","gen")
summary(lm(hd3df$gen~hd3df$geo))

plhd3<-ggplot(hd3df[,c(3,6)], aes(x=hd3df$geo, y=hd3df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = hd3df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #coord_cartesian(xlim=c(min(hd3df$geo),max(hd3df$geo)), ylim=c(min(hd3df$gen),max(hd3df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(hd3df$geo),max(hd3df$geo)), ylim=c(min(hd3df$gen),max(hd3df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Heart's Desire 3, 2004")




#d1
d1<-gl.ibd(gl=NULL, Dgen=(hier.d1.dist), Dgeo=as.dist(coords.d1.aflp.dist))
d1Dgeo<-as.matrix(d1$Dgeo)
d1Dgen<-as.matrix(d1$Dgen)

d1Dgeo[upper.tri(d1Dgeo, diag=T)]<-NA
d1Dgen[upper.tri(d1Dgen, diag=T)]<-NA


d1df<-cbind(melt(d1Dgeo),melt(d1Dgen))
d1df<-na.omit(d1df)
colnames(d1df)[c(3,6)]<-c("geo","gen")
summary(lm(d1df$gen~d1df$geo))

pld1<-ggplot(d1df[,c(3,6)], aes(x=d1df$geo, y=d1df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
   #              bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = d1df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(d1df$geo),max(d1df$geo)), y=c(min(d1df$gen),max(d1df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(d1df$geo),max(d1df$geo)), ylim=c(min(d1df$gen),max(d1df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 1, 2004")



#d2
d2<-gl.ibd(gl=NULL, Dgen=(hier.d2.dist), Dgeo=as.dist(coords.d2.04.aflp.dist))
d2Dgeo<-as.matrix(d2$Dgeo)
d2Dgen<-as.matrix(d2$Dgen)

d2Dgeo[upper.tri(d2Dgeo, diag=T)]<-NA
d2Dgen[upper.tri(d2Dgen, diag=T)]<-NA


d2df<-cbind(melt(d2Dgeo),melt(d2Dgen))
d2df<-na.omit(d2df)
colnames(d2df)[c(3,6)]<-c("geo","gen")
summary(lm(d2df$gen~d2df$geo))

pld2<-ggplot(d2df[,c(3,6)], aes(x=d2df$geo, y=d2df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
   #              bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = d2df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(d2df$geo),max(d2df$geo)), y=c(min(d2df$gen),max(d2df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(d2df$geo),max(d2df$geo)), ylim=c(min(d2df$gen),max(d2df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 2, 2004")


#d3
d3<-gl.ibd(gl=NULL, Dgen=(hier.d3.dist), Dgeo=as.dist(coords.d3.04.aflp.dist))
d3Dgeo<-as.matrix(d3$Dgeo)
d3Dgen<-as.matrix(d3$Dgen)

d3Dgeo[upper.tri(d3Dgeo, diag=T)]<-NA
d3Dgen[upper.tri(d3Dgen, diag=T)]<-NA


d3df<-cbind(melt(d3Dgeo),melt(d3Dgen))
d3df<-na.omit(d3df)
colnames(d3df)[c(3,6)]<-c("geo","gen")
summary(lm(d3df$gen~d3df$geo))

pld3<-ggplot(d3df[,c(3,6)], aes(x=d3df$geo, y=d3df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
       #          bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = d3df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(d3df$geo),max(d3df$geo)), y=c(min(d3df$gen),max(d3df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(d3df$geo),max(d3df$geo)), ylim=c(min(d3df$gen),max(d3df$gen)))+
scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 3, 2004")




#d4
d4<-gl.ibd(gl=NULL, Dgen=(hier.d4.dist), Dgeo=as.dist(coords.d4.aflp.dist))
d4Dgeo<-as.matrix(d4$Dgeo)
d4Dgen<-as.matrix(d4$Dgen)

d4Dgeo[upper.tri(d4Dgeo, diag=T)]<-NA
d4Dgen[upper.tri(d4Dgen, diag=T)]<-NA


d4df<-cbind(melt(d4Dgeo),melt(d4Dgen))
d4df<-na.omit(d4df)
colnames(d4df)[c(3,6)]<-c("geo","gen")
summary(lm(d4df$gen~d4df$geo))

pld4<-ggplot(d4df[,c(3,6)], aes(x=d4df$geo, y=d4df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
    #             bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = d4df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(d4df$geo),max(d4df$geo)), y=c(min(d4df$gen),max(d4df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(d4df$geo),max(d4df$geo)), ylim=c(min(d4df$gen),max(d4df$gen)))+
scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 4, 2004")

library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
r <- rectGrob(gp=gpar(fill="white"))
grid.arrange(plS, plCE02, plCE, plJL, plstr, r, plroch1, plroch2, r, plhd1, plhd2, plhd3, pld1, pld2, r, pld3, pld4, r,  ncol=3, nrow=6)

#############
#############
#SNP

#mira
mira<-gl.ibd(gl=NULL, Dgen=(MAF006.mira.dist), Dgeo=as.dist(coords.mira.snp.dist))
miraDgeo<-as.matrix(mira$Dgeo)
miraDgen<-as.matrix(mira$Dgen)

miraDgeo[upper.tri(miraDgeo, diag=T)]<-NA
miraDgen[upper.tri(miraDgen, diag=T)]<-NA


miradf<-cbind(melt(miraDgeo),melt(miraDgen))
miradf<-na.omit(miradf)
colnames(miradf)[c(3,6)]<-c("geo","gen")
summary(lm(miradf$gen~miradf$geo))

plmira<-ggplot(miradf[,c(3,6)], aes(x=miradf$geo, y=miradf$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
     #            bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = miradf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(miradf$geo),max(miradf$geo)), y=c(min(miradf$gen),max(miradf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(miradf$geo),max(miradf$geo)), ylim=c(min(miradf$gen),max(miradf$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Mira, 2015")



#agraria
#agr<-gl.ibd(gl=NULL, Dgen=(MAF006.agraria.dist), Dgeo=as.dist(coords.agraria.snp.dist))
#agrDgeo<-as.matrix(agr$Dgeo)
#agrDgen<-as.matrix(agr$Dgen)

#agrDgeo[upper.tri(agrDgeo, diag=T)]<-NA
#agrDgen[upper.tri(agrDgen, diag=T)]<-NA


#agrdf<-cbind(melt(agrDgeo),melt(agrDgen))
#agrdf<-na.omit(agrdf)
#colnames(agrdf)[c(3,6)]<-c("geo","gen")
#summary(lm(agrdf$gen~agrdf$geo))

#plagr<-ggplot(agrdf[,c(3,6)], aes(x=agrdf$geo, y=agrdf$gen))+
#  stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
#                 bins=100, geom="polygon") + 
#  scale_fill_gradient(low = "yellow", high = "red") +
#  scale_alpha(range = c(0, 1), guide = FALSE) +
#  geom_density2d(colour="white", bins=20) +
#  geom_point(data = agrdf[,c(3,6)]) +
#  stat_smooth(method="lm", level=.95, size=1, color="black")+
#  lims(x=c(min(agrdf$geo),max(agrdf$geo)), y=c(min(agrdf$gen),max(agrdf$gen)))+
#  theme(axis.text.y   = element_text(size=10),
#        axis.text.x   = element_text(size=10),
#        axis.title.y  = element_text(size=12),
#        axis.title.x  = element_text(size=12),
#        panel.background = element_blank(),
#        panel.grid.major = element_blank(), 
#        panel.grid.minor = element_blank(),
#        axis.line = element_line(colour = "black"),
#        panel.border = element_rect(colour = "black", fill=NA, size=1),
#        legend.position = "none",
#  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")


#dr2.04
dr204<-gl.ibd(gl=NULL, Dgen=(MAF006.D2.04.dist), Dgeo=as.dist(coords.d2.04.snp.dist))
dr204Dgeo<-as.matrix(dr204$Dgeo)
dr204Dgen<-as.matrix(dr204$Dgen)

dr204Dgeo[upper.tri(dr204Dgeo, diag=T)]<-NA
dr204Dgen[upper.tri(dr204Dgen, diag=T)]<-NA


dr204df<-cbind(melt(dr204Dgeo),melt(dr204Dgen))
dr204df<-na.omit(dr204df)
colnames(dr204df)[c(3,6)]<-c("geo","gen")
summary(lm(dr204df$gen~dr204df$geo))

pldr204<-ggplot(dr204df[,c(3,6)], aes(x=dr204df$geo, y=dr204df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = dr204df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(dr204df$geo),max(dr204df$geo)), y=c(min(dr204df$gen),max(dr204df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(dr204df$geo),max(dr204df$geo)), ylim=c(min(dr204df$gen),max(dr204df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 2, 2004")


#d3.04
dr304<-gl.ibd(gl=NULL, Dgen=(MAF006.D3.04.dist), Dgeo=as.dist(coords.d3.04.snp.dist))
dr304Dgeo<-as.matrix(dr304$Dgeo)
dr304Dgen<-as.matrix(dr304$Dgen)

dr304Dgeo[upper.tri(dr304Dgeo, diag=T)]<-NA
dr304Dgen[upper.tri(dr304Dgen, diag=T)]<-NA


dr304df<-cbind(melt(dr304Dgeo),melt(dr304Dgen))
dr304df<-na.omit(dr304df)
colnames(dr304df)[c(3,6)]<-c("geo","gen")
summary(lm(dr304df$gen~dr304df$geo))

pldr304<-ggplot(dr304df[,c(3,6)], aes(x=dr304df$geo, y=dr304df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = dr304df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(dr304df$geo),max(dr304df$geo)), y=c(min(dr304df$gen),max(dr304df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(dr304df$geo),max(dr304df$geo)), ylim=c(min(dr304df$gen),max(dr304df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 3, 2004")



#d2.14
E<-gl.ibd(gl=NULL, Dgen=as.dist(d2.14.gen), Dgeo=as.dist(d2.14.geo))
EDgeo<-as.matrix(E$Dgeo)
EDgen<-as.matrix(E$Dgen)

EDgeo[upper.tri(EDgeo, diag=T)]<-NA
EDgen[upper.tri(EDgen, diag=T)]<-NA


Edf<-cbind(melt(EDgeo),melt(EDgen))
Edf<-na.omit(Edf)
colnames(Edf)[c(3,6)]<-c("geo","gen")
summary(lm(Edf$gen~Edf$geo))


pldr214<-ggplot(Edf[,c(3,6)], aes(x=Edf$geo, y=Edf$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
   #              bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = Edf[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(Edf$geo),max(Edf$geo)), y=c(min(Edf$gen),max(Edf$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(Edf$geo),max(Edf$geo)), ylim=c(min(Edf$gen),max(Edf$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 2, 2014")


#d3.14
dr314<-gl.ibd(gl=NULL, Dgen=as.dist(d3.14.gen), Dgeo=as.dist(d3.14.geo))
dr314Dgeo<-as.matrix(dr314$Dgeo)
dr314Dgen<-as.matrix(dr314$Dgen)

dr314Dgeo[upper.tri(dr314Dgeo, diag=T)]<-NA
dr314Dgen[upper.tri(dr314Dgen, diag=T)]<-NA


dr314df<-cbind(melt(dr314Dgeo),melt(dr314Dgen))
dr314df<-na.omit(dr314df)
colnames(dr314df)[c(3,6)]<-c("geo","gen")
summary(lm(dr314df$gen~dr314df$geo))

pldr314<-ggplot(dr314df[,c(3,6)], aes(x=dr314df$geo, y=dr314df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
   #              bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = dr314df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(dr314df$geo),max(dr314df$geo)), y=c(min(dr314df$gen),max(dr314df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(dr314df$geo),max(dr314df$geo)), ylim=c(min(dr314df$gen),max(dr314df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 3, 2014")


#d2.15
dr215<-gl.ibd(gl=NULL, Dgen=(MAF006.D2.15.dist), Dgeo=as.dist(coords.d2.15.snp.dist))
dr215Dgeo<-as.matrix(dr215$Dgeo)
dr215Dgen<-as.matrix(dr215$Dgen)

dr215Dgeo[upper.tri(dr215Dgeo, diag=T)]<-NA
dr215Dgen[upper.tri(dr215Dgen, diag=T)]<-NA


dr215df<-cbind(melt(dr215Dgeo),melt(dr215Dgen))
dr215df<-na.omit(dr215df)
colnames(dr215df)[c(3,6)]<-c("geo","gen")
summary(lm(dr215df$gen~dr215df$geo))

pldr215<-ggplot(dr215df[,c(3,6)], aes(x=dr215df$geo, y=dr215df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = dr215df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(dr215df$geo),max(dr215df$geo)), y=c(min(dr215df$gen),max(dr215df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(dr215df$geo),max(dr215df$geo)), ylim=c(min(dr215df$gen),max(dr215df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 2, 2015")

#d3.15
dr315<-gl.ibd(gl=NULL, Dgen=(MAF006.D3.15.dist), Dgeo=as.dist(coords.d3.15.snp.dist))
dr315Dgeo<-as.matrix(dr315$Dgeo)
dr315Dgen<-as.matrix(dr315$Dgen)

dr315Dgeo[upper.tri(dr315Dgeo, diag=T)]<-NA
dr315Dgen[upper.tri(dr315Dgen, diag=T)]<-NA


dr315df<-cbind(melt(dr315Dgeo),melt(dr315Dgen))
dr315df<-na.omit(dr315df)
colnames(dr315df)[c(3,6)]<-c("geo","gen")
summary(lm(dr315df$gen~dr315df$geo))

pldr315<-ggplot(dr315df[,c(3,6)], aes(x=dr315df$geo, y=dr315df$gen))+
  #stat_density2d(aes(alpha=..level.., fill=..level..), size=2, 
  #               bins=100, geom="polygon") + 
  scale_fill_gradient(low = "yellow", high = "red") +
  scale_alpha(range = c(0, 1), guide = FALSE) +
  #geom_density2d(colour="white", bins=20) +
  geom_point(data = dr315df[,c(3,6)]) +
  stat_smooth(method="lm", level=.95, size=1, color="black")+
  #lims(x=c(min(dr315df$geo),max(dr315df$geo)), y=c(min(dr315df$gen),max(dr315df$gen)))+
  theme(axis.text.y   = element_text(size=10),
        axis.text.x   = element_text(size=10),
        axis.title.y  = element_text(size=12),
        axis.title.x  = element_text(size=12),
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_rect(colour = "black", fill=NA, size=1),
        legend.position = "none",
  ) + labs(x="Distance (m)", y="Euclidean Genetic Distance")+coord_cartesian(xlim=c(min(dr315df$geo),max(dr315df$geo)), ylim=c(min(dr315df$gen),max(dr315df$gen)))+
  scale_y_continuous(labels=scaleFUN)+scale_x_continuous(labels=scaleFUN)+ggtitle("Drake 3, 2015")


grid.arrange(plmira, r, pldr204, pldr304, pldr214, pldr314, pldr215, pldr315, ncol=2, nrow=4)


#################################################################
#################################################################

dens <- MASS::kde2d(S$Dgeo, S$Dgen, n = 300)
myPal <- colorRampPalette(c("white", "blue", "gold", 
                            "orange", "red"))
plot(S$Dgeo, S$Dgen, pch = 20, cex = 0.8)
image(dens, col = transp(myPal(300), 0.7), add = TRUE)
points(S$Dgeo, S$Dgen, pch = 20, cex = 0.8)
abline(lm(S$Dgen ~ S$Dgeo))
title("Isolation by distance")

A<-gl.ibd(gl=NULL, Dgen=(hier.CESAC06.dist), Dgeo=as.dist(coords.CESAC06.aflp.dist))
B<-gl.ibd(gl=NULL, Dgen=(hier.JL.dist), Dgeo=as.dist(coords.JL.aflp.dist))
E<-gl.ibd(gl=NULL, Dgen=as.dist(d2.14.gen), Dgeo=as.dist(d2.14.geo))

dev.off()


###########################################
# Combine analyses

lat.dr1<-38.0545
long.dr1<--122.83343

lat.dr2<-38.054785
long.dr2<--122.833232

lat.dr3<-38.055212
long.dr3<--122.834134

lat.dr4<-38.054675
long.dr4<--122.836545


library(geosphere)
distm(c(long.dr1, lat.dr1), c(long.dr3, lat.dr3), fun = distHaversine)
distm(c(long.dr2, lat.dr2), c(long.dr3, lat.dr3), fun = distHaversine)
distm(c(long.dr4, lat.dr4), c(long.dr3, lat.dr3), fun = distHaversine)


lat.roch1<-43.233019
long.roch1<--77.554686

lat.roch2<-43.232747
long.roch2<--77.554917

lat.roch3<-43.232896
long.roch3<--77.554851

library(geosphere)

distm(c(long.roch1, lat.roch1), c(long.roch3, lat.roch3), fun = distHaversine)
distm(c(long.roch2, lat.roch2), c(long.roch3, lat.roch3), fun = distHaversine)

hier.gc.roch<-popsub(hier.gc, sublist=c("Rochester_NY_2007_1", "Rochester_NY_2007_2", "Rochester_NY_2007_3"))
plot(nj(dist(hier.gc.roch)))

setwd("~/Dropbox/Genet Size/Jacob Analyses")
coords.trans<-read.csv("COMBINED_coords_Dr.HD.Roch.csv", head=T, stringsAsFactors = F)

coords.trans.dr<-coords.trans[1:97,]
ggplot(coords.trans.dr, aes(x=x.trans, y=y.trans, color=pop))+geom_point()

coords.trans.roch<-coords.trans[117:146,]
ggplot(coords.trans.roch, aes(x=x.trans, y=y.trans, color=pop))+geom_point()


coords.trans.HD<-coords.trans[98:116,]
ggplot(coords.trans.HD, aes(x=x.trans, y=y.trans, color=pop))+geom_point()
##############################################
# HD Mantel Combo
hier.gi.HD12<-popsub(hier.gi, sublist=c("Hearts_Desire_1_2004", "Hearts_Desire_2_2004"))
hier.gi.HD23<-popsub(hier.gi, sublist=c("Hearts_Desire_2_2004", "Hearts_Desire_3_2004"))
hier.gi.HD13<-popsub(hier.gi, sublist=c("Hearts_Desire_1_2004", "Hearts_Desire_3_2004"))

hier.gi.HD<-popsub(hier.gi, sublist=c("Hearts_Desire_1_2004","Hearts_Desire_2_2004", "Hearts_Desire_3_2004"))

hier.gi.HD12.dist<-as.matrix(dist(hier.gi.HD12))
hier.gi.HD23.dist<-as.matrix(dist(hier.gi.HD23))
hier.gi.HD13.dist<-as.matrix(dist(hier.gi.HD13))

hier.gi.HD23.dist <- hier.gi.HD23.dist[, order(as.double(colnames(hier.gi.HD23.dist)))]
hier.gi.HD23.dist <- hier.gi.HD23.dist[order(as.double(rownames(hier.gi.HD23.dist))),]

hier.gi.HD.dist<-as.matrix(dist(hier.gi.HD))
hier.gi.HD.dist <- hier.gi.HD.dist[, order(as.double(colnames(hier.gi.HD.dist)))]
hier.gi.HD.dist <- hier.gi.HD.dist[order(as.double(rownames(hier.gi.HD.dist))),]


coords.HD1<-coords.trans[98:104,]
coords.HD2<-coords.trans[105:112,]
coords.HD3<-coords.trans[113:116,]
coords.HD<-coords.trans[98:116,]

cords.HD12<-rbind(coords.HD1, coords.HD2)
cords.HD23<-rbind(coords.HD2, coords.HD3)
cords.HD13<-rbind(coords.HD1, coords.HD3)

coords.HD

cords.HD12.dist<-as.matrix(dist(cords.HD12[,c("x.trans", "y.trans")]))
colnames(cords.HD12.dist)<-rownames(cords.HD12.dist)<-cords.HD12$FINAlab
cords.HD12.dist<-cords.HD12.dist[-11,-11]

cords.HD23.dist<-as.matrix(dist(cords.HD23[,c("x.trans", "y.trans")]))
colnames(cords.HD23.dist)<-rownames(cords.HD23.dist)<-cords.HD23$FINAlab
cords.HD23.dist<-cords.HD23.dist[-4,-4]
cords.HD23.dist <- cords.HD23.dist[, order(as.integer(colnames(cords.HD23.dist)))]
cords.HD23.dist <- cords.HD23.dist[order(as.integer(colnames(cords.HD23.dist))),]

cords.HD13.dist<-as.matrix(dist(cords.HD13[,c("x.trans", "y.trans")]))
colnames(cords.HD13.dist)<-rownames(cords.HD13.dist)<-cords.HD13$FINAlab
cords.HD13.dist<-cords.HD13.dist


cords.HD.dist<-as.matrix(dist(coords.HD[,c("x.trans", "y.trans")]))
colnames(cords.HD.dist)<-rownames(cords.HD.dist)<-coords.HD$FINAlab
cords.HD.dist <- cords.HD.dist[, order(as.integer(colnames(cords.HD.dist)))]
cords.HD.dist <- cords.HD.dist[order(as.integer(colnames(cords.HD.dist))),]
cords.HD.dist<-cords.HD.dist[-11,-11]



mantel.test(cords.HD12.dist, hier.gi.HD12.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.HD12.dist), Dgeo=as.dist(cords.HD12.dist))

mantel.test(cords.HD23.dist, hier.gi.HD23.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.HD23.dist), Dgeo=as.dist(cords.HD23.dist))

mantel.test(cords.HD13.dist, hier.gi.HD13.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.HD13.dist), Dgeo=as.dist(cords.HD13.dist))


mantel.test(cords.HD.dist, hier.gi.HD.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.HD.dist), Dgeo=as.dist(cords.HD.dist))




##############################################
# Rochester Mantel Combo
hier.gc.roch13<-popsub(hier.gc, sublist=c("Rochester_NY_2007_1", "Rochester_NY_2007_3"))
hier.gc.roch12<-popsub(hier.gc, sublist=c("Rochester_NY_2007_1", "Rochester_NY_2007_2"))
hier.gc.roch23<-popsub(hier.gc, sublist=c("Rochester_NY_2007_2", "Rochester_NY_2007_3"))

hier.gc.roch<-popsub(hier.gc, sublist=c("Rochester_NY_2007_1", "Rochester_NY_2007_2", "Rochester_NY_2007_3"))


hier.gc.roch13.dist<-as.matrix(dist(hier.gc.roch13))
hier.gc.roch12.dist<-as.matrix(dist(hier.gc.roch12))
hier.gc.roch12.dist<-hier.gc.roch12.dist[-19,-19]
hier.gc.roch23.dist<-as.matrix(dist(hier.gc.roch23))
hier.gc.roch23.dist<-hier.gc.roch23.dist[-6,-6]

hier.gc.roch.dist<-as.matrix(dist(hier.gc.roch))
hier.gc.roch.dist<-hier.gc.roch.dist[-19,-19]

coords.trans.roch
coords.roch1<-coords.trans.roch[1:13,]
coords.roch1.aflp<-coords.roch1

coords.roch2<-coords.trans.roch[14:20,]
coords.roch2.aflp<-coords.roch2[-4,] #need to remove 2_6b from genind file

coords.roch3<-coords.trans.roch[21:30,]
coords.roch3.aflp<-coords.roch3[3:4,]

coords.roch12<-rbind(coords.roch1.aflp, coords.roch2.aflp)
coords.roch23<-rbind(coords.roch2.aflp, coords.roch3.aflp)
coords.roch13<-rbind(coords.roch1.aflp, coords.roch3.aflp)

coords.roch<-rbind(coords.roch1.aflp, coords.roch2.aflp, coords.roch3.aflp)

coords.roch12.aflp.dist<-as.matrix(dist(coords.roch12[,c("x.trans", "y.trans")]))
colnames(coords.roch12.aflp.dist)<-rownames(coords.roch12.aflp.dist)<-coords.roch12$FINAlab

coords.roch23.aflp.dist<-as.matrix(dist(coords.roch23[,c("x.trans", "y.trans")]))
colnames(coords.roch23.aflp.dist)<-rownames(coords.roch23.aflp.dist)<-coords.roch23$FINAlab

coords.roch13.aflp.dist<-as.matrix(dist(coords.roch13[,c("x.trans", "y.trans")]))
colnames(coords.roch13.aflp.dist)<-rownames(coords.roch13.aflp.dist)<-coords.roch13$FINAlab

coords.roch.aflp.dist<-as.matrix(dist(coords.roch[,c("x.trans", "y.trans")]))
colnames(coords.roch.aflp.dist)<-rownames(coords.roch.aflp.dist)<-coords.roch$FINAlab

library(phangorn)
plot(upgma(dist(hier.gc.roch)))

mantel.test(coords.roch12.aflp.dist, hier.gc.roch12.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gc.roch12.dist), Dgeo=as.dist(coords.roch12.aflp.dist))

mantel.test(coords.roch23.aflp.dist, hier.gc.roch23.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gc.roch23.dist), Dgeo=as.dist(coords.roch23.aflp.dist))

mantel.test(coords.roch13.aflp.dist, hier.gc.roch13.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gc.roch13.dist), Dgeo=as.dist(coords.roch13.aflp.dist))

mantel.test(coords.roch.aflp.dist, hier.gc.roch.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gc.roch.dist), Dgeo=as.dist(coords.roch.aflp.dist))


##############################################
#Drake Mantel Combo
#AFLP

hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")
hier.gi<-as.genind(as.matrix(hier))
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

pop(hier.gi)<-pops.aflp

hier.gc<-as.genclone(hier.gi)


hier.gi.dr12<-popsub(hier.gi, sublist=c("Drake_1_2004", "Drake_2_2004"))
hier.gi.dr13<-popsub(hier.gi, sublist=c("Drake_1_2004", "Drake_3_2004"))
hier.gi.dr14<-popsub(hier.gi, sublist=c("Drake_1_2004", "Drake_4_2004"))
hier.gi.dr23<-popsub(hier.gi, sublist=c("Drake_2_2004", "Drake_3_2004"))
hier.gi.dr24<-popsub(hier.gi, sublist=c("Drake_2_2004", "Drake_4_2004"))
hier.gi.dr34<-popsub(hier.gi, sublist=c("Drake_3_2004", "Drake_4_2004"))

hier.gi.dr<-popsub(hier.gi, sublist=c("Drake_1_2004", "Drake_2_2004", "Drake_3_2004", "Drake_4_2004"))

hier.gi.dr12.dist<-as.matrix(dist(hier.gi.dr12))
hier.gi.dr13.dist<-as.matrix(dist(hier.gi.dr13))
hier.gi.dr14.dist<-as.matrix(dist(hier.gi.dr14))
hier.gi.dr23.dist<-as.matrix(dist(hier.gi.dr23))
hier.gi.dr24.dist<-as.matrix(dist(hier.gi.dr24))
hier.gi.dr34.dist<-as.matrix(dist(hier.gi.dr34))

hier.gi.dr.dist<-as.matrix(dist(hier.gi.dr))

coords.trans.dr1.aflp<-coords.trans[1:19,]
coords.trans.dr2.aflp<-coords.trans[20:33,]
coords.trans.dr2.aflp<-coords.trans.dr2.aflp[-9,]
coords.trans.dr3.aflp<-coords.trans[74:81,]
coords.trans.dr4.aflp<-coords.trans[91:97,]
coords.trans.dr4.aflp<-coords.trans.dr4.aflp[-2,]

coords.trans.dr12<-rbind(coords.trans.dr1.aflp, coords.trans.dr2.aflp)
coords.trans.dr13<-rbind(coords.trans.dr1.aflp, coords.trans.dr3.aflp)
coords.trans.dr14<-rbind(coords.trans.dr1.aflp, coords.trans.dr4.aflp)
coords.trans.dr23<-rbind(coords.trans.dr2.aflp, coords.trans.dr3.aflp)
coords.trans.dr24<-rbind(coords.trans.dr2.aflp, coords.trans.dr4.aflp)
coords.trans.dr34<-rbind(coords.trans.dr3.aflp, coords.trans.dr4.aflp)

coords.trans.dr<-rbind(coords.trans.dr1.aflp, coords.trans.dr2.aflp, coords.trans.dr3.aflp, coords.trans.dr4.aflp)


coords.trans.dr12.dist<-as.matrix(dist(coords.trans.dr12[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr12.dist)<-rownames(coords.trans.dr12.dist)<-coords.trans.dr12$FINAlab

coords.trans.dr13.dist<-as.matrix(dist(coords.trans.dr13[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr13.dist)<-rownames(coords.trans.dr13.dist)<-coords.trans.dr13$FINAlab

coords.trans.dr14.dist<-as.matrix(dist(coords.trans.dr14[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr14.dist)<-rownames(coords.trans.dr14.dist)<-coords.trans.dr14$FINAlab

coords.trans.dr23.dist<-as.matrix(dist(coords.trans.dr23[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr23.dist)<-rownames(coords.trans.dr23.dist)<-coords.trans.dr23$FINAlab

coords.trans.dr24.dist<-as.matrix(dist(coords.trans.dr24[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr24.dist)<-rownames(coords.trans.dr24.dist)<-coords.trans.dr24$FINAlab

coords.trans.dr34.dist<-as.matrix(dist(coords.trans.dr34[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr34.dist)<-rownames(coords.trans.dr34.dist)<-coords.trans.dr34$FINAlab

coords.trans.dr.dist<-as.matrix(dist(coords.trans.dr[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr.dist)<-rownames(coords.trans.dr.dist)<-coords.trans.dr$FINAlab




mantel.test(coords.trans.dr12.dist, hier.gi.dr12.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr12.dist), Dgeo=as.dist(coords.trans.dr12.dist))

mantel.test(coords.trans.dr13.dist, hier.gi.dr13.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr13.dist), Dgeo=as.dist(coords.trans.dr13.dist))

mantel.test(coords.trans.dr14.dist, hier.gi.dr14.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr14.dist), Dgeo=as.dist(coords.trans.dr14.dist))

mantel.test(coords.trans.dr23.dist, hier.gi.dr23.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr23.dist), Dgeo=as.dist(coords.trans.dr23.dist))

mantel.test(coords.trans.dr24.dist, hier.gi.dr24.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr24.dist), Dgeo=as.dist(coords.trans.dr24.dist))

mantel.test(coords.trans.dr34.dist, hier.gi.dr34.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr34.dist), Dgeo=as.dist(coords.trans.dr34.dist))

mantel.test(coords.trans.dr.dist, hier.gi.dr.dist, alternative="greater")
gl.ibd(gl=NULL, Dgen=as.dist(hier.gi.dr.dist), Dgeo=as.dist(coords.trans.dr.dist))


#SNP
coords.trans

coords.trans.dr2.04<-coords.trans[20:34,]
coords.trans.dr2.04<-coords.trans.dr2.04[-c(1,15),]
coords.trans.dr3.04<-coords.trans[74:81,]
coords.trans.dr3.04<-coords.trans.dr3.04[-c(1,2,8),]

coords.trans.dr2.14<-coords.trans[46:70,]
coords.trans.dr2.14<-coords.trans.dr2.14[-8,]
coords.trans.dr2.14 <- coords.trans.dr2.14[order(coords.trans.dr2.14$FINAlab),] 
coords.trans.dr3.14<-coords.trans[82:90,]
coords.trans.dr3.14<-coords.trans.dr3.14[order(coords.trans.dr3.14$FINAlab),]

coords.trans.dr2.15<-coords.trans[34:45,]
coords.trans.dr2.15<-coords.trans.dr2.15[-8,]
coords.trans.dr3.15<-coords.trans[71:73,]

coords.trans.dr23.04.snp<-rbind(coords.trans.dr2.04, coords.trans.dr3.04)
coords.trans.dr23.14.snp<-rbind(coords.trans.dr2.14, coords.trans.dr3.14)
coords.trans.dr23.15.snp<-rbind(coords.trans.dr2.15, coords.trans.dr3.15)

coords.trans.dr23.04.snp.dist<-as.matrix(dist(coords.trans.dr23.04.snp[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr23.04.snp.dist)<-rownames(coords.trans.dr23.04.snp.dist)<-coords.trans.dr23.04.snp$FINAlab

coords.trans.dr23.14.snp.dist<-as.matrix(dist(coords.trans.dr23.14.snp[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr23.14.snp.dist)<-rownames(coords.trans.dr23.14.snp.dist)<-coords.trans.dr23.14.snp$FINAlab

coords.trans.dr23.15.snp.dist<-as.matrix(dist(coords.trans.dr23.15.snp[,c("x.trans", "y.trans")]))
colnames(coords.trans.dr23.15.snp.dist)<-rownames(coords.trans.dr23.15.snp.dist)<-coords.trans.dr23.15.snp$FINAlab


setwd("/Volumes/Desassossego/finalizing_genets")
maff006<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.gi.rds")

myPops <- as.factor(c('old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'CA_old',	'old_EU',	'D2.04',	'D2.04',	
                      'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',
                      'D2.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'old_EU',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',
                      'D3.14',	'Agraria',	'Agraria',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',
                      'Mira',	'Mira',	'Mira',	'Mira',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',
                      'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D3.15',	'D3.15',	'D3.15'))
pop(maff006)<-myPops

maff006.dr04<-popsub(maff006, sublist = c("D2.04", "D3.04"))
maff006.dr14<-popsub(maff006, sublist = c("D2.14", "D3.14"))
maff006.dr15<-popsub(maff006, sublist = c("D2.15", "D3.15"))


maff006.dr04.dist<-as.matrix(dist(maff006.dr04))
maff006.dr14.dist<-as.matrix(dist(maff006.dr14))
maff006.dr14.dist<-maff006.dr14.dist[-10,-10]
maff006.dr15.dist<-as.matrix(dist(maff006.dr15))


mantel.test(coords.trans.dr23.04.snp.dist, maff006.dr04.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(maff006.dr04.dist), Dgeo=as.dist(coords.trans.dr23.04.snp.dist))

mantel.test(coords.trans.dr23.14.snp.dist, maff006.dr14.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(maff006.dr14.dist), Dgeo=as.dist(coords.trans.dr23.14.snp.dist))

mantel.test(coords.trans.dr23.15.snp.dist, maff006.dr15.dist, alternative = "greater")
gl.ibd(gl=NULL, Dgen=as.dist(maff006.dr15.dist), Dgeo=as.dist(coords.trans.dr23.15.snp.dist))



#### time
maff006.dr2.0414<-popsub(maff006, sublist = c("D2.04", "D2.14"))
maff006.dr2.0415<-popsub(maff006, sublist = c("D2.04", "D2.15"))
maff006.dr2.1415<-popsub(maff006, sublist = c("D2.14", "D2.15"))

maff006.dr3.0414<-popsub(maff006, sublist = c("D3.04", "D3.14"))
maff006.dr3.0415<-popsub(maff006, sublist = c("D3.04", "D3.15"))
maff006.dr3.1415<-popsub(maff006, sublist = c("D3.14", "D3.15"))


maff006.dr2.0414.dist<-as.matrix(dist(maff006.dr2.0414))
maff006.dr2.0415.dist<-as.matrix(dist(maff006.dr2.0415))
maff006.dr2.1415.dist<-as.matrix(dist(maff006.dr2.1415))

maff006.dr3.0414.dist<-as.matrix(dist(maff006.dr3.0414))
maff006.dr3.0415.dist<-as.matrix(dist(maff006.dr3.0415))
maff006.dr3.1415.dist<-as.matrix(dist(maff006.dr3.1415))

coords.trans.dr2.0414.snp<-rbind(coords.trans.dr2.04, coords.trans.dr2.14)
coords.trans.dr2.0415.snp<-rbind(coords.trans.dr2.04, coords.trans.dr2.15)
coords.trans.dr2.1415.snp<-rbind(coords.trans.dr2.14, coords.trans.dr2.15)

coords.trans.dr3.0414.snp<-rbind(coords.trans.dr3.04, coords.trans.dr3.14)
coords.trans.dr3.0415.snp<-rbind(coords.trans.dr3.04, coords.trans.dr3.15)
coords.trans.dr3.1415.snp<-rbind(coords.trans.dr3.14, coords.trans.dr3.15)

coords.trans.dr2.0414.snp.dist<-as.matrix(dist(coords.trans.dr2.0414.snp[,5:6]))
colnames(coords.trans.dr2.0414.snp.dist)<-rownames(coords.trans.dr2.0414.snp.dist)<-coords.trans.dr2.0414.snp$FINAlab
coords.trans.dr2.0415.snp.dist<-as.matrix(dist(coords.trans.dr2.0415.snp[,5:6]))
colnames(coords.trans.dr2.0415.snp.dist)<-rownames(coords.trans.dr2.0415.snp.dist)<-coords.trans.dr2.0415.snp$FINAlab
coords.trans.dr2.1415.snp.dist<-as.matrix(dist(coords.trans.dr2.1415.snp[,5:6]))
colnames(coords.trans.dr2.1415.snp.dist)<-rownames(coords.trans.dr2.1415.snp.dist)<-coords.trans.dr2.1415.snp$FINAlab

coords.trans.dr3.0414.snp.dist<-as.matrix(dist(coords.trans.dr3.0414.snp[,5:6]))
colnames(coords.trans.dr3.0414.snp.dist)<-rownames(coords.trans.dr3.0414.snp.dist)<-coords.trans.dr3.0414.snp$FINAlab
coords.trans.dr3.0415.snp.dist<-as.matrix(dist(coords.trans.dr3.0415.snp[,5:6]))
colnames(coords.trans.dr3.0415.snp.dist)<-rownames(coords.trans.dr3.0415.snp.dist)<-coords.trans.dr3.0415.snp$FINAlab
coords.trans.dr3.1415.snp.dist<-as.matrix(dist(coords.trans.dr3.1415.snp[,5:6]))
colnames(coords.trans.dr3.1415.snp.dist)<-rownames(coords.trans.dr3.1415.snp.dist)<-coords.trans.dr3.1415.snp$FINAlab


maff006.dr2.0414.dist<-maff006.dr2.0414.dist[-23,-23]
mantel.test(coords.trans.dr2.0414.snp.dist, maff006.dr2.0414.dist, alternative = "greater")
mantel.test(coords.trans.dr2.0415.snp.dist, maff006.dr2.0415.dist, alternative = "greater")
maff006.dr2.1415.dist<-maff006.dr2.1415.dist[-10,-10]
mantel.test(coords.trans.dr2.1415.snp.dist, maff006.dr2.1415.dist, alternative = "greater")

mantel.test(coords.trans.dr3.0414.snp.dist, maff006.dr3.0414.dist, alternative = "greater")
mantel.test(coords.trans.dr3.0415.snp.dist, maff006.dr3.0415.dist, alternative = "greater")
mantel.test(coords.trans.dr3.1415.snp.dist, maff006.dr3.1415.dist, alternative = "greater")

################################################################################################
################################################################################################
################################################################################################
#######################     Pop binding box, follows from MANTEL loadings      #################
################################################################################################
################################################################################################
################################################################################################
################################################################################################



library(alphahull)  
library(pracma)
# Exposes ashape()
MBR <- function(points) {
  # Analyze the convex hull edges                       
  a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
  e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
  norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
  v <- diag(1/norms) %*% e                        # Unit edge directions
  w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
  
  # Find the MBR
  vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
  minmax <- function(x) c(min(x), max(x))         # Computes min and max
  x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
  y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
  areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
  k <- which.min(areas)                           # Index of the best edge (smallest area)
  
  # Form a rectangle from the extremes of the best edge
  cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
}


# Create sample data
set.seed(23)
points <- matrix(rnorm(20*2), ncol=2)                 # Random (normally distributed) points
mbr <- MBR(points)

# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)                                # The points


polyarea(mbr[,1], mbr[,2])

#########################################################



d1.hull<-as.matrix(coords.d1.aflp[,5:6])
d1.mbr<-MBR(d1.hull)
limits <- apply(d1.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(d1.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(d1.mbr, col="Blue", lwd=3)                         # The MBR
points(d1.hull, pch=19)    
polyarea(d1.mbr[,1], d1.mbr[,2])


coords.d2.04.aflp.hull<-as.matrix(coords.d2.04.aflp[,5:6])
coords.d2.04.aflp.mbr<-MBR(coords.d2.04.aflp.hull)
limits <- apply(coords.d2.04.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d2.04.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d2.04.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d2.04.aflp.hull, pch=19)    
polyarea(coords.d2.04.aflp.mbr[,1], coords.d2.04.aflp.mbr[,2])


coords.d3.04.aflp.hull<-as.matrix(coords.d3.04.aflp[,5:6])
coords.d3.04.aflp.mbr<-MBR(coords.d3.04.aflp.hull)
limits <- apply(coords.d3.04.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d3.04.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d3.04.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d3.04.aflp.hull, pch=19)    
polyarea(coords.d3.04.aflp.mbr[,1], coords.d3.04.aflp.mbr[,2])


coords.d4.aflp.hull<-as.matrix(coords.d4.aflp[,5:6])
coords.d4.aflp.mbr<-MBR(coords.d4.aflp.hull)
limits <- apply(coords.d4.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d4.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d4.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d4.aflp.hull, pch=19)    
polyarea(coords.d4.aflp.mbr[,1], coords.d4.aflp.mbr[,2])


coords.hd1.aflp.hull<-as.matrix(coords.hd1.aflp[,5:6])
coords.hd1.aflp.mbr<-MBR(coords.hd1.aflp.hull)
limits <- apply(coords.hd1.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.hd1.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.hd1.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.hd1.aflp.hull, pch=19)    
polyarea(coords.hd1.aflp.mbr[,1], coords.hd1.aflp.mbr[,2])


coords.hd2.aflp.hull<-as.matrix(coords.hd2.aflp[,5:6])
coords.hd2.aflp.mbr<-MBR(coords.hd2.aflp.hull)
limits <- apply(coords.hd2.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.hd2.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.hd2.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.hd2.aflp.hull, pch=19)    
polyarea(coords.hd2.aflp.mbr[,1], coords.hd2.aflp.mbr[,2])


coords.hd3.aflp.hull<-as.matrix(coords.hd3.aflp[,5:6])
coords.hd3.aflp.mbr<-MBR(coords.hd3.aflp.hull)
limits <- apply(coords.hd3.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.hd3.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.hd3.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.hd3.aflp.hull, pch=19)    
polyarea(coords.hd3.aflp.mbr[,1], coords.hd3.aflp.mbr[,2])


coords.JL.aflp.u<-coords.JL.aflp[-38,]

coords.JL.aflp.hull<-as.matrix(coords.JL.aflp.u[,c("x","y")])
coords.JL.aflp.mbr<-MBR(coords.JL.aflp.hull)
limits <- apply(coords.JL.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.JL.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.JL.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.JL.aflp.hull, pch=19)    
polyarea(coords.JL.aflp.mbr[,1], coords.JL.aflp.mbr[,2])

coords.CESAC02.aflp.u<-coords.CESAC02.aflp[-c(3,21),]
coords.CESAC02.aflp.hull<-as.matrix(coords.CESAC02.aflp.u[,c("x","y")])
coords.CESAC02.aflp.mbr<-MBR(coords.CESAC02.aflp.hull)
limits <- apply(coords.CESAC02.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.CESAC02.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.CESAC02.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.CESAC02.aflp.hull, pch=19)    
polyarea(coords.CESAC02.aflp.mbr[,1], coords.CESAC02.aflp.mbr[,2])


coords.CESAC06.aflp.u<-coords.CESAC06.aflp[-32,]
coords.CESAC06.aflp.hull<-as.matrix(coords.CESAC06.aflp.u[,c("x","y")])
coords.CESAC06.aflp.mbr<-MBR(coords.CESAC06.aflp.hull)
limits <- apply(coords.CESAC06.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.CESAC06.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.CESAC06.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.CESAC06.aflp.hull, pch=19)    
polyarea(coords.CESAC06.aflp.mbr[,1], coords.CESAC02.aflp.mbr[,2])


coords.S.aflp.hull<-as.matrix(coords.S.aflp[,c("x","y")])
coords.S.aflp.mbr<-MBR(coords.S.aflp.hull)
limits <- apply(coords.S.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.S.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.S.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.S.aflp.hull, pch=19)    
#polyarea(coords.S.aflp.mbr[,1], coords.S.aflp.mbr[,2])/100
polyarea(coords.S.aflp.mbr[,1]/100, coords.S.aflp.mbr[,2]/100)


coords.str.aflp.hull<-as.matrix(coords.str.aflp[,c("x","y")])
coords.str.aflp.mbr<-MBR(coords.str.aflp.hull)
limits <- apply(coords.str.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.str.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.str.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.str.aflp.hull, pch=19)    
polyarea(coords.str.aflp.mbr[,1], coords.str.aflp.mbr[,2])


coords.roch1.aflp.hull<-as.matrix(coords.roch1.aflp[,c("x","y")])
coords.roch1.aflp.mbr<-MBR(coords.roch1.aflp.hull)
limits <- apply(coords.roch1.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.roch1.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.roch1.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.roch1.aflp.hull, pch=19)    
polyarea(coords.roch1.aflp.mbr[,1], coords.roch1.aflp.mbr[,2])


coords.roch2.aflp.hull<-as.matrix(coords.roch2.aflp[,c("x","y")])
coords.roch2.aflp.mbr<-MBR(coords.roch2.aflp.hull)
limits <- apply(coords.roch2.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.roch2.aflp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.roch2.aflp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.roch2.aflp.hull, pch=19)    
polyarea(coords.roch2.aflp.mbr[,1], coords.roch2.aflp.mbr[,2])


#coords.roch3.aflp.hull<-as.matrix(coords.roch3.aflp[,c("x","y")])
#coords.roch3.aflp.mbr<-MBR(coords.roch3.aflp.hull)
#limits <- apply(coords.roch3.aflp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
#plot(ashape(coords.roch3.aflp.hull, alpha=1000), col="Gray", pch=20, 
#     xlim=limits[,1], ylim=limits[,2])                # The hull
#lines(coords.roch3.aflp.mbr, col="Blue", lwd=3)                         # The MBR
#points(coords.roch3.aflp.hull, pch=19)    
#polyarea(coords.roch3.aflp.mbr[,1], coords.roch3.aflp.mbr[,2])


coords.d2.04.snp.hull<-as.matrix(coords.d2.04.snp[,c("x","y")])
coords.d2.04.snp.mbr<-MBR(coords.d2.04.snp.hull)
limits <- apply(coords.d2.04.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d2.04.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d2.04.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d2.04.snp.hull, pch=19)    
polyarea(coords.d2.04.snp.mbr[,1], coords.d2.04.snp.mbr[,2])


coords.d2.14.snp.hull<-as.matrix(coords.d2.14.snp[,c("x","y")])
coords.d2.14.snp.mbr<-MBR(coords.d2.14.snp.hull)
limits <- apply(coords.d2.14.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d2.14.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d2.14.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d2.14.snp.hull, pch=19)    
polyarea(coords.d2.14.snp.mbr[,1], coords.d2.14.snp.mbr[,2])



coords.d2.15.snp.hull<-as.matrix(coords.d2.15.snp[,c("x","y")])
coords.d2.15.snp.mbr<-MBR(coords.d2.15.snp.hull)
limits <- apply(coords.d2.15.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d2.15.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d2.15.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d2.15.snp.hull, pch=19)    
polyarea(coords.d2.15.snp.mbr[,1], coords.d2.15.snp.mbr[,2])


coords.d3.04.snp.hull<-as.matrix(coords.d3.04.snp[,c("x","y")])
coords.d3.04.snp.mbr<-MBR(coords.d3.04.snp.hull)
limits <- apply(coords.d3.04.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d3.04.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d3.04.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d3.04.snp.hull, pch=19)    
polyarea(coords.d3.04.snp.mbr[,1], coords.d3.04.snp.mbr[,2])


coords.d3.14.snp.hull<-as.matrix(coords.d3.14.snp[,c("x","y")])
coords.d3.14.snp.mbr<-MBR(coords.d3.14.snp.hull)
limits <- apply(coords.d3.14.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d3.14.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d3.14.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d3.14.snp.hull, pch=19)    
polyarea(coords.d3.14.snp.mbr[,1], coords.d3.14.snp.mbr[,2])



coords.d3.15.snp.hull<-as.matrix(coords.d3.15.snp[,c("x","y")])
coords.d3.15.snp.mbr<-MBR(coords.d3.15.snp.hull)
limits <- apply(coords.d3.15.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.d3.15.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.d3.15.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.d3.15.snp.hull, pch=19)    
polyarea(coords.d3.15.snp.mbr[,1], coords.d3.15.snp.mbr[,2])



coords.mira.hull<-as.matrix(coords.mira[,c("x","y")])
coords.mira.mbr<-MBR(coords.mira.hull)
limits <- apply(coords.mira.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.mira.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.mira.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.mira.hull, pch=19)    
polyarea(coords.mira.mbr[,1], coords.mira.mbr[,2])

# # # # # # # # # # # Combo


cords.HD12.hull<-as.matrix(cords.HD12[,c("x.trans","y.trans")])
cords.HD12.mbr<-MBR(cords.HD12.hull)
limits <- apply(cords.HD12.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(cords.HD12.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(cords.HD12.mbr, col="Blue", lwd=3)                         # The MBR
points(cords.HD12.hull, pch=19)    
polyarea(cords.HD12.mbr[,1], cords.HD12.mbr[,2])


cords.HD23.hull<-as.matrix(cords.HD23[,c("x.trans","y.trans")])
cords.HD23.mbr<-MBR(cords.HD23.hull)
limits <- apply(cords.HD23.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(cords.HD23.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(cords.HD23.mbr, col="Blue", lwd=3)                         # The MBR
points(cords.HD23.hull, pch=19)    
polyarea(cords.HD23.mbr[,1], cords.HD23.mbr[,2])


cords.HD13.hull<-as.matrix(cords.HD13[,c("x.trans","y.trans")])
cords.HD13.mbr<-MBR(cords.HD13.hull)
limits <- apply(cords.HD13.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(cords.HD13.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(cords.HD13.mbr, col="Blue", lwd=3)                         # The MBR
points(cords.HD13.hull, pch=19)    
polyarea(cords.HD13.mbr[,1], cords.HD13.mbr[,2])


coords.HD.hull<-as.matrix(coords.HD[,c("x.trans","y.trans")])
coords.HD.mbr<-MBR(coords.HD.hull)
limits <- apply(coords.HD.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.HD.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.HD.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.HD.hull, pch=19)    
polyarea(coords.HD.mbr[,1], coords.HD.mbr[,2])


coords.roch12.hull<-as.matrix(coords.roch12[,c("x.trans","y.trans")])
coords.roch12.mbr<-MBR(coords.roch12.hull)
limits <- apply(coords.roch12.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.roch12.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.roch12.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.roch12.hull, pch=19)    
polyarea(coords.roch12.mbr[,1], coords.roch12.mbr[,2])


coords.roch23.hull<-as.matrix(coords.roch23[,c("x.trans","y.trans")])
coords.roch23.mbr<-MBR(coords.roch23.hull)
limits <- apply(coords.roch23.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.roch23.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.roch23.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.roch23.hull, pch=19)    
polyarea(coords.roch23.mbr[,1], coords.roch23.mbr[,2])


coords.roch13.hull<-as.matrix(coords.roch13[,c("x.trans","y.trans")])
coords.roch13.mbr<-MBR(coords.roch13.hull)
limits <- apply(coords.roch13.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.roch13.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.roch13.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.roch13.hull, pch=19)    
polyarea(coords.roch13.mbr[,1], coords.roch13.mbr[,2])


coords.roch.hull<-as.matrix(coords.roch[,c("x.trans","y.trans")])
coords.roch.mbr<-MBR(coords.roch.hull)
limits <- apply(coords.roch.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.roch.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.roch.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.roch.hull, pch=19)    
polyarea(coords.roch.mbr[,1], coords.roch.mbr[,2])


coords.trans.dr12.hull<-as.matrix(coords.trans.dr12[,c("x.trans","y.trans")])
coords.trans.dr12.mbr<-MBR(coords.trans.dr12.hull)
limits <- apply(coords.trans.dr12.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr12.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr12.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr12.hull, pch=19)    
polyarea(coords.trans.dr12.mbr[,1], coords.trans.dr12.mbr[,2])


coords.trans.dr13.hull<-as.matrix(coords.trans.dr13[,c("x.trans","y.trans")])
coords.trans.dr13.mbr<-MBR(coords.trans.dr13.hull)
limits <- apply(coords.trans.dr13.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr13.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr13.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr13.hull, pch=19)    
polyarea(coords.trans.dr13.mbr[,1], coords.trans.dr13.mbr[,2])


coords.trans.dr14.hull<-as.matrix(coords.trans.dr14[,c("x.trans","y.trans")])
coords.trans.dr14.mbr<-MBR(coords.trans.dr14.hull)
limits <- apply(coords.trans.dr14.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr14.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr14.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr14.hull, pch=19)    
polyarea(coords.trans.dr14.mbr[,1], coords.trans.dr14.mbr[,2])


coords.trans.dr23.hull<-as.matrix(coords.trans.dr23[,c("x.trans","y.trans")])
coords.trans.dr23.mbr<-MBR(coords.trans.dr23.hull)
limits <- apply(coords.trans.dr23.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr23.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr23.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr23.hull, pch=19)    
polyarea(coords.trans.dr23.mbr[,1], coords.trans.dr23.mbr[,2])


coords.trans.dr24.hull<-as.matrix(coords.trans.dr24[,c("x.trans","y.trans")])
coords.trans.dr24.mbr<-MBR(coords.trans.dr24.hull)
limits <- apply(coords.trans.dr24.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr24.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr24.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr24.hull, pch=19)    
polyarea(coords.trans.dr24.mbr[,1], coords.trans.dr24.mbr[,2])


coords.trans.dr34.hull<-as.matrix(coords.trans.dr34[,c("x.trans","y.trans")])
coords.trans.dr34.mbr<-MBR(coords.trans.dr34.hull)
limits <- apply(coords.trans.dr34.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr34.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr34.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr34.hull, pch=19)    
polyarea(coords.trans.dr34.mbr[,1], coords.trans.dr34.mbr[,2])


coords.trans.dr.hull<-as.matrix(coords.trans.dr[,c("x.trans","y.trans")])
coords.trans.dr.mbr<-MBR(coords.trans.dr.hull)
limits <- apply(coords.trans.dr.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr.hull, pch=19)    
polyarea(coords.trans.dr.mbr[,1], coords.trans.dr.mbr[,2])





coords.trans.dr23.04.snp.hull<-as.matrix(coords.trans.dr23.04.snp[,c("x.trans","y.trans")])
coords.trans.dr23.04.snp.mbr<-MBR(coords.trans.dr23.04.snp.hull)
limits <- apply(coords.trans.dr23.04.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr23.04.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr23.04.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr23.04.snp.hull, pch=19)    
polyarea(coords.trans.dr23.04.snp.mbr[,1], coords.trans.dr23.04.snp.mbr[,2])


coords.trans.dr23.14.snp.hull<-as.matrix(coords.trans.dr23.14.snp[,c("x.trans","y.trans")])
coords.trans.dr23.14.snp.mbr<-MBR(coords.trans.dr23.14.snp.hull)
limits <- apply(coords.trans.dr23.14.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr23.14.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr23.14.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr23.14.snp.hull, pch=19)    
polyarea(coords.trans.dr23.14.snp.mbr[,1], coords.trans.dr23.14.snp.mbr[,2])



coords.trans.dr23.15.snp.hull<-as.matrix(coords.trans.dr23.15.snp[,c("x.trans","y.trans")])
coords.trans.dr23.15.snp.mbr<-MBR(coords.trans.dr23.15.snp.hull)
limits <- apply(coords.trans.dr23.15.snp.mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(coords.trans.dr23.15.snp.hull, alpha=1000), col="Gray", pch=20, 
     xlim=limits[,1], ylim=limits[,2])                # The hull
lines(coords.trans.dr23.15.snp.mbr, col="Blue", lwd=3)                         # The MBR
points(coords.trans.dr23.15.snp.hull, pch=19)    
polyarea(coords.trans.dr23.15.snp.mbr[,1], coords.trans.dr23.15.snp.mbr[,2])


###################################
library(ggplot2)
setwd("~/Dropbox/GENETS_finishing")
mantel<-read.csv("mantel.n.area.4R.csv", head=T, stringsAsFactors = F)

mantel.sig<-mantel[mantel$signif=="sig",]

#ggplot(mantel[c(2:6,8:23),], aes(x=area, y=r))+geom_point()+geom_smooth(method='lm')
#ggplot(mantel[c(2:23),], aes(x=mushies, y=r))+geom_point()+geom_smooth(method='lm')

#ggplot(mantel.sig[4:9,], aes(x=area, y=r, size=mushies))+geom_point()+geom_smooth(method='lm')


ggplot(mantel, aes(x=area, y=r, size=mushies, color=signif))+geom_point()+geom_smooth(method='lm')

#only within pops
ggplot(mantel[1:18,], aes(x=area, y=r, size=mushies, color=signif))+geom_point()+geom_smooth(method='lm')

summary(lm(r~area, mantel[1:18,]))

#only between pops
ggplot(mantel[19:nrow(mantel),], aes(x=area, y=r, size=mushies, color=signif))+geom_point()+geom_smooth(method='lm')
summary(lm(r~area, mantel[19:nrow(mantel),]))


#Serbia and JL are very large, so just see what it looks like with them removed
ggplot(mantel[c(2:5,7:18),], aes(x=area, y=r, size=mushies, color=signif))+geom_point()+geom_smooth(method='lm')
summary(lm(r~area, mantel[c(2:5,7:18),]))


library(ggrepel)
ggplot(mantel, aes(area, r, label = pop)) +
  geom_point(color = ifelse(mantel$area > 100000, "grey50", "red")) +
  geom_text_repel()




ggplot(mantel, aes(area, r, label = pop, shape=signif, size=mushies)) +
  geom_text_repel(
    data          = subset(mantel, area > 10000),
    nudge_x       = subset(mantel, area > 10000)$area,
    segment.size  = 0.2,
    segment.color = "grey50",
    direction     = "x"
  ) +
  geom_point(color = ifelse(mantel$area > 10000, "red", "black")) +
  scale_x_continuous(expand = c(0, 12500)) +
  scale_y_continuous(limits = c(-1, 1))+geom_smooth(method="lm")

#regardless of r mantel significance
summary(lm(r~area, mantel))
#Residuals:
#  Min       1Q   Median       3Q      Max 
#-1.06909 -0.12961  0.00301  0.15879  0.74960 

#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)    
#(Intercept) 2.483e-01  5.591e-02   4.441 7.81e-05 ***
#  area        8.581e-06  1.131e-05   0.759    0.453    
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#Residual standard error: 0.3145 on 37 degrees of freedom
#Multiple R-squared:  0.01532,	Adjusted R-squared:  -0.01129 
#F-statistic: 0.5756 on 1 and 37 DF,  p-value: 0.4528


summary(lm(r~area, mantel[mantel$signif == "in",]))
#Residuals:
#  Min       1Q   Median       3Q      Max 
#-0.93788 -0.15240 -0.00926  0.12462  0.88079 

#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept) 1.171e-01  1.160e-01   1.009    0.330
#area        2.066e-05  7.552e-05   0.274    0.788

#Residual standard error: 0.4259 on 14 degrees of freedom
#Multiple R-squared:  0.005315,	Adjusted R-squared:  -0.06573 
#F-statistic: 0.07481 on 1 and 14 DF,  p-value: 0.7884

summary(lm(r~area, mantel[mantel$signif == "sig",]))
#Residuals:
#  Min       1Q   Median       3Q      Max 
#-0.32996 -0.08606 -0.03662  0.07191  0.49871 

#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)    
#(Intercept) 3.382e-01  3.539e-02   9.557 4.26e-09 ***
#  area        2.788e-06  1.367e-06   2.039   0.0542 .  
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#Residual standard error: 0.1605 on 21 degrees of freedom
#Multiple R-squared:  0.1653,	Adjusted R-squared:  0.1255 
#F-statistic: 4.158 on 1 and 21 DF,  p-value: 0.05422

mantel.noS<-mantel[-1,]
ggplot(mantel.noS, aes(x=area, y=r, size=mushies, color=signif))+geom_point()+geom_smooth(method='lm')

ggplot(mantel.noS, aes(area, r, label = pop)) +
  geom_point(color = ifelse(mantel.noS$area > 100000, "grey50", "red")) +
  geom_text_repel()




ggplot(mantel.noS, aes(area, r, label = pop, shape=signif, size=mushies)) +
  geom_text_repel(
    data          = subset(mantel.noS, area > 10000),
    nudge_x       = subset(mantel.noS, area > 10000)$area,
    segment.size  = 0.2,
    segment.color = "grey50",
    direction     = "x"
  ) +
  geom_point(color = ifelse(mantel.noS$area > 10000, "red", "black")) +
  scale_x_continuous(expand = c(0, 12500)) +
  scale_y_continuous(limits = c(-1, 1))+geom_smooth(method="lm")


summary(lm(r~area, mantel[mantel.noS$signif == "in",]))
#Residuals:
#  Min       1Q   Median       3Q      Max 
#-0.95702 -0.14760  0.07179  0.15914  0.52032 

#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)  
#(Intercept) 1.361e-01  9.927e-02   1.371   0.1919  
#area        1.311e-04  7.257e-05   1.806   0.0924 .
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#Residual standard error: 0.3532 on 14 degrees of freedom
#Multiple R-squared:  0.189,	Adjusted R-squared:  0.1311 
#F-statistic: 3.262 on 1 and 14 DF,  p-value: 0.09243



summary(lm(r~area, mantel[mantel.noS$signif == "sig",]))
#Residuals:
#  Min       1Q   Median       3Q      Max 
#-0.68124 -0.08033 -0.00994  0.12175  0.72633 

#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)    
#(Intercept) 2.716e-01  5.550e-02   4.893 7.72e-05 ***
#  area        3.408e-06  2.144e-06   1.590    0.127    
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#Residual standard error: 0.2518 on 21 degrees of freedom
#Multiple R-squared:  0.1074,	Adjusted R-squared:  0.06491 
#F-statistic: 2.527 on 1 and 21 DF,  p-value: 0.1268




ggplot(mantel, aes(x=log(area), y=r, color=signif))+geom_point()+geom_smooth(method="lm")
summary(lm(r~log(area), mantel[mantel$signif == "sig",]))
summary(lm(r~log(area), mantel[mantel$signif == "in",]))




#####################################################################################################
#####################################################################################################
#####################################################################################################
#####################################################################################################
#############################           Grids               #########################################
#####################################################################################################
#####################################################################################################
#####################################################################################################
#####################################################################################################
#####################################################################################################

setwd("/Volumes/Desassossego/finalizing_genets")
library(phangorn)
library(hierfstat)
library(poppr)
library(adegenet)
library("RColorBrewer")
library(gplots)
library(vcfR)
library(magrittr)
library(poppr)
library(ggtree)

d3.15<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d3.15.gi.rds")
d3.14<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d3.14.gi.rds")
d3.04<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d3.04.gi.rds")
d2.15<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d2.15.gi.rds")
d2.14<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d2.14.gi.rds")
d2.04<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.d2.04.gi.rds")
vil<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.vilarinho.gi.rds")
agr<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.agraria.gi.rds")
mira<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.mira.gi.rds")


plot(upgma(dist(d2.14)))

setwd("~/Dropbox/Genet Size/Jacob Analyses")
hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")

hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")
hier.gi<-as.genind(as.matrix(hier))
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)
pop(hier.gi)<-pops.aflp

roch1<-popsub(hier.gi, sublist = "Rochester_NY_2007_1")
roch2<-popsub(hier.gi, sublist = "Rochester_NY_2007_2")
roch3<-popsub(hier.gi, sublist = "Rochester_NY_2007_3")

ce02<-popsub(hier.gi, sublist = "CESAC_2002")
ce06<-popsub(hier.gi, sublist = "CESAC_2006")

d1<-popsub(hier.gi, sublist = "Drake_1_2004")
d2<-popsub(hier.gi, sublist = "Drake_2_2004")
d3<-popsub(hier.gi, sublist = "Drake_3_2004")
d4<-popsub(hier.gi, sublist = "Drake_4_2004")

hd1<-popsub(hier.gi, sublist = "Hearts_Desire_1_2004")
hd2<-popsub(hier.gi, sublist = "Hearts_Desire_2_2004")
hd3<-popsub(hier.gi, sublist = "Hearts_Desire_3_2004")

jl<-popsub(hier.gi, sublist = "Jakes_Landing_2006")
str<-popsub(hier.gi, sublist = "New_Jersey_str_2006")

S<-popsub(hier.gi, sublist = "Serbia_2007")

plot(upgma(dist(S)))


###########################################################
# coords
setwd("~/Dropbox/GENETS_finishing")
coordies<-read.csv("ALL_COORDS_geo_AMANITABASED.csv", head=T, stringsAsFactors = F)

roch1.c<-coordies[coordies$FINAlab %in% rownames(roch1$tab),]
roch2.c<-coordies[coordies$FINAlab %in% rownames(roch2$tab),]
roch3.c<-coordies[coordies$FINAlab %in% rownames(roch3$tab),]

ce02.c<-coordies[coordies$FINAlab %in% rownames(ce02$tab),]
ce06.c<-coordies[coordies$FINAlab %in% rownames(ce06$tab),]

d1.c<-coordies[coordies$FINAlab %in% rownames(d1$tab),]
d2.c<-coordies[coordies$FINAlab %in% c(rownames(d2$tab),rownames(d2.04$tab)),]
d3.c<-coordies[coordies$FINAlab %in% c(rownames(d3$tab),rownames(d3.04$tab)),]
d4.c<-coordies[coordies$FINAlab %in% rownames(d4$tab),]

hd1.c<-coordies[coordies$FINAlab %in% rownames(hd1$tab),]
hd2.c<-coordies[coordies$FINAlab %in% rownames(hd2$tab),]
hd3.c<-coordies[coordies$FINAlab %in% rownames(hd3$tab),]

jl.c<-coordies[coordies$FINAlab %in% rownames(jl$tab),]
jl.c$genet.1 <- sub("^$", "sing", jl.c$genet.1)
str.c<-coordies[coordies$FINAlab %in% rownames(str$tab),]

S.c<-coordies[coordies$FINAlab %in% rownames(S$tab),]
S.c[,5:6]<-S.c[,5:6]/100


mira.c<-coordies[coordies$FINAlab %in% rownames(mira$tab),]
agr.c<-coordies[coordies$FINAlab %in% rownames(agr$tab),]


d2.14.c<-coordies[coordies$FINAlab %in% c(rownames(d2.14$tab)),]
d2.15.c<-coordies[coordies$FINAlab %in% c(rownames(d2.15$tab)),]

d3.14.c<-coordies[coordies$FINAlab %in% c(rownames(d3.14$tab)),]
d3.15.c<-coordies[coordies$FINAlab %in% c(rownames(d3.15$tab)),]


#################################
library(ggplot2)
library(ggrepel)
library(gridExtra)
library(grid)
############ Now I can plot, haliluya
mytheme <- theme(panel.border = element_rect(colour = "black", fill=NA, size=1),
                 panel.grid.major = element_line(colour="white",size = rel(0.5)),
                 plot.background = element_rect(fill = "white"),
                 panel.background = element_rect(fill = "white"),
                 legend.position="none")

ggplot(d2.c, aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "tri"=17))+
  scale_color_manual(values=c("Unknown"="black", "genet"="darkgreen"))+coord_fixed(ratio = 1)

ggplot(d2.c, aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "tri"=17))+
  scale_color_manual(values=c("Unknown"="black", "genet"="darkgreen"))+coord_fixed(ratio = 1)+
  scale_x_continuous(limits=c(-15,23))+scale_y_continuous(limits=c(-8, 22))

d2.g.pre<-ggplot(d2.c, aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=2)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0, size=2, segment.size = .1, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "tri"=17))+
  scale_color_manual(values=c("Unknown"="black", "genet"="darkgreen"))+ggtitle("Drake 2 2004")

d2snp.g.pre<-ggplot(d2.c, aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=2)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "tri"=17))+
  scale_color_manual(values=c("Unknown"="black", "genet"="darkgreen"))+ggtitle("Drake 2 2004")

d2.p.pre<-upgma(dist(d2))
d2.04.p.pre<-upgma(dist(d2.04))

plot.phylo(d2.p.pre)
add.scale.bar(1.05,1.05)


d2.p<-ggtree(d2.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=0)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
d2.04.p <- ggtree(d2.04.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45)+scale_x_reverse()+geom_tippoint(shape=18,size=3, col="black")
d2.g<-list(ggplotGrob(d2.g.pre),ggplotGrob(d2.p), ggplotGrob(d2.04.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.d2.14<- grid.arrange(grobs = d2.g, layout_matrix = lay)

#d1
d1.g.pre<-ggplot(d1.c, aes(x=x, y=y, label=ID, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "d1A"=19, "d1B"=19, "d1C"=19, "d1D"=19, "d1E"=19, "d1F"=19))+
  scale_color_manual(values=c("d1A"="dodgerblue",
                              "d1B"="firebrick",
                              "d1C"="forestgreen",
                              "d1D"="darkslateblue",
                              "d1E"="darkorange2",
                              "d1F"="darkmagenta",
                              "ui"="black"))+ggtitle("Drake 1 2004")


#d4
d4.c$genet.1 <- sub("^$", "ui", d4.c$genet.1)

d4.g.pre<-ggplot(d4.c, aes(x=x, y=y, label=ID, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "d4.A"=19))+
  scale_color_manual(values=c("d4.A"="dodgerblue",
                              "ui"="black"))+ggtitle("Drake 4 2004")




# d3


ggplot(d3.c, aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "tri"=17))+
  scale_color_manual(values=c("Unknown"="black", "genet"="darkgreen"))+coord_fixed(ratio=1)




d3.g.pre<-ggplot(d3.c, aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "tri"=17))+
  scale_color_manual(values=c("Unknown"="black", "genet"="darkgreen"))+ggtitle("Drake 3 2004")


d3snp.g.pre<-ggplot(d3.c[2:nrow(d3.c),], aes(x=x, y=y, label=ID, color=genet, shape=shape))+
  geom_point(size=2)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "gen"=15, "tri"=15))+
  scale_color_manual(values=c("Unknown"="black", "genet"="black"))+ggtitle("Drake 3 2004")


d3.p.pre<-upgma(dist(d3))
d3.04.p.pre<-upgma(dist(d3.04))

d3.p<-ggtree(d3.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=0)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
d3.04.p <- ggtree(d3.04.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45)+scale_x_reverse()+geom_tippoint(shape=18,size=3, col="black")
d3.g<-list(ggplotGrob(d3.g.pre),ggplotGrob(d3.p), ggplotGrob(d3.04.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.d3.04<- grid.arrange(grobs = d3.g, layout_matrix = lay)

# d2.14
ggplot(d2.14.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio = 1)

ggplot(d2.14.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio = 1)+
  scale_x_continuous(limits=c(-15,23))+scale_y_continuous(limits=c(-8,22))

 d2.14.g.pre<-ggplot(d2.14.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+ggtitle("Drake 2 2014")

d2.14.p.pre<-upgma(dist(d2.14))

r<-rectGrob(gp=gpar(fill="white", col="white"))
d2.14.p <- ggtree(d2.14.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+geom_tippoint(shape=18,size=2, col="black")
d2.14.g<-list(ggplotGrob(d2.14.g.pre),(r), ggplotGrob(d2.14.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.d2.14<- grid.arrange(grobs = d2.14.g, layout_matrix = lay)


#d3.14

ggplot(d3.14.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio=1)


d3.14.g.pre<-ggplot(d3.14.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+ggtitle("Drake 3 2014")

d3.14.p.pre<-upgma(dist(d3.14))

r<-rectGrob(gp=gpar(fill="white", col="white"))
d3.14.p <- ggtree(d3.14.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+geom_tippoint(shape=18,size=2, col="black")
d3.14.g<-list(ggplotGrob(d3.14.g.pre),(r), ggplotGrob(d3.14.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.d3.14<- grid.arrange(grobs = d3.14.g, layout_matrix = lay)


# d2.15


ggplot(d2.15.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio = 1)

ggplot(d2.15.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+coord_fixed(ratio = 1)+
  scale_x_continuous(limits=c(-15,23))+scale_y_continuous(limits=c(-8,22))


d2.15.g.pre<-ggplot(d2.15.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+ggtitle("Drake 2 2015")

d2.15.p.pre<-upgma(dist(d2.15))

r<-rectGrob(gp=gpar(fill="white", col="white"))
d2.15.p <- ggtree(d2.15.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+geom_tippoint(shape=18,size=2, col="black")
d2.15.g<-list(ggplotGrob(d2.15.g.pre),(r), ggplotGrob(d2.15.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.d2.15<- grid.arrange(grobs = d2.15.g, layout_matrix = lay)


#d3.15

ggplot(d3.15.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio=1)

d3.15.g.pre<-ggplot(d3.15.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+ggtitle("Drake 3 2015")

d3.15.p.pre<-upgma(dist(d3.15))

r<-rectGrob(gp=gpar(fill="white", col="white"))
d3.15.p <- ggtree(d3.15.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+geom_tippoint(shape=18,size=2, col="black")
d3.15.g<-list(ggplotGrob(d3.15.g.pre),(r), ggplotGrob(d3.15.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.d3.15<- grid.arrange(grobs = d3.15.g, layout_matrix = lay)

#agr

ggplot(agr.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio = 1, ylim=c(-1,1))

agr.g.pre<-ggplot(agr.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+ggtitle("Agraria 2015")

agr.p.pre<-upgma(dist(agr))

r<-rectGrob(gp=gpar(fill="white", col="white"))
agr.p <- ggtree(agr.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+geom_tippoint(shape=18,size=2, col="black")
agr.g<-list(ggplotGrob(agr.g.pre),(r), ggplotGrob(agr.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.agr<- grid.arrange(grobs = agr.g, layout_matrix = lay)

#mira

ggplot(mira.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=3, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0)+coord_fixed(ratio=1, ylim=c(-1,1))

mira.g.pre<-ggplot(mira.c, aes(x=x, y=y, label=ID, fill="black"))+
  geom_point(size=2, shape=15)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=ID),hjust=0, vjust=0,size=1.5, segment.size = .05, segment.alpha = 1)+ggtitle("Mira 2015")

mira.p.pre<-upgma(dist(mira))

r<-rectGrob(gp=gpar(fill="white", col="white"))
mira.p <- ggtree(mira.p.pre, color="#FFA500")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+geom_tippoint(shape=18,size=2, col="black")
mira.g<-list(ggplotGrob(mira.g.pre),(r), ggplotGrob(mira.p))
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.mira<- grid.arrange(grobs = mira.g, layout_matrix = lay)

#CESAC02

ggplot(ce02.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5)+
  geom_point(size=1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("F"="dodgerblue",
                              "D"="firebrick",
                              "Singleton"="black"))+coord_fixed(ratio=1)

ggplot(ce02.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=2.5)+
  geom_point(size=3)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("F"="dodgerblue",
                              "D"="firebrick",
                              "Singleton"="black"))+coord_fixed(ratio=1)+
  scale_x_continuous(limits=c(-10, 15)) +
  scale_y_continuous(limits=c(-10, 15))


ce02.g.pre<-ggplot(ce02.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  geom_point(size=1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("F"="dodgerblue",
                              "D"="firebrick",
                              "Singleton"="black"))+ggtitle("CESAC 2002")

ce02.p.pre<-upgma(dist(ce02))

ce02.p<-ggtree(ce02.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=2)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
ce02.g<-list(ggplotGrob(ce02.g.pre), ggplotGrob(ce02.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.ce02<- grid.arrange(grobs = ce02.g, layout_matrix = lay)

#CESAC06

ggplot(ce06.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=2)+
  geom_point(size=2)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "B"="firebrick",
                              "C"="forestgreen",
                              "D"="darkslateblue",
                              "E"="darkorange2",
                              "Singleton"="black"))+coord_fixed(ratio=1)

ggplot(ce06.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=2)+
  geom_point(size=2)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "B"="firebrick",
                              "C"="forestgreen",
                              "D"="darkslateblue",
                              "E"="darkorange2",
                              "Singleton"="black"))+coord_fixed(ratio=1)+
  scale_x_continuous(limits=c(-10, 15)) +
  scale_y_continuous(limits=c(-10, 15))

ce06.g.pre<-ggplot(ce06.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  geom_point(size=1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "B"="firebrick",
                              "C"="forestgreen",
                              "D"="darkslateblue",
                              "E"="darkorange2",
                              "Singleton"="black"))+ggtitle("CESAC 2006")

ce06.p.pre<-upgma(dist(ce06))

ce06.p<-ggtree(ce06.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=2)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
ce06.g<-list(ggplotGrob(ce06.g.pre), ggplotGrob(ce06.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.ce06<- grid.arrange(grobs = ce06.g, layout_matrix = lay)



#jl

ggplot(jl.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "B"="firebrick",
                              "C"="forestgreen",
                              "D"="gold3",
                              "E"="darkolivegreen",
                              "F"="darkorange2",
                              "G"="darkmagenta",
                              "H"="darkslateblue",
                              "I"="chartreuse3",
                              "sing"="black"))+coord_fixed(ratio=1)



jl.g.pre<-ggplot(jl.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=15, "gen"=19, "conf"=17))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "B"="firebrick",
                              "C"="forestgreen",
                              "D"="gold3",
                              "E"="darkolivegreen",
                              "F"="darkorange2",
                              "G"="darkmagenta",
                              "H"="darkslateblue",
                              "I"="chartreuse3",
                              "sing"="black"))+ggtitle("JL 2006")

jl.p.pre<-upgma(dist(jl))

jl.p<-ggtree(jl.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=2)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
jl.g<-list(ggplotGrob(jl.g.pre), ggplotGrob(jl.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.jl<- grid.arrange(grobs = jl.g, layout_matrix = lay)


#str

ggplot(str.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0)+
  scale_shape_manual(values=c("A"=19, "Singleton"=15))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "Singleton"="black"))+coord_fixed(ratio=1)


str.g.pre<-ggplot(str.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("A"=19, "Singleton"=15))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "Singleton"="black"))+ggtitle("str 2006")

str.p.pre<-upgma(dist(str))

str.p<-ggtree(str.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
str.g<-list(ggplotGrob(str.g.pre), ggplotGrob(str.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.str<- grid.arrange(grobs = str.g, layout_matrix = lay)

#Serbia

ggplot(S.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("A"=19, "B"=19,  "Singleton"=15))+
  scale_color_manual(values=c("A"="dodgerblue",
                              "B"="firebrick",
                              "Singleton"="black"))+coord_fixed(ratio=1)


S.g.pre<-ggplot(S.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("SA"=19, "SB"=19, "SC"=19, "ui"=15))+
  scale_color_manual(values=c("SA"="dodgerblue",
                              "SB"="firebrick",
                              "SC"="forestgreen",
                              "ui"="black"))+ggtitle("S 2007")

S.p.pre<-upgma(dist(S))

S.p<-ggtree(S.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
S.g<-list(ggplotGrob(S.g.pre), ggplotGrob(S.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.S<- grid.arrange(grobs = S.g, layout_matrix = lay)

#HD1

ggplot(hd1.c, aes(x=x, y=y, label=FINAlab, color=shape, shape=shape))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0)+
  scale_shape_manual(values=c("ui"=15))+
  scale_color_manual(values=c("ui"="black"))+coord_fixed(ratio = 1)


hd1.g.pre<-ggplot(hd1.c, aes(x=x, y=y, label=FINAlab, color=shape, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("ui"=19))+
  scale_color_manual(values=c("ui"="black"))+ggtitle("HD1 2004")

hd1.p.pre<-upgma(dist(hd1))

hd1.p<-ggtree(hd1.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
hd1.g<-list(ggplotGrob(hd1.g.pre), ggplotGrob(hd1.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.hd1<- grid.arrange(grobs = hd1.g, layout_matrix = lay)

#HD2

ggplot(hd2.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0)+
  scale_shape_manual(values=c("A"=19, "B" =19,"ui"=15))+
  scale_color_manual(values=c("A"="dodgerblue","B"="firebrick","ui"="black"))+coord_fixed(ratio = 1)

hd2.g.pre<-ggplot(hd2.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("A"=19, "B" =19,"ui"=15))+
  scale_color_manual(values=c("A"="dodgerblue","B"="firebrick","ui"="black"))+ggtitle("HD2 2004")

hd2.p.pre<-upgma(dist(hd2))

hd2.p<-ggtree(hd2.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
hd2.g<-list(ggplotGrob(hd2.g.pre), ggplotGrob(hd2.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.hd2<- grid.arrange(grobs = hd2.g, layout_matrix = lay)

#HD3

ggplot(hd3.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0)+
  scale_shape_manual(values=c("A"=19, "ui"=15))+
  scale_color_manual(values=c("A"="dodgerblue","ui"="black"))+coord_fixed(ratio=1)

hd3.g.pre<-ggplot(hd3.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=genet.1))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("A"=19, "ui"=15))+
  scale_color_manual(values=c("A"="dodgerblue","ui"="black"))+ggtitle("HD3 2004")

hd3.p.pre<-upgma(dist(hd3))

hd3.p<-ggtree(hd3.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
hd3.g<-list(ggplotGrob(hd3.g.pre), ggplotGrob(hd3.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.hd3<- grid.arrange(grobs = hd3.g, layout_matrix = lay)


#roch1

ggplot(roch1.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=2)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=3)+
  scale_shape_manual(values=c("gen"=19, "ui"=15))+
  scale_color_manual(values=c("A1"="dodgerblue","ui"="black"))+coord_fixed(ratio = 1)

roch1.g.pre<-ggplot(roch1.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("gen"=19, "ui"=15))+
  scale_color_manual(values=c("A1"="dodgerblue","ui"="black"))+ggtitle("Roch1 2007")

roch1.p.pre<-upgma(dist(roch1))

roch1.p<-ggtree(roch1.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
roch1.g<-list(ggplotGrob(roch1.g.pre), ggplotGrob(roch1.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.hd3<- grid.arrange(grobs = roch1.g, layout_matrix = lay)

#roch2

ggplot(roch2.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=3)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0)+
  scale_shape_manual(values=c("gen"=19, "ui"=15))+
  scale_color_manual(values=c("A2"="dodgerblue","ui"="black"))+coord_fixed(ratio = 1)

roch2.g.pre<-ggplot(roch2.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("gen"=19, "ui"=15))+
  scale_color_manual(values=c("A2"="dodgerblue","ui"="black"))+ggtitle("Roch2 2007")

roch2.p.pre<-upgma(dist(roch2))

roch2.p<-ggtree(roch2.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
roch2.g<-list(ggplotGrob(roch2.g.pre), ggplotGrob(roch2.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.hd3<- grid.arrange(grobs = roch2.g, layout_matrix = lay)

#roch3

ggplot(roch3.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=2)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=3)+
  scale_shape_manual(values=c("gen"=19, "ui"=15))+
  scale_color_manual(values=c("A2"="dodgerblue","ui"="black"))+coord_fixed(ratio = 1)

roch3.g.pre<-ggplot(roch3.c, aes(x=x, y=y, label=FINAlab, color=genet.1, shape=shape))+
  geom_point(size=1)+mytheme+labs(x="Distance (m)", y="Distance (m)")+
  geom_text_repel(aes(label=FINAlab),hjust=0, vjust=0, size=1.5, segment.size = .05, segment.alpha = 1)+
  scale_shape_manual(values=c("gen"=19, "ui"=15))+
  scale_color_manual(values=c("A2"="dodgerblue","ui"="black"))+ggtitle("Roch3 2007")

roch3.p.pre<-upgma(dist(roch3))

roch3.p<-ggtree(roch3.p.pre, color="#9400D3")+geom_tiplab(hjust=.5, angle=-45, size=3)+scale_x_reverse()+coord_flip()+geom_tippoint(shape=18,size=3, col="black")
r<-rectGrob(gp=gpar(fill="white", col="white"))
roch3.g<-list(ggplotGrob(roch3.g.pre), ggplotGrob(roch3.p), r)
lay <- rbind(c(2,2,2, 2, NA),c(1,1,1,1,3),c(1,1,1,1,3), c(1,1,1,1,3), c(1,1,1,1,3))
gaga.hd3<- grid.arrange(grobs = roch3.g, layout_matrix = lay)



plotlist.aflp<-list(S.g.pre, ce02.g.pre, ce06.g.pre, jl.g.pre, str.g.pre, r, roch1.g.pre, roch2.g.pre, roch3.g.pre, hd1.g.pre, hd2.g.pre, hd3.g.pre, d1.g.pre, d2.g.pre, r, d3.g.pre, d4.g.pre, r)

grid.arrange(grobs=plotlist.aflp, ncol=3, nrow=6)

plotlist.snp<-list(mira.g.pre, agr.g.pre, d2snp.g.pre, d3snp.g.pre, d2.14.g.pre, d3.14.g.pre, d2.15.g.pre, d3.15.g.pre)
grid.arrange(grobs=plotlist.snp, nrow=4, ncol=2)


#############################################################################################################
#############################################################################################################
#############################################################################################################
################################# Genetic Distance Density Distr    #########################################
#############################################################################################################
#############################################################################################################
#############################################################################################################




setwd("/Volumes/Desassossego/finalizing_genets")
maf006yall.gi<-readRDS("Robjs.ma006.mx.5/maf006.mx.5.gi.rds")
maf006yall.dist<-dist(maf006yall.gi)
library(reshape2)
library(ggplot2)
maf006.dist<-as.matrix(dist(maf006yall))
maf006.dist[lower.tri(maf006.dist, diag=T)] <- "boob"

myPops <- as.factor(c('old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'old_EU',	'CA_old',	'old_EU',	'D2.04',	'D2.04',	
                      'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',	'D2.04',
                      'D2.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'D3.04',	'old_EU',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',	'D2.14',
                      'D2.14',	'D2.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',	'D3.14',
                      'D3.14',	'Agraria',	'Agraria',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',	'Vilarinho',
                      'Mira',	'Mira',	'Mira',	'Mira',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D2.15',
                      'D2.15',	'D2.15',	'D2.15',	'D2.15',	'D3.15',	'D3.15',	'D3.15'))


labs<-cbind(  colnames(maf006.dist), as.data.frame(myPops))
labs$nl<-paste(labs$`colnames(maf006.dist)`, labs$myPops, sep="*")

colnames(maf006.dist)<-rownames(maf006.dist)<-labs$nl

maf006.dist.mlt<-melt(maf006.dist)
maf006.dist.mlt<-maf006.dist.mlt[maf006.dist.mlt$value != "boob",]
#write.csv(maf006.dist.mlt, "SNP-euclid.dist_melted.csv")

library(tidyr)
sample.ind1<-as.data.frame(separate(data = maf006.dist.mlt, col = Var1, into = c("sample1", "pop1"), sep = "\\*"))
sample.ind2<-as.data.frame(separate(data = maf006.dist.mlt, col = Var2, into = c("sample2", "pop2"), sep = "\\*"))

maf006.build<-cbind(maf006.dist.mlt, sample.ind1[, c("sample1", "pop1")]  , sample.ind2[, c("sample2", "pop2")])
maf006.build$pop.pair<-paste(maf006.build$pop1, maf006.build$pop2)


maf006.build$value <- as.numeric(as.character(maf006.build$value))


w.in.dr<-as.vector(c("D2.04 D2.04", "D2.14 D2.14", "D2.15 D2.15", "D3.04 D3.04" ,"D3.14 D3.14","D3.15 D3.15" ))
#betw.in.dr<-as.vector(c("D2.04 D3.04", "D2.04 D3.14","D2.04 D3.15","D2.14 D3.14","D2.14 D3.15", "D2.15 D3.15"))
#europe<-as.vector(c("Agraria Agraria","Agraria Mira",  "Agraria Vilarinho", "Vilarinho Mira","Vilarinho Vilarinho", "Mira Mira", "old_EU Vilarinho", "old_EU Agraria", "old_EU Mira", "old_EU old_EU"))
portugal<-as.vector(c("Agraria Agraria","Vilarinho Vilarinho", "Mira Mira"))

maf006.build.w.in.drakes<-maf006.build[maf006.build$pop.pair %in% w.in.dr,]
#maf006.build.betw.in.drakes<-maf006.build[maf006.build$pop.pair %in% betw.in.dr,]
#maf006.build.EU<-maf006.build[maf006.build$pop.pair %in% europe,]
maf006.build.port<-maf006.build[maf006.build$pop.pair %in% portugal,]


#ggplot(maf006.build, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)
ggplot(maf006.build.w.in.drakes, aes(value, fill = pop.pair))+geom_density()
ggplot(maf006.build.betw.in.drakes, aes(value, fill = pop.pair))+geom_density()
ggplot(maf006.build.EU, aes(value, fill = pop.pair))+geom_density()
ggplot(maf006.build.port, aes(value, fill = pop.pair))+geom_density()



a<-ggplot(maf006.build.w.in.drakes, aes(value, fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, individuals within CA Populations", fill="")+scale_x_continuous(limits = c(100, 350))+scale_fill_manual( values = c("#ff0000","#b30000", "#ff6666", "#ff9900", "#cc7a00", "#cc9900"))+geom_hline(yintercept=0, colour="lightgrey", size=.53)
#b<-ggplot(maf006.build.betw.in.drakes, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, individuals between CA Populations", fill="")+scale_x_continuous(limits = c(100, 350))+scale_fill_manual( values = c("#008000", "#3CB371", "#556B2F", "#4B0082", "#8A2BE2", "#8B008B"	))+geom_hline(yintercept=0, colour="lightgrey", size=.53)
#c<-ggplot(maf006.build.EU, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, between EU Individuals", fill="")+scale_x_continuous(limits = c(100, 350))+scale_fill_manual( values = c("#DAA520", "#FFD700", "#CD853F", "#8B4513", "#CFB53B", "#C5B358",   "#008B8B","#66CDAA", "#00FFFF", "#000000"	))+geom_hline(yintercept=0, colour="lightgrey", size=.53)
d<-ggplot(maf006.build.port, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, between Portuguese Individuals", fill="")+scale_x_continuous(limits = c(100, 350))+scale_fill_manual( values = c("#cc33ff","#9966ff","#6600ff"))+geom_hline(yintercept=0, colour="lightgrey", size=.53)

a.nl<-ggplot(maf006.build.w.in.drakes, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, individuals within CA Populations", fill="")+scale_x_continuous(limits = c(100, 350))+ theme(legend.position="None")+scale_fill_manual( values = c("#ff0000","#b30000", "#ff6666", "#ff9900", "#cc7a00", "#cc9900"))+geom_hline(yintercept=0, colour="lightgrey", size=.53)
#b.nl<-ggplot(maf006.build.betw.in.drakes, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, individual between CA Populations", fill="")+scale_x_continuous(limits = c(100, 350))+ theme(legend.position="None")+scale_fill_manual( values = c("#008000", "#3CB371", "#556B2F", "#4B0082", "#8A2BE2", "#8B008B"	))+geom_hline(yintercept=0, colour="lightgrey", size=.53)
#c.nl<-ggplot(maf006.build.EU, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, between EU Individuals", fill="")+scale_x_continuous(limits = c(100, 350))+ theme(legend.position="None")+scale_fill_manual( values = c("#DAA520", "#FFD700", "#CD853F", "#8B4513", "#CFB53B", "#C5B358",   "#008B8B","#66CDAA", "#00FFFF", "#000000"	))+geom_hline(yintercept=0, colour="lightgrey", size=.53)
d.nl<-ggplot(maf006.build.port, aes((value), fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, between Portuguese Individuals", fill="")+scale_x_continuous(limits = c(100, 350))+ theme(legend.position="None")+scale_fill_manual( values = c("#cc33ff","#9966ff","#6600ff"))+geom_hline(yintercept=0, colour="lightgrey", size=.53)


library(ggplot2)
library(gridExtra)
library(cowplot)

grid.arrange(a,d,d,d,d, ncol=1, nrow=5)
grid.arrange(a.nl,d.nl,d.nl,d.nl,d.nl, ncol=1, nrow=5)



ggplot(maf006.build.w.in.drakes, aes(value, fill = pop.pair)) + geom_density(alpha = 0.4)+theme_bw()+
  labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, individuals within CA Populations", fill="")+
  scale_x_continuous(limits = c(100, 350))+scale_fill_manual( values = c("#EE0000","#FF7F00", "#EEC900", "#0000ff", "#7f7fff", "#8000ff"))+
geom_hline(yintercept=0, colour="lightgrey", size=.55)
#cowplot::plot_grid(a, b, c, d, nrow = 4, align="none")
#plot_grid(a.nl, b.nl, c.nl, d.nl, nrow = 4, align="none")

#rel_widths = c(.54116,.492356,1,.7347))



ggplot(df, aes(x, fill = group)) + 
  geom_density(alpha = 0.5, position = "stack") + 
  ggtitle("stacked density chart")


##############################
setwd("~/Dropbox/Genet Size/Jacob Analyses")
hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")

hier <- read.genalex("AFLP_genalex_AMANITABASED.csv")
hier.gi<-as.genind(as.matrix(hier))
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)
pop(hier.gi)<-pops.aflp

library(reshape2)
library(ggplot2)
hier.dist<-as.matrix(dist(hier.gi))
hier.dist[lower.tri(hier.dist, diag=T)] <- "boob"

labs<-cbind(  colnames(hier.dist), as.data.frame(pops.aflp))
labs$nl<-paste(labs$`colnames(hier.dist)`, labs$pops.aflp, sep="*")

colnames(hier.dist)<-rownames(hier.dist)<-labs$nl

hier.dist.mlt<-melt(hier.dist)
hier.dist.mlt<-hier.dist.mlt[hier.dist.mlt$value != "boob",]
#write.csv(maf006.dist.mlt, "SNP-euclid.dist_melted.csv")

library(tidyr)
sample.ind1<-as.data.frame(separate(data = hier.dist.mlt, col = Var1, into = c("sample1", "pop1"), sep = "\\*"))
sample.ind2<-as.data.frame(separate(data = hier.dist.mlt, col = Var2, into = c("sample2", "pop2"), sep = "\\*"))

hier.dist.build<-cbind(hier.dist.mlt, sample.ind1[, c("sample1", "pop1")]  , sample.ind2[, c("sample2", "pop2")])
hier.dist.build$pop.pair<-paste(hier.dist.build$pop1, hier.dist.build$pop2)


hier.dist.build$value <- as.numeric(as.character(hier.dist.build$value))

roch<-as.vector(c("Rochester_NY_2007_1 Rochester_NY_2007_1","Rochester_NY_2007_2 Rochester_NY_2007_2", "Rochester_NY_2007_3 Rochester_NY_2007_3"))
hier.dist.build.roch<-hier.dist.build[hier.dist.build$pop.pair %in% roch,]

drakes.win<-as.vector(c("Drake_1_2004 Drake_1_2004",  "Drake_2_2004 Drake_2_2004" , "Drake_3_2004 Drake_3_2004", "Drake_4_2004 Drake_4_2004" ))
hier.dist.build.drakes.win<-hier.dist.build[hier.dist.build$pop.pair %in% drakes.win,]

#drakes.wout<-as.vector(c("Drake_1_2004 Drake_2_2004","Drake_1_2004 Drake_3_2004","Drake_1_2004 Drake_4_2004","Drake_2_2004 Drake_3_2004","Drake_2_2004 Drake_4_2004","Drake_3_2004 Drake_4_2004"))
#hier.dist.build.build.drakes.wout<-hier.dist.build[hier.dist.build$pop.pair %in% drakes.wout,]

nj.winwout<-as.vector(c("Jakes_Landing_2006 Jakes_Landing_2006","New_Jersey_str_2006 New_Jersey_str_2006"))
hier.dist.build.build.nj.winwout<-hier.dist.build[hier.dist.build$pop.pair %in% nj.winwout,]

hd.winwout<-as.vector(c("Hearts_Desire_1_2004 Hearts_Desire_1_2004", 
                        "Hearts_Desire_2_2004 Hearts_Desire_2_2004","Hearts_Desire_3_2004 Hearts_Desire_3_2004"))
hier.dist.build.build.hd.winwout<-hier.dist.build[hier.dist.build$pop.pair %in% hd.winwout,]

eu.winwout<-as.vector(c("CESAC_2002 CESAC_2002","CESAC_2006 CESAC_2006","Serbia_2007 Serbia_2007"))
hier.dist.build.build.eu.winwout<-hier.dist.build[hier.dist.build$pop.pair %in% eu.winwout,]


a<-ggplot(hier.dist.build.roch, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, Rochester NY, 2007", fill="")+ theme(legend.position="None")+scale_fill_manual( values = c("#0099ff", "#006bb3", "#b3e0ff"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
b<-ggplot(hier.dist.build.drakes.win, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, w/in Drake's Passage, 2004", fill="")+ theme(legend.position="None")+scale_fill_manual( values = c("#ff6699","#ff0000","#ff9900","#cc5200"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
#c<-ggplot(hier.dist.build.build.drakes.wout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, between Drake's Passage, 2004", fill="")+ theme(legend.position="None")+scale_fill_manual( values = c("#ff6600","#803300", "#ffa366", "#ffe0cc", "#ffcc00", "#665200"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
d<-ggplot(hier.dist.build.build.nj.winwout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, New Jersey, 2006", fill="")+ theme(legend.position="None")+scale_fill_manual( values = c("#0000ff","#8080ff"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
e<-ggplot(hier.dist.build.build.hd.winwout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, Heart's Desire, 2004", fill="")+ theme(legend.position="None")+scale_fill_manual( values = c("#ffff00","#999900","#e6b800" ))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
f<-ggplot(hier.dist.build.build.eu.winwout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, Europe, 2002-2007", fill="")+ theme(legend.position="None")+scale_fill_manual( values = c("#9900cc","#993366","#df9fbf" ))+geom_hline(yintercept=0, colour="lightgrey", size=.3)

grid.arrange(a,b,d,e,f, ncol=1, nrow=5)


a.l<-ggplot(hier.dist.build.roch, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, Rochester NY, 2007", fill="")+scale_fill_manual( values = c("#0099ff", "#006bb3", "#b3e0ff"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
b.l<-ggplot(hier.dist.build.drakes.win, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, w/in Drake's Passage, 2004", fill="")+scale_fill_manual( values = c("#ff6699","#ff0000","#ff9900","#cc5200"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
#c.l<-ggplot(hier.dist.build.build.drakes.wout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, between Drake's Passage, 2004", fill="")+ scale_fill_manual( values = c("#ff6600","#803300", "#ffa366", "#ffe0cc", "#ffcc00", "#665200"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
d.l<-ggplot(hier.dist.build.build.nj.winwout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, New Jersey, 2006", fill="")+ scale_fill_manual( values = c("#0000ff","#8080ff"))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
e.l<-ggplot(hier.dist.build.build.hd.winwout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, Heart's Desire, 2004", fill="")+scale_fill_manual( values = c("#ffff00","#999900","#e6b800" ))+geom_hline(yintercept=0, colour="lightgrey", size=.3)
f.l<-ggplot(hier.dist.build.build.eu.winwout, aes((value), fill = pop.pair)) + geom_density(alpha = 0.2)+theme_bw()+scale_x_continuous(limits = c(0, 6))+labs(x="Pairwise Euclidean Distances (genetic)", title="Distribution of Genetic Relatedness, Europe, 2002-2007", fill="")+ scale_fill_manual( values = c("#9900cc","#993366","#df9fbf" ))+geom_hline(yintercept=0, colour="lightgrey", size=.3)

grid.arrange(a.l,b.l,d.l,e.l,f.l, ncol=1, nrow=5)

#####################################################################
# MAX MISSING cutoff

setwd("~/Desktop/GENETS_finishing")
cuts<-read.csv("maf006cut.v.loci.csv", head=T, stringsAsFactors = F)
#cuts$cut <- as.character(cuts$cut)
#cuts$cut <- factor(cuts$cut, levels=unique(cuts$cut))
#cuts$cut <- factor(cuts$cut, levels=c("mx.5",
#                                      "mx.55",
#                                      "mx.6",
#                                      "mx.65",
#                                      "mx.7",
#                                      "mx.75",
#                                      "mx.8",
#                                      "mx.85",
#                                      "mx.9",
#                                      "mx.95",
#                                      "mx1"))

ggplot(cuts, aes(reorder(cut, -loci), loci))+geom_bar(stat="identity")

##########################################################################################################################################
##########################################################################################################################################
##########################################################################################################################################
########################################                    Fst                             ##############################################
##########################################################################################################################################
##########################################################################################################################################
##########################################################################################################################################
##########################################################################################################################################

setwd("~/Dropbox/Genet Size/Jacob Analyses")

hier <- read.genalex("AFLP_genalex_4hier.csv")

hier.gi<-as.genind(as.matrix(hier))
hier.gl<-as.genlight(as.matrix(hier))


library(hierfstat)
pops.aflp<-c(
  replicate(13, "Rochester_NY_2007_1"),
  replicate(7, "Rochester_NY_2007_2"),
  replicate(2, "Rochester_NY_2007_3"),
  replicate(1, "Austria"),
  replicate(37, "CESAC_2006"),
  replicate(25, "CESAC_2002"),
  replicate(19, "Drake_1_2004"),
  replicate(13, "Drake_2_2004"),
  replicate(8, "Drake_3_2004"),
  replicate(6, "Drake_4_2004"),
  replicate(1, "Spain_2006"),
  replicate(7, "Hearts_Desire_1_2004"),
  replicate(7, "Hearts_Desire_2_2004"),
  replicate(4, "Hearts_Desire_3_2004"),
  replicate(44, "Jakes_Landing_2006"),
  replicate(1, "Arfons_2007"),
  replicate(1, "Monterrey_Pisto_2006"),
  replicate(14, "Serbia_2007"),
  replicate(11, "New_Jersey_str_2006")
)

pop(hier.gi)<-pops.aflp



test<-as.data.frame(cbind(pops.aflp, hier.gi$tab))
test[, -1] <- sapply(test[, -1], as.numeric)
efestee<-genet.dist(test, diploid=T, method="WC84")
efestee.dist<-as.dist(efestee)
library(lattice)
heatmap(as.matrix(efestee.dist),symm=TRUE)

new.palette=colorRampPalette(c("black","red","yellow","white"),space="rgb") 
levelplot(as.matrix(efestee.dist)[1:ncol(as.matrix(efestee.dist)),ncol(as.matrix(efestee.dist)):1],col.regions=new.palette(20),scales=list(x=list(rot=90)), panel=as.matrix(efestee))

library(gplots)
heatmap.2(as.matrix(efestee.dist),           # cell labeling
          cellnote=round(as.matrix(efestee.dist), digits =3),
          notecex=.5, notecol="black", trace="none", key=F, cexRow = .75, cexCol = .75, dendrogram="row")

cleanFST<-as.matrix(efestee.dist)
cleanFST<-cleanFST[-c(1,2,13,19), -c(1,2,13,19)]
heatmap.2(cleanFST,           # cell labeling
          cellnote=round(cleanFST, digits =3),
          notecex=.5, notecol="black", trace="none", key=F, cexRow = .75, cexCol = .75, dendrogram="row")

# clone correct ********************** THIS ONE for AFLP
hier.gc<-as.genclone(hier.gi)

strata(hier.gc) <- as.data.frame(pop(hier.gi)) #set population as stratum
hier.gc$strata
hier.gc.cc<-clonecorrect(hier.gc)


plot(nj(dist(hier.gc.cc)))

pop.cc<-as.data.frame(hier.gc.cc$pop)

test2<-as.data.frame(cbind(pop.cc, hier.gc.cc$tab))
test2[, -1] <- sapply(test2[, -1], as.numeric)
colnames(test2)[1]<-"pops.aflp.cc"
efestee.cc<-genet.dist(test2, diploid=T, method="WC84")
efestee.cc.dist<-as.dist(efestee.cc)

cleanFST.cc<-as.matrix(efestee.cc.dist)
cleanFST.cc<-cleanFST.cc[-c(3,4,11,16,17), -c(3,4,11,16,17)] # *********  I had to remove rochester 3 because there are onlt two ind
heatmap.2(cleanFST.cc,           # cell labeling
          cellnote=round(cleanFST.cc, digits =3),
          notecex=.5, notecol="black", trace="none", key=F, cexRow = .75, cexCol = .75, dendrogram="row")

### Reorder matrices to follow Anne's configuration
# Serbia, CESAC, Rochester, JL, str, HD, Drake 1-4


cleanFST.cc.reorder<-cleanFST.cc[c(13,4,3,1,2,12,14,9,10,11,5,6,7,8),c(13,4,3,1,2,12,14,9,10,11,5,6,7,8)]

cleanFST.cc.reorder.upper<-cleanFST.cc.reorder
cleanFST.cc.reorder.upper[upper.tri(cleanFST.cc.reorder.upper, diag=T)] <- NA

heatmap.2(cleanFST.cc.reorder.upper,           # cell labeling
          cellnote=round(cleanFST.cc.reorder.upper, digits =3),
          notecex=1, notecol="black", trace="none", key=F, cexRow = 1.25, cexCol = 1.25, dendrogram="none", symm=F ,Rowv=FALSE, Colv=FALSE, srtCol=45)

cleanFST.cc.reorder.dist<-as.dist(cleanFST.cc.reorder)
#plot(hclust(cleanFST.cc.reorder.dist))

hc <- upgma((cleanFST.cc.reorder.dist))
plot(hc)


popsub(hier.gc.cc, sublist = "Rochester_NY_2007_1")
popsub(hier.gc.cc, sublist = "Rochester_NY_2007_2")
popsub(hier.gc.cc, sublist = "Rochester_NY_2007_3")

popsub(hier.gc, sublist = "Rochester_NY_2007_1")
popsub(hier.gc, sublist = "Rochester_NY_2007_2")
popsub(hier.gc, sublist = "Rochester_NY_2007_3")


#Drake
efestee.mat<-as.matrix(efestee)
efestee.drakes<-efestee.mat[c(5,6,7,8),c(5,6,7,8)]
levelplot(efestee.drakes[1:ncol(efestee.drakes),ncol(efestee.drakes):1],col.regions=new.palette(20),scales=list(x=list(rot=90)))

#HD
efestee.HD<-efestee.mat[c(9,10,11),c(9,10,11)]
levelplot(efestee.HD[1:ncol(efestee.HD),ncol(efestee.HD):1],col.regions=new.palette(20),scales=list(x=list(rot=90)))

#east
efestee.east<-efestee.mat[c(12,14,15,16,17),c(12,14,15,16,17)]
levelplot(efestee.east[1:ncol(efestee.east),ncol(efestee.east):1],col.regions=new.palette(20),scales=list(x=list(rot=90)))


#EUROPE
efestee.EU<-efestee.mat[c(3,4,18),c(3,4,18)]
levelplot(efestee.EU[1:ncol(efestee.EU),ncol(efestee.EU):1],col.regions=new.palette(20),scales=list(x=list(rot=90)))



write.csv(as.matrix(efestee.dist), "AFLP_pairwiseFst.csv")


View(test)
test.sub.compare2SNP.drake<-test[c(106:117,120:124),]
efestee.d2.d3comSNP<-genet.dist(test.sub.compare2SNP.drake, diploid=T, method="WC84") #0.01875621

############

#SNP
setwd("~/Desktop/GENETS_finishing")

fst.mx.5.time<-read.csv("Fst.mat.snps/max05poptime.csv", head=T, stringsAsFactors = F)
rownames(fst.mx.5.time)<-fst.mx.5.time[,1]
fst.mx.5.time<-as.matrix(fst.mx.5.time[,-1])
fst.mx.5.time.dist<-as.dist(fst.mx.5.time)
fst.mx.5.time.dist.m<-as.matrix(fst.mx.5.time.dist)
fst.mx.5.time.dist.m[upper.tri(fst.mx.5.time.dist.m, diag=T)]<-NA


heatmap.2(fst.mx.5.time.dist.m,           # cell labeling
          cellnote=round(fst.mx.5.time.dist.m, digits =3),
          notecex=1, notecol="black", trace="none", key=F, cexRow = 1.25, cexCol = 1.25, dendrogram="none", symm=F ,Rowv=FALSE, Colv=FALSE, srtCol=45)
hc <- upgma((as.dist(fst.mx.5.time.dist.m)))
plot(hc)

# # # # # # # # # # # # # #

fst.mx.5<-read.csv("Fst.mat.snps/max05pop.csv", head=T, stringsAsFactors = F)
rownames(fst.mx.5)<-fst.mx.5[,1]
fst.mx.5<-as.matrix(fst.mx.5[,-1])
fst.mx.5.dist<-as.dist(fst.mx.5)
fst.mx.5.dist.m<-as.matrix(fst.mx.5.dist)
fst.mx.5.dist.m[upper.tri(fst.mx.5.dist.m, diag=T)]<-NA


heatmap.2(fst.mx.5.dist.m,           # cell labeling
          cellnote=round(fst.mx.5.dist.m, digits =3),
          notecex=1, notecol="black", trace="none", key=F, cexRow = 1.25, cexCol = 1.25, dendrogram="none", symm=F ,Rowv=FALSE, Colv=FALSE, srtCol=45)
hc <- upgma((as.dist(fst.mx.5.dist.m)))
plot(hc)


###################################################
# raw genomes length
genomes<-read.csv("raw_genomes_length.csv", head=T, stringsAsFactors = F)
test<-str(split(genomes, (as.numeric(rownames(genomes))-1) %/% 4))
test[[1]]


hello<-split(genomes, (seq(nrow(genomes))-1) %/% 4) 
hello.bye<-do.call(rbind, hello)


require(ff)
df <- data.frame(one=c(rnorm(1123)), two=c(rnorm(1123)), three=c(rnorm(1123)))
for(i in chunk(from = 1, to = nrow(df), by = 4)){
  print(df[min(i):max(i), ])
}


####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################
#                                         GENET SIZE COMPARISON
####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################
setwd("~/Dropbox/GENETS_finishing")
coords<-read.csv("ALL_COORDS_geo_AMANITABASED.csv", head=T, stringsAsFactors = F) #just so that I had the right labels

coords.d1<-coords[coords$pop =="Drake1",]
coords.d1.aflp<-coords.d1

max(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1A",][,5:6]))
max(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1B",][,5:6]))
max(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1C",][,5:6]))
max(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1D",][,5:6]))
max(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1E",][,5:6]))
max(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1F",][,5:6]))




coords.d2<-coords[coords$pop =="Drake2",]
coords.d2.04<-coords.d2[coords.d2$year =="Sample_2004",]
coords.d2.04.aflp<-coords.d2.04[-6,]
coords.d2.04.snp<-coords.d2.04[-1,]


coords.d2.14<-coords.d2[coords.d2$year =="Sample_2014",]
coords.d2.14.snp<-coords.d2.14


coords.d2.15<-coords.d2[coords.d2$year =="Sample_2015",]
coords.d2.15.snp<-coords.d2.15[-9,]

coords.d3<-coords[coords$pop =="Drake3",]
coords.d3.04<-coords.d3[coords.d3$year =="Sample_2004",]
coords.d3.04.aflp<-coords.d3.04
coords.d3.04.snp<-coords.d3.04[3:7,]

max(dist(coords.d3.04.aflp[coords.d3.04.aflp$shape =="tri",][,5:6]))


coords.d3.14<-coords.d3[coords.d3$year =="Sample_2014",]
coords.d3.14.snp<-coords.d3.14

coords.d3.15<-coords.d3[coords.d3$year =="Sample_2015",]
coords.d3.15.snp<-coords.d3.15


coords.d4<-coords[coords$pop =="Drake4",]
coords.d4.aflp<-coords.d4[-2,]

max(dist(coords.d4.aflp[coords.d4.aflp$genet.1 =="d4.A",][,5:6]))


coords.hd1<-coords[coords$pop =="HD1",]
coords.hd1.aflp<-coords.hd1
coords.hd2<-coords[coords$pop =="HD2",]
coords.hd2.aflp<-coords.hd2[-4,]
coords.hd3<-coords[coords$pop =="HD3",]
coords.hd3.aflp<-coords.hd3

max(dist(coords.hd2.aflp[coords.hd2.aflp$genet.1 =="A",][,5:6]))
max(dist(coords.hd2.aflp[coords.hd2.aflp$genet.1 =="B",][,5:6]))
max(dist(coords.hd3.aflp[coords.hd3.aflp$genet.1 =="A",][,5:6]))


coords.mira<-coords[coords$pop =="mira",]
coords.mira.snp<-coords.mira
coords.agraria<-coords[coords$pop =="agraria",]
coords.agraria.snp<-coords.agraria

coords.JL<-coords[coords$pop =="JL",]
coords.JL.aflp<-coords.JL

max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="A",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="B",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="C",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="D",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="E",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="F",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="G",][,5:6]))
max(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="H",][,5:6]))


coords.CESAC02<-coords[coords$pop =="CESAC02",]
coords.CESAC02.aflp<-coords.CESAC02
coords.CESAC06<-coords[coords$pop =="CESAC06",]
coords.CESAC06.aflp<-coords.CESAC06

max(dist(coords.CESAC02.aflp[coords.CESAC02.aflp$genet.1 =="D",][,5:6]))D

max(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="A",][,5:6]))
max(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="B",][,5:6]))
max(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="C",][,5:6]))
max(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="D",][,5:6]))
max(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="E",][,5:6]))

coords.S<-coords[coords$pop =="S",]
coords.S.aflp<-coords.S # note S 11-14 do not have coords, need to remove from genind

max(dist(coords.S.aflp[coords.S.aflp$genet.1 =="SA",][,5:6]))
max(dist(coords.S.aflp[coords.S.aflp$genet.1 =="SB",][,5:6]))
max(dist(coords.S.aflp[coords.S.aflp$genet.1 =="SC",][,5:6]))


coords.str<-coords[coords$pop =="str",]
coords.str.aflp<-coords.str[-c(2,6,8,12,15,16),]

max(dist(coords.str.aflp[coords.str.aflp$genet.1 =="A",][,5:6]))


coords.roch<-coords[coords$pop =="roch",]
coords.roch1<-coords.roch[1:13,]
coords.roch1.aflp<-coords.roch1
coords.roch2<-coords.roch[14:20,]
coords.roch2.aflp<-coords.roch2[-4,] #need to remove 2_6b from genind file
coords.roch3<-coords.roch[21:30,]
coords.roch3.aflp<-coords.roch3[3:4,]

max(dist(coords.roch1.aflp[coords.roch1.aflp$genet.1 =="A1",][,5:6]))
max(dist(coords.roch2.aflp[coords.roch2.aflp$genet.1 =="A2",][,5:6]))


rownames(coords.d1.aflp)<-coords.d1.aflp$FINALlab
rownames(coords.d2.04.aflp)<-coords.d2.04.aflp$FINALlab
rownames(coords.d3.04.aflp)<-coords.d3.04.aflp$FINALlab
rownames(coords.d4.aflp)<-coords.d4.aflp$FINALlab

rownames(coords.hd1.aflp)<-coords.hd1.aflp$FINALlab
rownames(coords.hd2.aflp)<-coords.hd2.aflp$FINALlab
rownames(coords.hd3.aflp)<-coords.hd3.aflp$FINALlab

rownames(coords.JL.aflp)<-coords.JL.aflp$FINALlab

rownames(coords.CESAC02.aflp)<-coords.CESAC02.aflp$FINALlab
rownames(coords.CESAC06.aflp)<-coords.CESAC06.aflp$FINALlab

rownames(coords.S.aflp)<-coords.S.aflp$FINALlab

rownames(coords.str.aflp)<-coords.str.aflp$FINALlab

rownames(coords.roch1.aflp)<-coords.roch1.aflp$FINALlab

rownames(coords.roch2.aflp)<-coords.roch2.aflp$FINALlab

rownames(coords.roch3.aflp)<-coords.roch3.aflp$FINALlab



rownames(coords.d2.04.snp)<-coords.d2.04.snp$FINALlab
rownames(coords.d2.14.snp)<-coords.d2.14.snp$FINALlab
rownames(coords.d2.15.snp)<-coords.d2.15.snp$FINALlab

rownames(coords.d3.04.snp)<-coords.d3.04.snp$FINALlab
rownames(coords.d3.14.snp)<-coords.d3.14.snp$FINALlab
rownames(coords.d3.15.snp)<-coords.d3.15.snp$FINALlab

rownames(coords.mira.snp)<-coords.mira.snp$FINALlab
rownames(coords.agraria.snp)<-coords.agraria.snp$FINALlab

# Euclidean distance of x and y

coords.d1.aflp.dist<-as.matrix(dist(coords.d1.aflp[,5:6]))
colnames(coords.d1.aflp.dist)<-rownames(coords.d1.aflp.dist)<-coords.d1.aflp$FINAlab

coords.d2.04.aflp.dist<-as.matrix(dist(coords.d2.04.aflp[,5:6]))
colnames(coords.d2.04.aflp.dist)<-rownames(coords.d2.04.aflp.dist)<-coords.d2.04.aflp$FINAlab

coords.d3.04.aflp.dist<-as.matrix(dist(coords.d3.04.aflp[,5:6]))
colnames(coords.d3.04.aflp.dist)<-rownames(coords.d3.04.aflp.dist)<-coords.d3.04.aflp$FINAlab


coords.d4.aflp.dist<-as.matrix(dist(coords.d4.aflp[,5:6]))
colnames(coords.d4.aflp.dist)<-rownames(coords.d4.aflp.dist)<-coords.d4.aflp$FINAlab


coords.hd1.aflp.dist<-as.matrix(dist(coords.hd1.aflp[,5:6]))
colnames(coords.hd1.aflp.dist)<-rownames(coords.hd1.aflp.dist)<-coords.hd1.aflp$FINAlab

coords.hd2.aflp.dist<-as.matrix(dist(coords.hd2.aflp[,5:6]))
colnames(coords.hd2.aflp.dist)<-rownames(coords.hd2.aflp.dist)<-coords.hd2.aflp$FINAlab

coords.hd3.aflp.dist<-as.matrix(dist(coords.hd3.aflp[,5:6]))
colnames(coords.hd3.aflp.dist)<-rownames(coords.hd3.aflp.dist)<-coords.hd3.aflp$FINAlab


coords.JL.aflp.dist<-as.matrix(dist(coords.JL.aflp[,5:6]))
colnames(coords.JL.aflp.dist)<-rownames(coords.JL.aflp.dist)<-coords.JL.aflp$FINAlab


coords.CESAC02.aflp.dist<-as.matrix(dist(coords.CESAC02.aflp[,5:6]))
colnames(coords.CESAC02.aflp.dist)<-rownames(coords.CESAC02.aflp.dist)<-coords.CESAC02.aflp$FINAlab

coords.CESAC06.aflp.dist<-as.matrix(dist(coords.CESAC06.aflp[,5:6]))
colnames(coords.CESAC06.aflp.dist)<-rownames(coords.CESAC06.aflp.dist)<-coords.CESAC06.aflp$FINAlab


coords.S.aflp.dist<-as.matrix(dist(coords.S.aflp[,5:6]))
colnames(coords.S.aflp.dist)<-rownames(coords.S.aflp.dist)<-coords.S.aflp$FINAlab


coords.str.aflp.dist<-as.matrix(dist(coords.str.aflp[,5:6]))
colnames(coords.str.aflp.dist)<-rownames(coords.str.aflp.dist)<-coords.str.aflp$FINAlab


coords.roch1.aflp.dist<-as.matrix(dist(coords.roch1.aflp[,5:6]))
colnames(coords.roch1.aflp.dist)<-rownames(coords.roch1.aflp.dist)<-coords.roch1.aflp$FINAlab


coords.roch2.aflp.dist<-as.matrix(dist(coords.roch2.aflp[,5:6]))
colnames(coords.roch2.aflp.dist)<-rownames(coords.roch2.aflp.dist)<-coords.roch2.aflp$FINAlab


coords.roch3.aflp.dist<-as.matrix(dist(coords.roch3.aflp[,5:6]))
colnames(coords.roch3.aflp.dist)<-rownames(coords.roch3.aflp.dist)<-coords.roch3.aflp$FINAlab




coords.d2.04.snp.dist<-as.matrix(dist(coords.d2.04.snp[,5:6]))
colnames(coords.d2.04.snp.dist)<-rownames(coords.d2.04.snp.dist)<-coords.d2.04.snp$FINAlab

coords.d2.14.snp.dist<-as.matrix(dist(coords.d2.14.snp[,5:6]))
colnames(coords.d2.14.snp.dist)<-rownames(coords.d2.14.snp.dist)<-coords.d2.14.snp$FINAlab

coords.d2.15.snp.dist<-as.matrix(dist(coords.d2.15.snp[,5:6]))
colnames(coords.d2.15.snp.dist)<-rownames(coords.d2.15.snp.dist)<-coords.d2.15.snp$FINAlab


coords.d3.04.snp.dist<-as.matrix(dist(coords.d3.04.snp[,5:6]))
colnames(coords.d3.04.snp.dist)<-rownames(coords.d3.04.snp.dist)<-coords.d3.04.snp$FINAlab

coords.d3.14.snp.dist<-as.matrix(dist(coords.d3.14.snp[,5:6]))
colnames(coords.d3.14.snp.dist)<-rownames(coords.d3.14.snp.dist)<-coords.d3.14.snp$FINAlab


coords.d3.15.snp.dist<-as.matrix(dist(coords.d3.15.snp[,5:6]))
colnames(coords.d3.15.snp.dist)<-rownames(coords.d3.15.snp.dist)<-coords.d3.15.snp$FINAlab


coords.mira.snp.dist<-as.matrix(dist(coords.mira.snp[,5:6]))
colnames(coords.mira.snp.dist)<-rownames(coords.mira.snp.dist)<-coords.mira.snp$FINAlab

coords.agraria.snp.dist<-as.matrix(dist(coords.agraria.snp[,5:6]))
colnames(coords.agraria.snp.dist)<-rownames(coords.agraria.snp.dist)<-coords.agraria.snp$FINAlab


##################################


maxgen<-read.csv("maxgen.lengths.2018.csv", head=T, stringsAsFactors = F)

ggplot(maxgen, aes(x=range, y=max.dist, fill=range))+geom_boxplot()
ggplot(maxgen, aes(x=cont, y=max.dist, fill=cont))+geom_boxplot()

t.test(max.dist ~ cont, data = maxgen)

t.test(max.dist ~ range, data = maxgen[maxgen$range == c("CA", "EC"),])
t.test(max.dist ~ range, data = maxgen[maxgen$range == c("CA", "EU"),])
t.test(max.dist ~ range, data = maxgen[maxgen$range == c("EU", "EC"),])

ggplot(maxgen, aes(x=max.dist, fill=range))+geom_histogram()

wilcox.test(maxgen$max.dist[maxgen$range=="CA"],maxgen$max.dist[maxgen$range=="EU"])
wilcox.test(maxgen$max.dist[maxgen$range=="EU"],maxgen$max.dist[maxgen$range=="EC"])
wilcox.test(maxgen$max.dist[maxgen$range=="EU"],maxgen$max.dist[maxgen$range=="EC"|maxgen$range=="CA"])

#

upper.tri(as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1A",][,5:6])), diag=T)

d1A[upper.tri(d1A), diag=T] <- "rem"

d1A<-as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1A",][,5:6]))
d1B<-as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1B",][,5:6]))
d1C<-as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1C",][,5:6]))
d1D<-as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1D",][,5:6]))
d1E<-as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1E",][,5:6]))
d1F<-as.matrix(dist(coords.d1.aflp[coords.d1.aflp$genet.1 =="d1F",][,5:6]))


d3tri<-as.matrix(dist(coords.d3.04.aflp[coords.d3.04.aflp$shape =="tri",][,5:6]))



d4A<-as.matrix(dist(coords.d4.aflp[coords.d4.aflp$genet.1 =="d4.A",][,5:6]))



hd1A<-as.matrix(dist(coords.hd2.aflp[coords.hd2.aflp$genet.1 =="A",][,5:6]))
hd1B<-as.matrix(dist(coords.hd2.aflp[coords.hd2.aflp$genet.1 =="B",][,5:6]))
hd2A<-as.matrix(dist(coords.hd3.aflp[coords.hd3.aflp$genet.1 =="A",][,5:6]))



JLA<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="A",][,5:6]))
JLB<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="B",][,5:6]))
JLC<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="C",][,5:6]))
JLD<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="D",][,5:6]))
JLE<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="E",][,5:6]))
JLF<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="F",][,5:6]))
JLG<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="G",][,5:6]))
JLH<-as.matrix(dist(coords.JL.aflp[coords.JL.aflp$genet.1 =="H",][,5:6]))




ce02D<-as.matrix(dist(coords.CESAC02.aflp[coords.CESAC02.aflp$genet.1 =="D",][,5:6]))

ce06A<-as.matrix(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="A",][,5:6]))
ce06B<-as.matrix(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="B",][,5:6]))
ce06C<-as.matrix(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="C",][,5:6]))
ce06D<-as.matrix(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="D",][,5:6]))
ce06E<-as.matrix(dist(coords.CESAC06.aflp[coords.CESAC06.aflp$genet.1 =="E",][,5:6]))



SA<-as.matrix(dist(coords.S.aflp[coords.S.aflp$genet.1 =="SA",][,5:6]))/100
SB<-as.matrix(dist(coords.S.aflp[coords.S.aflp$genet.1 =="SB",][,5:6]))/100
SC<-as.matrix(dist(coords.S.aflp[coords.S.aflp$genet.1 =="SC",][,5:6]))/100



strA<-as.matrix(dist(coords.str.aflp[coords.str.aflp$genet.1 =="A",][,5:6]))


roch1A1<-as.matrix(dist(coords.roch1.aflp[coords.roch1.aflp$genet.1 =="A1",][,5:6]))
roch2A2<-as.matrix(dist(coords.roch2.aflp[coords.roch2.aflp$genet.1 =="A2",][,5:6]))

library(reshape2)
d1A.mlt<-melt(d1A)
d1B.mlt<-melt(d1B)
d1C.mlt<-melt(d1C)
d1D.mlt<-melt(d1D)
d1E.mlt<-melt(d1E)
d1F.mlt<-melt(d1F)
d3tri.mlt<-melt(d3tri)
d4A.mlt<-melt(d4A)
hd1A.mlt<-melt(hd1A)
hd1B.mlt<-melt(hd1B)
hd2A.mlt<-melt(hd2A)
JLA.mlt<-melt(JLA)
JLB.mlt<-melt(JLB)
JLC.mlt<-melt(JLC)
JLD.mlt<-melt(JLD)
JLE.mlt<-melt(JLE)
JLF.mlt<-melt(JLF)
JLG.mlt<-melt(JLG)
JLH.mlt<-melt(JLH)
ce02D.mlt<-melt(ce02D)
ce06A.mlt<-melt(ce06A)
ce06B.mlt<-melt(ce06B)
ce06C.mlt<-melt(ce06C)
ce06D.mlt<-melt(ce06D)
ce06E.mlt<-melt(ce06E)
SA.mlt<-melt(SA)
SB.mlt<-melt(SB)
SC.mlt<-melt(SC)
strA.mlt<-melt(strA)
roch1A1.mlt<-melt(roch1A1)
roch2A2.mlt<-melt(roch2A2)


d1A.mlt$lab<-"d1A"
d1B.mlt$lab<-"d1B"
d1C.mlt$lab<-"d1C"
d1D.mlt$lab<-"d1D"
d1E.mlt$lab<-"d1E"
d1F.mlt$lab<-"d1F"
d3tri.mlt$lab<-"d3tri"
d4A.mlt$lab<-"d4A"
hd1A.mlt$lab<-"hd1A"
hd1B.mlt$lab<-"hd1B"
hd2A.mlt$lab<-"hd2A"
JLA.mlt$lab<-"JLA"
JLB.mlt$lab<-"JLB"
JLC.mlt$lab<-"JLC"
JLD.mlt$lab<-"JLD"
JLE.mlt$lab<-"JLE"
JLF.mlt$lab<-"JLF"
JLG.mlt$lab<-"JLG"
JLH.mlt$lab<-"JLH"
ce02D.mlt$lab<-"ce02D"
ce06A.mlt$lab<-"ce06A"
ce06B.mlt$lab<-"ce06B"
ce06C.mlt$lab<-"ce06C"
ce06D.mlt$lab<-"ce06D"
ce06E.mlt$lab<-"ce06E"
SA.mlt$lab<-"SA"
SB.mlt$lab<-"SB"
SC.mlt$lab<-"SC"
strA.mlt$lab<-"strA"
roch1A1.mlt$lab<-"roch1A1"
roch2A2.mlt$lab<-"roch2A2"



maxgendists<-rbind(d1A.mlt,
                   d1B.mlt,
                   d1C.mlt,
                   d1D.mlt,
                   d1E.mlt,
                   d1F.mlt,
                   d3tri.mlt,
                   d4A.mlt,
                   hd1A.mlt,
                   hd1B.mlt,
                   hd2A.mlt,
                   JLA.mlt,
                   JLB.mlt,
                   JLC.mlt,
                   JLD.mlt,
                   JLE.mlt,
                   JLF.mlt,
                   JLG.mlt,
                   JLH.mlt,
                   ce02D.mlt,
                   ce06A.mlt,
                   ce06B.mlt,
                   ce06C.mlt,
                   ce06D.mlt,
                   ce06E.mlt,
                   SA.mlt,
                   SB.mlt,
                   SC.mlt,
                   strA.mlt,
                   roch1A1.mlt,
                   roch2A2.mlt)


library("dplyr")
#removes duplicates conditional on column 3 and 4 matching together
test<-distinct(maxgendists[,3:4])

clean.gendists<-test[test$value !=0,]
clean.gendists$row<-1:nrow(clean.gendists)

conts<-c(
  replicate(75, "US"),
  replicate(31, "EU"),
  replicate(10, "US")
)


range<-c(
  replicate(37, "CA"),
  replicate(38, "EC"),
  replicate(31, "EU"),
  replicate(10, "EC")
)

gendists<-cbind(clean.gendists, conts, range)

ggplot(gendists, aes(x=conts, y=value, fill=conts))+geom_boxplot()
ggplot(gendists, aes(x=range, y=value, fill=range))+geom_boxplot()




t.test(value ~ conts, data = gendists)

t.test(value ~ range, data = gendists[gendists$range == c("CA", "EC"),])
t.test(value ~ range, data = gendists[gendists$range == c("CA", "EU"),])
t.test(value ~ range, data = gendists[gendists$range == c("EU", "EC"),])

